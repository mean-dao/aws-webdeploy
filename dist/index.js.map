{"version":3,"file":"index.js","mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzzvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChlpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnxzytwBA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnxlaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnhUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvGA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnhDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdjhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvBA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxBA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvCA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtBA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzzFA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtNA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChDA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC3JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACztBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzBA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACbA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxCA;;;;;AAKA;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxzlhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtvtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACNA;AACA;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["../webpack://aws-web-deploy/./node_modules/@actions/core/lib/command.js","../webpack://aws-web-deploy/./node_modules/@actions/core/lib/core.js","../webpack://aws-web-deploy/./node_modules/@actions/core/lib/file-command.js","../webpack://aws-web-deploy/./node_modules/@actions/core/lib/oidc-utils.js","../webpack://aws-web-deploy/./node_modules/@actions/core/lib/path-utils.js","../webpack://aws-web-deploy/./node_modules/@actions/core/lib/summary.js","../webpack://aws-web-deploy/./node_modules/@actions/core/lib/utils.js","../webpack://aws-web-deploy/./node_modules/@actions/http-client/lib/auth.js","../webpack://aws-web-deploy/./node_modules/@actions/http-client/lib/index.js","../webpack://aws-web-deploy/./node_modules/@actions/http-client/lib/proxy.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/CloudFront.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/CloudFrontClient.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/AssociateAliasCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateCachePolicyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateCloudFrontOriginAccessIdentityCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateDistributionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateDistributionWithTagsCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateFieldLevelEncryptionConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateFieldLevelEncryptionProfileCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateFunctionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateInvalidationCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateKeyGroupCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateMonitoringSubscriptionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateOriginRequestPolicyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreatePublicKeyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateRealtimeLogConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateResponseHeadersPolicyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateStreamingDistributionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/CreateStreamingDistributionWithTagsCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteCachePolicyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteCloudFrontOriginAccessIdentityCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteDistributionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteFieldLevelEncryptionConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteFieldLevelEncryptionProfileCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteFunctionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteKeyGroupCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteMonitoringSubscriptionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteOriginRequestPolicyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeletePublicKeyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteRealtimeLogConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteResponseHeadersPolicyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DeleteStreamingDistributionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/DescribeFunctionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetCachePolicyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetCachePolicyConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetCloudFrontOriginAccessIdentityCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetCloudFrontOriginAccessIdentityConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetDistributionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetDistributionConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetFieldLevelEncryptionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetFieldLevelEncryptionConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetFieldLevelEncryptionProfileCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetFieldLevelEncryptionProfileConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetFunctionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetInvalidationCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetKeyGroupCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetKeyGroupConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetMonitoringSubscriptionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetOriginRequestPolicyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetOriginRequestPolicyConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetPublicKeyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetPublicKeyConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetRealtimeLogConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetResponseHeadersPolicyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetResponseHeadersPolicyConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetStreamingDistributionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/GetStreamingDistributionConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListCachePoliciesCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListCloudFrontOriginAccessIdentitiesCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListConflictingAliasesCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListDistributionsByCachePolicyIdCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListDistributionsByKeyGroupCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListDistributionsByOriginRequestPolicyIdCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListDistributionsByRealtimeLogConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListDistributionsByResponseHeadersPolicyIdCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListDistributionsByWebACLIdCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListDistributionsCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListFieldLevelEncryptionConfigsCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListFieldLevelEncryptionProfilesCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListFunctionsCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListInvalidationsCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListKeyGroupsCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListOriginRequestPoliciesCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListPublicKeysCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListRealtimeLogConfigsCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListResponseHeadersPoliciesCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListStreamingDistributionsCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/ListTagsForResourceCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/PublishFunctionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/TagResourceCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/TestFunctionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UntagResourceCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateCachePolicyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateCloudFrontOriginAccessIdentityCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateDistributionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateFieldLevelEncryptionConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateFieldLevelEncryptionProfileCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateFunctionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateKeyGroupCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateOriginRequestPolicyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdatePublicKeyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateRealtimeLogConfigCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateResponseHeadersPolicyCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/UpdateStreamingDistributionCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/commands/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/endpoints.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/models/CloudFrontServiceException.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/models/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/models/models_0.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/models/models_1.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/pagination/Interfaces.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/pagination/ListCloudFrontOriginAccessIdentitiesPaginator.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/pagination/ListDistributionsPaginator.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/pagination/ListInvalidationsPaginator.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/pagination/ListStreamingDistributionsPaginator.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/pagination/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/protocols/Aws_restXml.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/runtimeConfig.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/runtimeConfig.shared.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/waiters/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/waiters/waitForDistributionDeployed.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/waiters/waitForInvalidationCompleted.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-cloudfront/dist-cjs/waiters/waitForStreamingDistributionDeployed.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/SSO.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/SSOClient.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/GetRoleCredentialsCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/ListAccountRolesCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/ListAccountsCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/LogoutCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/endpoints.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/models/SSOServiceException.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/models/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/models/models_0.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/Interfaces.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/ListAccountRolesPaginator.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/ListAccountsPaginator.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/protocols/Aws_restJson1.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.shared.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/STS.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/STSClient.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/AssumeRoleCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/AssumeRoleWithSAMLCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/AssumeRoleWithWebIdentityCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/DecodeAuthorizationMessageCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetAccessKeyInfoCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetCallerIdentityCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetFederationTokenCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetSessionTokenCommand.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/defaultRoleAssumers.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/defaultStsRoleAssumers.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/endpoints.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/models/STSServiceException.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/models/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/models/models_0.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/protocols/Aws_query.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.shared.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/NodeUseFipsEndpointConfigOptions.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/resolveCustomEndpointsConfig.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/resolveEndpointsConfig.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/utils/getEndpointFromRegion.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/config.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/getRealRegion.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/isFipsRegion.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/resolveRegionConfig.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/PartitionHash.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/RegionHash.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/getHostnameFromVariants.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/getRegionInfo.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/getResolvedHostname.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/getResolvedPartition.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/getResolvedSigningRegion.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-env/dist-cjs/fromEnv.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-env/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/config/Endpoint.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/config/EndpointConfigOptions.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/config/EndpointMode.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/config/EndpointModeConfigOptions.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/fromContainerMetadata.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/fromInstanceMetadata.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/remoteProvider/ImdsCredentials.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/remoteProvider/RemoteProviderInit.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/remoteProvider/httpRequest.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/remoteProvider/retry.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/types.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/utils/getExtendedInstanceMetadataCredentials.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/utils/getInstanceMetadataEndpoint.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/utils/staticStabilityProvider.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/fromIni.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveAssumeRoleCredentials.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveCredentialSource.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveProfileData.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveSsoCredentials.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveStaticCredentials.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveWebIdentityCredentials.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-node/dist-cjs/defaultProvider.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-node/dist-cjs/remoteProvider.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/fromProcess.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/getValidatedProcessCredentials.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/resolveProcessCredentials.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/fromSSO.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/isSsoProfile.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/resolveSSOCredentials.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/types.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/validateSsoProfile.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromTokenFile.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromWebToken.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/hash-node/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/is-array-buffer/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-content-length/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-host-header/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-logger/dist-cjs/loggerMiddleware.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-recursion-detection/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-retry/dist-cjs/AdaptiveRetryStrategy.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-retry/dist-cjs/DefaultRateLimiter.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-retry/dist-cjs/StandardRetryStrategy.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-retry/dist-cjs/config.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-retry/dist-cjs/configurations.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-retry/dist-cjs/constants.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-retry/dist-cjs/defaultRetryQuota.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-retry/dist-cjs/delayDecider.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-retry/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-retry/dist-cjs/omitRetryHeadersMiddleware.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-retry/dist-cjs/retryDecider.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-retry/dist-cjs/retryMiddleware.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-retry/dist-cjs/types.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-sdk-sts/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-serde/dist-cjs/deserializerMiddleware.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-serde/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-serde/dist-cjs/serdePlugin.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-serde/dist-cjs/serializerMiddleware.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-signing/dist-cjs/configurations.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-signing/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-signing/dist-cjs/middleware.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-signing/dist-cjs/utils/getSkewCorrectedDate.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-signing/dist-cjs/utils/getUpdatedSystemClockOffset.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-signing/dist-cjs/utils/isClockSkewed.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-stack/dist-cjs/MiddlewareStack.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-stack/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/configurations.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/constants.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/user-agent-middleware.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/node-config-provider/dist-cjs/configLoader.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/node-config-provider/dist-cjs/fromEnv.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/node-config-provider/dist-cjs/fromSharedConfigFiles.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/node-config-provider/dist-cjs/fromStatic.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/node-config-provider/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/node-http-handler/dist-cjs/constants.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/node-http-handler/dist-cjs/get-transformed-headers.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/node-http-handler/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/node-http-handler/dist-cjs/node-http-handler.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/node-http-handler/dist-cjs/node-http2-handler.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/node-http-handler/dist-cjs/set-connection-timeout.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/node-http-handler/dist-cjs/set-socket-timeout.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/node-http-handler/dist-cjs/stream-collector/collector.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/node-http-handler/dist-cjs/stream-collector/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/node-http-handler/dist-cjs/write-request-body.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/property-provider/dist-cjs/CredentialsProviderError.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/property-provider/dist-cjs/ProviderError.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/property-provider/dist-cjs/chain.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/property-provider/dist-cjs/fromStatic.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/property-provider/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/property-provider/dist-cjs/memoize.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/protocol-http/dist-cjs/httpHandler.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/protocol-http/dist-cjs/httpRequest.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/protocol-http/dist-cjs/httpResponse.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/protocol-http/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/protocol-http/dist-cjs/isValidHostname.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/querystring-builder/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/querystring-parser/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/service-error-classification/dist-cjs/constants.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/service-error-classification/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/getConfigFilepath.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/getCredentialsFilepath.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/getHomeDir.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/getProfileData.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/getProfileName.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/getSSOTokenFilepath.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/getSSOTokenFromFile.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/loadSharedConfigFiles.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/parseIni.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/parseKnownFiles.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/slurpFile.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/types.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/signature-v4/dist-cjs/SignatureV4.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/signature-v4/dist-cjs/cloneRequest.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/signature-v4/dist-cjs/constants.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/signature-v4/dist-cjs/credentialDerivation.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/signature-v4/dist-cjs/getCanonicalHeaders.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/signature-v4/dist-cjs/getCanonicalQuery.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/signature-v4/dist-cjs/getPayloadHash.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/signature-v4/dist-cjs/headerUtil.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/signature-v4/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/signature-v4/dist-cjs/moveHeadersToQuery.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/signature-v4/dist-cjs/prepareRequest.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/signature-v4/dist-cjs/utilDate.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/client.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/command.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/constants.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/date-utils.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/default-error-handler.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/defaults-mode.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/emitWarningIfUnsupportedVersion.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/exceptions.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/extended-encode-uri-component.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/get-array-if-single-item.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/get-value-from-text-node.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/lazy-json.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/object-mapping.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/parse-utils.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/resolve-path.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/ser-utils.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/smithy-client/dist-cjs/split-every.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/url-parser/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-base64-node/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-body-length-node/dist-cjs/calculateBodyLength.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-body-length-node/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-buffer-from/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-config-provider/dist-cjs/booleanSelector.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-config-provider/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-defaults-mode-node/dist-cjs/constants.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-defaults-mode-node/dist-cjs/defaultsModeConfig.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-defaults-mode-node/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-defaults-mode-node/dist-cjs/resolveDefaultsModeConfig.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-hex-encoding/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-middleware/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-middleware/dist-cjs/normalizeProvider.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-uri-escape/dist-cjs/escape-uri-path.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-uri-escape/dist-cjs/escape-uri.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-uri-escape/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/is-crt-available.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-utf8-node/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-waiter/dist-cjs/createWaiter.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-waiter/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-waiter/dist-cjs/poller.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-waiter/dist-cjs/utils/index.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-waiter/dist-cjs/utils/sleep.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-waiter/dist-cjs/utils/validate.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/util-waiter/dist-cjs/waiter.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/xml-builder/dist-cjs/XmlNode.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/xml-builder/dist-cjs/XmlText.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/xml-builder/dist-cjs/escape-attribute.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/xml-builder/dist-cjs/escape-element.js","../webpack://aws-web-deploy/./node_modules/@aws-sdk/xml-builder/dist-cjs/index.js","../webpack://aws-web-deploy/./node_modules/entities/lib/decode.js","../webpack://aws-web-deploy/./node_modules/entities/lib/decode_codepoint.js","../webpack://aws-web-deploy/./node_modules/entities/lib/encode.js","../webpack://aws-web-deploy/./node_modules/entities/lib/index.js","../webpack://aws-web-deploy/./node_modules/fast-xml-parser/src/json2xml.js","../webpack://aws-web-deploy/./node_modules/fast-xml-parser/src/nimndata.js","../webpack://aws-web-deploy/./node_modules/fast-xml-parser/src/node2json.js","../webpack://aws-web-deploy/./node_modules/fast-xml-parser/src/node2json_str.js","../webpack://aws-web-deploy/./node_modules/fast-xml-parser/src/parser.js","../webpack://aws-web-deploy/./node_modules/fast-xml-parser/src/util.js","../webpack://aws-web-deploy/./node_modules/fast-xml-parser/src/validator.js","../webpack://aws-web-deploy/./node_modules/fast-xml-parser/src/xmlNode.js","../webpack://aws-web-deploy/./node_modules/fast-xml-parser/src/xmlstr2xmlnode.js","../webpack://aws-web-deploy/./node_modules/tslib/tslib.js","../webpack://aws-web-deploy/./node_modules/tunnel/index.js","../webpack://aws-web-deploy/./node_modules/tunnel/lib/tunnel.js","../webpack://aws-web-deploy/./node_modules/uuid/dist/index.js","../webpack://aws-web-deploy/./node_modules/uuid/dist/md5.js","../webpack://aws-web-deploy/./node_modules/uuid/dist/nil.js","../webpack://aws-web-deploy/./node_modules/uuid/dist/parse.js","../webpack://aws-web-deploy/./node_modules/uuid/dist/regex.js","../webpack://aws-web-deploy/./node_modules/uuid/dist/rng.js","../webpack://aws-web-deploy/./node_modules/uuid/dist/sha1.js","../webpack://aws-web-deploy/./node_modules/uuid/dist/stringify.js","../webpack://aws-web-deploy/./node_modules/uuid/dist/v1.js","../webpack://aws-web-deploy/./node_modules/uuid/dist/v3.js","../webpack://aws-web-deploy/./node_modules/uuid/dist/v35.js","../webpack://aws-web-deploy/./node_modules/uuid/dist/v4.js","../webpack://aws-web-deploy/./node_modules/uuid/dist/v5.js","../webpack://aws-web-deploy/./node_modules/uuid/dist/validate.js","../webpack://aws-web-deploy/./node_modules/uuid/dist/version.js","../webpack://aws-web-deploy/./node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack://aws-web-deploy/external node-commonjs \"assert\"","../webpack://aws-web-deploy/external node-commonjs \"buffer\"","../webpack://aws-web-deploy/external node-commonjs \"child_process\"","../webpack://aws-web-deploy/external node-commonjs \"crypto\"","../webpack://aws-web-deploy/external node-commonjs \"events\"","../webpack://aws-web-deploy/external node-commonjs \"fs\"","../webpack://aws-web-deploy/external node-commonjs \"http\"","../webpack://aws-web-deploy/external node-commonjs \"http2\"","../webpack://aws-web-deploy/external node-commonjs \"https\"","../webpack://aws-web-deploy/external node-commonjs \"net\"","../webpack://aws-web-deploy/external node-commonjs \"os\"","../webpack://aws-web-deploy/external node-commonjs \"path\"","../webpack://aws-web-deploy/external node-commonjs \"process\"","../webpack://aws-web-deploy/external node-commonjs \"stream\"","../webpack://aws-web-deploy/external node-commonjs \"tls\"","../webpack://aws-web-deploy/external node-commonjs \"url\"","../webpack://aws-web-deploy/external node-commonjs \"util\"","../webpack://aws-web-deploy/webpack/bootstrap","../webpack://aws-web-deploy/webpack/runtime/compat get default export","../webpack://aws-web-deploy/webpack/runtime/define property getters","../webpack://aws-web-deploy/webpack/runtime/hasOwnProperty shorthand","../webpack://aws-web-deploy/webpack/runtime/make namespace object","../webpack://aws-web-deploy/webpack/runtime/compat","../webpack://aws-web-deploy/./index.ts"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\nconst uuid_1 = require(\"uuid\");\nconst oidc_utils_1 = require(\"./oidc-utils\");\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = `ghadelimiter_${uuid_1.v4()}`;\n        // These should realistically never happen, but just in case someone finds a way to exploit uuid generation let's not allow keys or values that contain the delimiter.\n        if (name.includes(delimiter)) {\n            throw new Error(`Unexpected input: name should not contain the delimiter \"${delimiter}\"`);\n        }\n        if (convertedVal.includes(delimiter)) {\n            throw new Error(`Unexpected input: value should not contain the delimiter \"${delimiter}\"`);\n        }\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    return inputs;\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction error(message, properties = {}) {\n    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds a warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction warning(message, properties = {}) {\n    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Adds a notice issue\n * @param message notice issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction notice(message, properties = {}) {\n    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.notice = notice;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\nfunction getIDToken(aud) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield oidc_utils_1.OidcClient.getIDToken(aud);\n    });\n}\nexports.getIDToken = getIDToken;\n/**\n * Summary exports\n */\nvar summary_1 = require(\"./summary\");\nObject.defineProperty(exports, \"summary\", { enumerable: true, get: function () { return summary_1.summary; } });\n/**\n * @deprecated use core.summary\n */\nvar summary_2 = require(\"./summary\");\nObject.defineProperty(exports, \"markdownSummary\", { enumerable: true, get: function () { return summary_2.markdownSummary; } });\n/**\n * Path exports\n */\nvar path_utils_1 = require(\"./path-utils\");\nObject.defineProperty(exports, \"toPosixPath\", { enumerable: true, get: function () { return path_utils_1.toPosixPath; } });\nObject.defineProperty(exports, \"toWin32Path\", { enumerable: true, get: function () { return path_utils_1.toWin32Path; } });\nObject.defineProperty(exports, \"toPlatformPath\", { enumerable: true, get: function () { return path_utils_1.toPlatformPath; } });\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issueCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OidcClient = void 0;\nconst http_client_1 = require(\"@actions/http-client\");\nconst auth_1 = require(\"@actions/http-client/lib/auth\");\nconst core_1 = require(\"./core\");\nclass OidcClient {\n    static createHttpClient(allowRetry = true, maxRetry = 10) {\n        const requestOptions = {\n            allowRetries: allowRetry,\n            maxRetries: maxRetry\n        };\n        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);\n    }\n    static getRequestToken() {\n        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];\n        if (!token) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');\n        }\n        return token;\n    }\n    static getIDTokenUrl() {\n        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];\n        if (!runtimeUrl) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');\n        }\n        return runtimeUrl;\n    }\n    static getCall(id_token_url) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const httpclient = OidcClient.createHttpClient();\n            const res = yield httpclient\n                .getJson(id_token_url)\n                .catch(error => {\n                throw new Error(`Failed to get ID Token. \\n \n        Error Code : ${error.statusCode}\\n \n        Error Message: ${error.result.message}`);\n            });\n            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;\n            if (!id_token) {\n                throw new Error('Response json body do not have ID Token field');\n            }\n            return id_token;\n        });\n    }\n    static getIDToken(audience) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // New ID Token is requested from action service\n                let id_token_url = OidcClient.getIDTokenUrl();\n                if (audience) {\n                    const encodedAudience = encodeURIComponent(audience);\n                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;\n                }\n                core_1.debug(`ID token url is ${id_token_url}`);\n                const id_token = yield OidcClient.getCall(id_token_url);\n                core_1.setSecret(id_token);\n                return id_token;\n            }\n            catch (error) {\n                throw new Error(`Error message: ${error.message}`);\n            }\n        });\n    }\n}\nexports.OidcClient = OidcClient;\n//# sourceMappingURL=oidc-utils.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = void 0;\nconst path = __importStar(require(\"path\"));\n/**\n * toPosixPath converts the given path to the posix form. On Windows, \\\\ will be\n * replaced with /.\n *\n * @param pth. Path to transform.\n * @return string Posix path.\n */\nfunction toPosixPath(pth) {\n    return pth.replace(/[\\\\]/g, '/');\n}\nexports.toPosixPath = toPosixPath;\n/**\n * toWin32Path converts the given path to the win32 form. On Linux, / will be\n * replaced with \\\\.\n *\n * @param pth. Path to transform.\n * @return string Win32 path.\n */\nfunction toWin32Path(pth) {\n    return pth.replace(/[/]/g, '\\\\');\n}\nexports.toWin32Path = toWin32Path;\n/**\n * toPlatformPath converts the given path to a platform-specific path. It does\n * this by replacing instances of / and \\ with the platform-specific path\n * separator.\n *\n * @param pth The path to platformize.\n * @return string The platform-specific path.\n */\nfunction toPlatformPath(pth) {\n    return pth.replace(/[/\\\\]/g, path.sep);\n}\nexports.toPlatformPath = toPlatformPath;\n//# sourceMappingURL=path-utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;\nconst os_1 = require(\"os\");\nconst fs_1 = require(\"fs\");\nconst { access, appendFile, writeFile } = fs_1.promises;\nexports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';\nexports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';\nclass Summary {\n    constructor() {\n        this._buffer = '';\n    }\n    /**\n     * Finds the summary file path from the environment, rejects if env var is not found or file does not exist\n     * Also checks r/w permissions.\n     *\n     * @returns step summary file path\n     */\n    filePath() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._filePath) {\n                return this._filePath;\n            }\n            const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];\n            if (!pathFromEnv) {\n                throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);\n            }\n            try {\n                yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);\n            }\n            catch (_a) {\n                throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);\n            }\n            this._filePath = pathFromEnv;\n            return this._filePath;\n        });\n    }\n    /**\n     * Wraps content in an HTML tag, adding any HTML attributes\n     *\n     * @param {string} tag HTML tag to wrap\n     * @param {string | null} content content within the tag\n     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add\n     *\n     * @returns {string} content wrapped in HTML element\n     */\n    wrap(tag, content, attrs = {}) {\n        const htmlAttrs = Object.entries(attrs)\n            .map(([key, value]) => ` ${key}=\"${value}\"`)\n            .join('');\n        if (!content) {\n            return `<${tag}${htmlAttrs}>`;\n        }\n        return `<${tag}${htmlAttrs}>${content}</${tag}>`;\n    }\n    /**\n     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.\n     *\n     * @param {SummaryWriteOptions} [options] (optional) options for write operation\n     *\n     * @returns {Promise<Summary>} summary instance\n     */\n    write(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);\n            const filePath = yield this.filePath();\n            const writeFunc = overwrite ? writeFile : appendFile;\n            yield writeFunc(filePath, this._buffer, { encoding: 'utf8' });\n            return this.emptyBuffer();\n        });\n    }\n    /**\n     * Clears the summary buffer and wipes the summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.emptyBuffer().write({ overwrite: true });\n        });\n    }\n    /**\n     * Returns the current summary buffer as a string\n     *\n     * @returns {string} string of summary buffer\n     */\n    stringify() {\n        return this._buffer;\n    }\n    /**\n     * If the summary buffer is empty\n     *\n     * @returns {boolen} true if the buffer is empty\n     */\n    isEmptyBuffer() {\n        return this._buffer.length === 0;\n    }\n    /**\n     * Resets the summary buffer without writing to summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    emptyBuffer() {\n        this._buffer = '';\n        return this;\n    }\n    /**\n     * Adds raw text to the summary buffer\n     *\n     * @param {string} text content to add\n     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addRaw(text, addEOL = false) {\n        this._buffer += text;\n        return addEOL ? this.addEOL() : this;\n    }\n    /**\n     * Adds the operating system-specific end-of-line marker to the buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addEOL() {\n        return this.addRaw(os_1.EOL);\n    }\n    /**\n     * Adds an HTML codeblock to the summary buffer\n     *\n     * @param {string} code content to render within fenced code block\n     * @param {string} lang (optional) language to syntax highlight code\n     *\n     * @returns {Summary} summary instance\n     */\n    addCodeBlock(code, lang) {\n        const attrs = Object.assign({}, (lang && { lang }));\n        const element = this.wrap('pre', this.wrap('code', code), attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML list to the summary buffer\n     *\n     * @param {string[]} items list of items to render\n     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addList(items, ordered = false) {\n        const tag = ordered ? 'ol' : 'ul';\n        const listItems = items.map(item => this.wrap('li', item)).join('');\n        const element = this.wrap(tag, listItems);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML table to the summary buffer\n     *\n     * @param {SummaryTableCell[]} rows table rows\n     *\n     * @returns {Summary} summary instance\n     */\n    addTable(rows) {\n        const tableBody = rows\n            .map(row => {\n            const cells = row\n                .map(cell => {\n                if (typeof cell === 'string') {\n                    return this.wrap('td', cell);\n                }\n                const { header, data, colspan, rowspan } = cell;\n                const tag = header ? 'th' : 'td';\n                const attrs = Object.assign(Object.assign({}, (colspan && { colspan })), (rowspan && { rowspan }));\n                return this.wrap(tag, data, attrs);\n            })\n                .join('');\n            return this.wrap('tr', cells);\n        })\n            .join('');\n        const element = this.wrap('table', tableBody);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds a collapsable HTML details element to the summary buffer\n     *\n     * @param {string} label text for the closed state\n     * @param {string} content collapsable content\n     *\n     * @returns {Summary} summary instance\n     */\n    addDetails(label, content) {\n        const element = this.wrap('details', this.wrap('summary', label) + content);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML image tag to the summary buffer\n     *\n     * @param {string} src path to the image you to embed\n     * @param {string} alt text description of the image\n     * @param {SummaryImageOptions} options (optional) addition image attributes\n     *\n     * @returns {Summary} summary instance\n     */\n    addImage(src, alt, options) {\n        const { width, height } = options || {};\n        const attrs = Object.assign(Object.assign({}, (width && { width })), (height && { height }));\n        const element = this.wrap('img', null, Object.assign({ src, alt }, attrs));\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML section heading element\n     *\n     * @param {string} text heading text\n     * @param {number | string} [level=1] (optional) the heading level, default: 1\n     *\n     * @returns {Summary} summary instance\n     */\n    addHeading(text, level) {\n        const tag = `h${level}`;\n        const allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag)\n            ? tag\n            : 'h1';\n        const element = this.wrap(allowedTag, text);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML thematic break (<hr>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addSeparator() {\n        const element = this.wrap('hr', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML line break (<br>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addBreak() {\n        const element = this.wrap('br', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML blockquote to the summary buffer\n     *\n     * @param {string} text quote text\n     * @param {string} cite (optional) citation url\n     *\n     * @returns {Summary} summary instance\n     */\n    addQuote(text, cite) {\n        const attrs = Object.assign({}, (cite && { cite }));\n        const element = this.wrap('blockquote', text, attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML anchor tag to the summary buffer\n     *\n     * @param {string} text link text/content\n     * @param {string} href hyperlink\n     *\n     * @returns {Summary} summary instance\n     */\n    addLink(text, href) {\n        const element = this.wrap('a', text, { href });\n        return this.addRaw(element).addEOL();\n    }\n}\nconst _summary = new Summary();\n/**\n * @deprecated use `core.summary`\n */\nexports.markdownSummary = _summary;\nexports.summary = _summary;\n//# sourceMappingURL=summary.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandProperties = exports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n/**\n *\n * @param annotationProperties\n * @returns The command properties to send with the actual annotation command\n * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646\n */\nfunction toCommandProperties(annotationProperties) {\n    if (!Object.keys(annotationProperties).length) {\n        return {};\n    }\n    return {\n        title: annotationProperties.title,\n        file: annotationProperties.file,\n        line: annotationProperties.startLine,\n        endLine: annotationProperties.endLine,\n        col: annotationProperties.startColumn,\n        endColumn: annotationProperties.endColumn\n    };\n}\nexports.toCommandProperties = toCommandProperties;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = void 0;\nclass BasicCredentialHandler {\n    constructor(username, password) {\n        this.username = username;\n        this.password = password;\n    }\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString('base64')}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.BasicCredentialHandler = BasicCredentialHandler;\nclass BearerCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Bearer ${this.token}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.BearerCredentialHandler = BearerCredentialHandler;\nclass PersonalAccessTokenCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Basic ${Buffer.from(`PAT:${this.token}`).toString('base64')}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;\n//# sourceMappingURL=auth.js.map","\"use strict\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = void 0;\nconst http = __importStar(require(\"http\"));\nconst https = __importStar(require(\"https\"));\nconst pm = __importStar(require(\"./proxy\"));\nconst tunnel = __importStar(require(\"tunnel\"));\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let output = Buffer.alloc(0);\n                this.message.on('data', (chunk) => {\n                    output = Buffer.concat([output, chunk]);\n                });\n                this.message.on('end', () => {\n                    resolve(output.toString());\n                });\n            }));\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    const parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    get(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('GET', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    del(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('POST', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PUT', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    head(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request(verb, requestUrl, stream, additionalHeaders);\n        });\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    getJson(requestUrl, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            const res = yield this.get(requestUrl, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    postJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.post(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    putJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.put(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    patchJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.patch(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    request(verb, requestUrl, data, headers) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._disposed) {\n                throw new Error('Client has already been disposed.');\n            }\n            const parsedUrl = new URL(requestUrl);\n            let info = this._prepareRequest(verb, parsedUrl, headers);\n            // Only perform retries on reads since writes may not be idempotent.\n            const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb)\n                ? this._maxRetries + 1\n                : 1;\n            let numTries = 0;\n            let response;\n            do {\n                response = yield this.requestRaw(info, data);\n                // Check if it's an authentication challenge\n                if (response &&\n                    response.message &&\n                    response.message.statusCode === HttpCodes.Unauthorized) {\n                    let authenticationHandler;\n                    for (const handler of this.handlers) {\n                        if (handler.canHandleAuthentication(response)) {\n                            authenticationHandler = handler;\n                            break;\n                        }\n                    }\n                    if (authenticationHandler) {\n                        return authenticationHandler.handleAuthentication(this, info, data);\n                    }\n                    else {\n                        // We have received an unauthorized response but have no handlers to handle it.\n                        // Let the response return to the caller.\n                        return response;\n                    }\n                }\n                let redirectsRemaining = this._maxRedirects;\n                while (response.message.statusCode &&\n                    HttpRedirectCodes.includes(response.message.statusCode) &&\n                    this._allowRedirects &&\n                    redirectsRemaining > 0) {\n                    const redirectUrl = response.message.headers['location'];\n                    if (!redirectUrl) {\n                        // if there's no location to redirect to, we won't\n                        break;\n                    }\n                    const parsedRedirectUrl = new URL(redirectUrl);\n                    if (parsedUrl.protocol === 'https:' &&\n                        parsedUrl.protocol !== parsedRedirectUrl.protocol &&\n                        !this._allowRedirectDowngrade) {\n                        throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                    }\n                    // we need to finish reading the response before reassigning response\n                    // which will leak the open socket.\n                    yield response.readBody();\n                    // strip authorization header if redirected to a different hostname\n                    if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                        for (const header in headers) {\n                            // header names are case insensitive\n                            if (header.toLowerCase() === 'authorization') {\n                                delete headers[header];\n                            }\n                        }\n                    }\n                    // let's make the request with the new redirectUrl\n                    info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                    response = yield this.requestRaw(info, data);\n                    redirectsRemaining--;\n                }\n                if (!response.message.statusCode ||\n                    !HttpResponseRetryCodes.includes(response.message.statusCode)) {\n                    // If not a retry code, return immediately instead of retrying\n                    return response;\n                }\n                numTries += 1;\n                if (numTries < maxTries) {\n                    yield response.readBody();\n                    yield this._performExponentialBackoff(numTries);\n                }\n            } while (numTries < maxTries);\n            return response;\n        });\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                function callbackForResult(err, res) {\n                    if (err) {\n                        reject(err);\n                    }\n                    else if (!res) {\n                        // If `err` is not passed, then `res` must be passed.\n                        reject(new Error('Unknown error'));\n                    }\n                    else {\n                        resolve(res);\n                    }\n                }\n                this.requestRawWithCallback(info, data, callbackForResult);\n            });\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        if (typeof data === 'string') {\n            if (!info.options.headers) {\n                info.options.headers = {};\n            }\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        function handleResult(err, res) {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        }\n        const req = info.httpModule.request(info.options, (msg) => {\n            const res = new HttpClientResponse(msg);\n            handleResult(undefined, res);\n        });\n        let socket;\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error(`Request timeout: ${info.options.path}`));\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        const parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            for (const handler of this.handlers) {\n                handler.prepareRequest(info.options);\n            }\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        const proxyUrl = pm.getProxyUrl(parsedUrl);\n        const useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        // This is `useProxy` again, but we need to check `proxyURl` directly for TypeScripts's flow analysis.\n        if (proxyUrl && proxyUrl.hostname) {\n            const agentOptions = {\n                maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: Object.assign(Object.assign({}, ((proxyUrl.username || proxyUrl.password) && {\n                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`\n                })), { host: proxyUrl.hostname, port: proxyUrl.port })\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        return __awaiter(this, void 0, void 0, function* () {\n            retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n            const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n            return new Promise(resolve => setTimeout(() => resolve(), ms));\n        });\n    }\n    _processResponse(res, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                const statusCode = res.message.statusCode || 0;\n                const response = {\n                    statusCode,\n                    result: null,\n                    headers: {}\n                };\n                // not found leads to null obj returned\n                if (statusCode === HttpCodes.NotFound) {\n                    resolve(response);\n                }\n                // get the result from the body\n                function dateTimeDeserializer(key, value) {\n                    if (typeof value === 'string') {\n                        const a = new Date(value);\n                        if (!isNaN(a.valueOf())) {\n                            return a;\n                        }\n                    }\n                    return value;\n                }\n                let obj;\n                let contents;\n                try {\n                    contents = yield res.readBody();\n                    if (contents && contents.length > 0) {\n                        if (options && options.deserializeDates) {\n                            obj = JSON.parse(contents, dateTimeDeserializer);\n                        }\n                        else {\n                            obj = JSON.parse(contents);\n                        }\n                        response.result = obj;\n                    }\n                    response.headers = res.message.headers;\n                }\n                catch (err) {\n                    // Invalid resource (contents not json);  leaving result obj null\n                }\n                // note that 3xx redirects are handled by the http layer.\n                if (statusCode > 299) {\n                    let msg;\n                    // if exception/error in body, attempt to get better error\n                    if (obj && obj.message) {\n                        msg = obj.message;\n                    }\n                    else if (contents && contents.length > 0) {\n                        // it may be the case that the exception is in the body message as string\n                        msg = contents;\n                    }\n                    else {\n                        msg = `Failed request: (${statusCode})`;\n                    }\n                    const err = new HttpClientError(msg, statusCode);\n                    err.result = response.result;\n                    reject(err);\n                }\n                else {\n                    resolve(response);\n                }\n            }));\n        });\n    }\n}\nexports.HttpClient = HttpClient;\nconst lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkBypass = exports.getProxyUrl = void 0;\nfunction getProxyUrl(reqUrl) {\n    const usingSsl = reqUrl.protocol === 'https:';\n    if (checkBypass(reqUrl)) {\n        return undefined;\n    }\n    const proxyVar = (() => {\n        if (usingSsl) {\n            return process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n        }\n        else {\n            return process.env['http_proxy'] || process.env['HTTP_PROXY'];\n        }\n    })();\n    if (proxyVar) {\n        return new URL(proxyVar);\n    }\n    else {\n        return undefined;\n    }\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    const noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    const upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (const upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n//# sourceMappingURL=proxy.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CloudFront = void 0;\nconst CloudFrontClient_1 = require(\"./CloudFrontClient\");\nconst AssociateAliasCommand_1 = require(\"./commands/AssociateAliasCommand\");\nconst CreateCachePolicyCommand_1 = require(\"./commands/CreateCachePolicyCommand\");\nconst CreateCloudFrontOriginAccessIdentityCommand_1 = require(\"./commands/CreateCloudFrontOriginAccessIdentityCommand\");\nconst CreateDistributionCommand_1 = require(\"./commands/CreateDistributionCommand\");\nconst CreateDistributionWithTagsCommand_1 = require(\"./commands/CreateDistributionWithTagsCommand\");\nconst CreateFieldLevelEncryptionConfigCommand_1 = require(\"./commands/CreateFieldLevelEncryptionConfigCommand\");\nconst CreateFieldLevelEncryptionProfileCommand_1 = require(\"./commands/CreateFieldLevelEncryptionProfileCommand\");\nconst CreateFunctionCommand_1 = require(\"./commands/CreateFunctionCommand\");\nconst CreateInvalidationCommand_1 = require(\"./commands/CreateInvalidationCommand\");\nconst CreateKeyGroupCommand_1 = require(\"./commands/CreateKeyGroupCommand\");\nconst CreateMonitoringSubscriptionCommand_1 = require(\"./commands/CreateMonitoringSubscriptionCommand\");\nconst CreateOriginRequestPolicyCommand_1 = require(\"./commands/CreateOriginRequestPolicyCommand\");\nconst CreatePublicKeyCommand_1 = require(\"./commands/CreatePublicKeyCommand\");\nconst CreateRealtimeLogConfigCommand_1 = require(\"./commands/CreateRealtimeLogConfigCommand\");\nconst CreateResponseHeadersPolicyCommand_1 = require(\"./commands/CreateResponseHeadersPolicyCommand\");\nconst CreateStreamingDistributionCommand_1 = require(\"./commands/CreateStreamingDistributionCommand\");\nconst CreateStreamingDistributionWithTagsCommand_1 = require(\"./commands/CreateStreamingDistributionWithTagsCommand\");\nconst DeleteCachePolicyCommand_1 = require(\"./commands/DeleteCachePolicyCommand\");\nconst DeleteCloudFrontOriginAccessIdentityCommand_1 = require(\"./commands/DeleteCloudFrontOriginAccessIdentityCommand\");\nconst DeleteDistributionCommand_1 = require(\"./commands/DeleteDistributionCommand\");\nconst DeleteFieldLevelEncryptionConfigCommand_1 = require(\"./commands/DeleteFieldLevelEncryptionConfigCommand\");\nconst DeleteFieldLevelEncryptionProfileCommand_1 = require(\"./commands/DeleteFieldLevelEncryptionProfileCommand\");\nconst DeleteFunctionCommand_1 = require(\"./commands/DeleteFunctionCommand\");\nconst DeleteKeyGroupCommand_1 = require(\"./commands/DeleteKeyGroupCommand\");\nconst DeleteMonitoringSubscriptionCommand_1 = require(\"./commands/DeleteMonitoringSubscriptionCommand\");\nconst DeleteOriginRequestPolicyCommand_1 = require(\"./commands/DeleteOriginRequestPolicyCommand\");\nconst DeletePublicKeyCommand_1 = require(\"./commands/DeletePublicKeyCommand\");\nconst DeleteRealtimeLogConfigCommand_1 = require(\"./commands/DeleteRealtimeLogConfigCommand\");\nconst DeleteResponseHeadersPolicyCommand_1 = require(\"./commands/DeleteResponseHeadersPolicyCommand\");\nconst DeleteStreamingDistributionCommand_1 = require(\"./commands/DeleteStreamingDistributionCommand\");\nconst DescribeFunctionCommand_1 = require(\"./commands/DescribeFunctionCommand\");\nconst GetCachePolicyCommand_1 = require(\"./commands/GetCachePolicyCommand\");\nconst GetCachePolicyConfigCommand_1 = require(\"./commands/GetCachePolicyConfigCommand\");\nconst GetCloudFrontOriginAccessIdentityCommand_1 = require(\"./commands/GetCloudFrontOriginAccessIdentityCommand\");\nconst GetCloudFrontOriginAccessIdentityConfigCommand_1 = require(\"./commands/GetCloudFrontOriginAccessIdentityConfigCommand\");\nconst GetDistributionCommand_1 = require(\"./commands/GetDistributionCommand\");\nconst GetDistributionConfigCommand_1 = require(\"./commands/GetDistributionConfigCommand\");\nconst GetFieldLevelEncryptionCommand_1 = require(\"./commands/GetFieldLevelEncryptionCommand\");\nconst GetFieldLevelEncryptionConfigCommand_1 = require(\"./commands/GetFieldLevelEncryptionConfigCommand\");\nconst GetFieldLevelEncryptionProfileCommand_1 = require(\"./commands/GetFieldLevelEncryptionProfileCommand\");\nconst GetFieldLevelEncryptionProfileConfigCommand_1 = require(\"./commands/GetFieldLevelEncryptionProfileConfigCommand\");\nconst GetFunctionCommand_1 = require(\"./commands/GetFunctionCommand\");\nconst GetInvalidationCommand_1 = require(\"./commands/GetInvalidationCommand\");\nconst GetKeyGroupCommand_1 = require(\"./commands/GetKeyGroupCommand\");\nconst GetKeyGroupConfigCommand_1 = require(\"./commands/GetKeyGroupConfigCommand\");\nconst GetMonitoringSubscriptionCommand_1 = require(\"./commands/GetMonitoringSubscriptionCommand\");\nconst GetOriginRequestPolicyCommand_1 = require(\"./commands/GetOriginRequestPolicyCommand\");\nconst GetOriginRequestPolicyConfigCommand_1 = require(\"./commands/GetOriginRequestPolicyConfigCommand\");\nconst GetPublicKeyCommand_1 = require(\"./commands/GetPublicKeyCommand\");\nconst GetPublicKeyConfigCommand_1 = require(\"./commands/GetPublicKeyConfigCommand\");\nconst GetRealtimeLogConfigCommand_1 = require(\"./commands/GetRealtimeLogConfigCommand\");\nconst GetResponseHeadersPolicyCommand_1 = require(\"./commands/GetResponseHeadersPolicyCommand\");\nconst GetResponseHeadersPolicyConfigCommand_1 = require(\"./commands/GetResponseHeadersPolicyConfigCommand\");\nconst GetStreamingDistributionCommand_1 = require(\"./commands/GetStreamingDistributionCommand\");\nconst GetStreamingDistributionConfigCommand_1 = require(\"./commands/GetStreamingDistributionConfigCommand\");\nconst ListCachePoliciesCommand_1 = require(\"./commands/ListCachePoliciesCommand\");\nconst ListCloudFrontOriginAccessIdentitiesCommand_1 = require(\"./commands/ListCloudFrontOriginAccessIdentitiesCommand\");\nconst ListConflictingAliasesCommand_1 = require(\"./commands/ListConflictingAliasesCommand\");\nconst ListDistributionsByCachePolicyIdCommand_1 = require(\"./commands/ListDistributionsByCachePolicyIdCommand\");\nconst ListDistributionsByKeyGroupCommand_1 = require(\"./commands/ListDistributionsByKeyGroupCommand\");\nconst ListDistributionsByOriginRequestPolicyIdCommand_1 = require(\"./commands/ListDistributionsByOriginRequestPolicyIdCommand\");\nconst ListDistributionsByRealtimeLogConfigCommand_1 = require(\"./commands/ListDistributionsByRealtimeLogConfigCommand\");\nconst ListDistributionsByResponseHeadersPolicyIdCommand_1 = require(\"./commands/ListDistributionsByResponseHeadersPolicyIdCommand\");\nconst ListDistributionsByWebACLIdCommand_1 = require(\"./commands/ListDistributionsByWebACLIdCommand\");\nconst ListDistributionsCommand_1 = require(\"./commands/ListDistributionsCommand\");\nconst ListFieldLevelEncryptionConfigsCommand_1 = require(\"./commands/ListFieldLevelEncryptionConfigsCommand\");\nconst ListFieldLevelEncryptionProfilesCommand_1 = require(\"./commands/ListFieldLevelEncryptionProfilesCommand\");\nconst ListFunctionsCommand_1 = require(\"./commands/ListFunctionsCommand\");\nconst ListInvalidationsCommand_1 = require(\"./commands/ListInvalidationsCommand\");\nconst ListKeyGroupsCommand_1 = require(\"./commands/ListKeyGroupsCommand\");\nconst ListOriginRequestPoliciesCommand_1 = require(\"./commands/ListOriginRequestPoliciesCommand\");\nconst ListPublicKeysCommand_1 = require(\"./commands/ListPublicKeysCommand\");\nconst ListRealtimeLogConfigsCommand_1 = require(\"./commands/ListRealtimeLogConfigsCommand\");\nconst ListResponseHeadersPoliciesCommand_1 = require(\"./commands/ListResponseHeadersPoliciesCommand\");\nconst ListStreamingDistributionsCommand_1 = require(\"./commands/ListStreamingDistributionsCommand\");\nconst ListTagsForResourceCommand_1 = require(\"./commands/ListTagsForResourceCommand\");\nconst PublishFunctionCommand_1 = require(\"./commands/PublishFunctionCommand\");\nconst TagResourceCommand_1 = require(\"./commands/TagResourceCommand\");\nconst TestFunctionCommand_1 = require(\"./commands/TestFunctionCommand\");\nconst UntagResourceCommand_1 = require(\"./commands/UntagResourceCommand\");\nconst UpdateCachePolicyCommand_1 = require(\"./commands/UpdateCachePolicyCommand\");\nconst UpdateCloudFrontOriginAccessIdentityCommand_1 = require(\"./commands/UpdateCloudFrontOriginAccessIdentityCommand\");\nconst UpdateDistributionCommand_1 = require(\"./commands/UpdateDistributionCommand\");\nconst UpdateFieldLevelEncryptionConfigCommand_1 = require(\"./commands/UpdateFieldLevelEncryptionConfigCommand\");\nconst UpdateFieldLevelEncryptionProfileCommand_1 = require(\"./commands/UpdateFieldLevelEncryptionProfileCommand\");\nconst UpdateFunctionCommand_1 = require(\"./commands/UpdateFunctionCommand\");\nconst UpdateKeyGroupCommand_1 = require(\"./commands/UpdateKeyGroupCommand\");\nconst UpdateOriginRequestPolicyCommand_1 = require(\"./commands/UpdateOriginRequestPolicyCommand\");\nconst UpdatePublicKeyCommand_1 = require(\"./commands/UpdatePublicKeyCommand\");\nconst UpdateRealtimeLogConfigCommand_1 = require(\"./commands/UpdateRealtimeLogConfigCommand\");\nconst UpdateResponseHeadersPolicyCommand_1 = require(\"./commands/UpdateResponseHeadersPolicyCommand\");\nconst UpdateStreamingDistributionCommand_1 = require(\"./commands/UpdateStreamingDistributionCommand\");\nclass CloudFront extends CloudFrontClient_1.CloudFrontClient {\n    associateAlias(args, optionsOrCb, cb) {\n        const command = new AssociateAliasCommand_1.AssociateAliasCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createCachePolicy(args, optionsOrCb, cb) {\n        const command = new CreateCachePolicyCommand_1.CreateCachePolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createCloudFrontOriginAccessIdentity(args, optionsOrCb, cb) {\n        const command = new CreateCloudFrontOriginAccessIdentityCommand_1.CreateCloudFrontOriginAccessIdentityCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createDistribution(args, optionsOrCb, cb) {\n        const command = new CreateDistributionCommand_1.CreateDistributionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createDistributionWithTags(args, optionsOrCb, cb) {\n        const command = new CreateDistributionWithTagsCommand_1.CreateDistributionWithTagsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createFieldLevelEncryptionConfig(args, optionsOrCb, cb) {\n        const command = new CreateFieldLevelEncryptionConfigCommand_1.CreateFieldLevelEncryptionConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createFieldLevelEncryptionProfile(args, optionsOrCb, cb) {\n        const command = new CreateFieldLevelEncryptionProfileCommand_1.CreateFieldLevelEncryptionProfileCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createFunction(args, optionsOrCb, cb) {\n        const command = new CreateFunctionCommand_1.CreateFunctionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createInvalidation(args, optionsOrCb, cb) {\n        const command = new CreateInvalidationCommand_1.CreateInvalidationCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createKeyGroup(args, optionsOrCb, cb) {\n        const command = new CreateKeyGroupCommand_1.CreateKeyGroupCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createMonitoringSubscription(args, optionsOrCb, cb) {\n        const command = new CreateMonitoringSubscriptionCommand_1.CreateMonitoringSubscriptionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createOriginRequestPolicy(args, optionsOrCb, cb) {\n        const command = new CreateOriginRequestPolicyCommand_1.CreateOriginRequestPolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createPublicKey(args, optionsOrCb, cb) {\n        const command = new CreatePublicKeyCommand_1.CreatePublicKeyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createRealtimeLogConfig(args, optionsOrCb, cb) {\n        const command = new CreateRealtimeLogConfigCommand_1.CreateRealtimeLogConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createResponseHeadersPolicy(args, optionsOrCb, cb) {\n        const command = new CreateResponseHeadersPolicyCommand_1.CreateResponseHeadersPolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createStreamingDistribution(args, optionsOrCb, cb) {\n        const command = new CreateStreamingDistributionCommand_1.CreateStreamingDistributionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createStreamingDistributionWithTags(args, optionsOrCb, cb) {\n        const command = new CreateStreamingDistributionWithTagsCommand_1.CreateStreamingDistributionWithTagsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteCachePolicy(args, optionsOrCb, cb) {\n        const command = new DeleteCachePolicyCommand_1.DeleteCachePolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteCloudFrontOriginAccessIdentity(args, optionsOrCb, cb) {\n        const command = new DeleteCloudFrontOriginAccessIdentityCommand_1.DeleteCloudFrontOriginAccessIdentityCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteDistribution(args, optionsOrCb, cb) {\n        const command = new DeleteDistributionCommand_1.DeleteDistributionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteFieldLevelEncryptionConfig(args, optionsOrCb, cb) {\n        const command = new DeleteFieldLevelEncryptionConfigCommand_1.DeleteFieldLevelEncryptionConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteFieldLevelEncryptionProfile(args, optionsOrCb, cb) {\n        const command = new DeleteFieldLevelEncryptionProfileCommand_1.DeleteFieldLevelEncryptionProfileCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteFunction(args, optionsOrCb, cb) {\n        const command = new DeleteFunctionCommand_1.DeleteFunctionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteKeyGroup(args, optionsOrCb, cb) {\n        const command = new DeleteKeyGroupCommand_1.DeleteKeyGroupCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteMonitoringSubscription(args, optionsOrCb, cb) {\n        const command = new DeleteMonitoringSubscriptionCommand_1.DeleteMonitoringSubscriptionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteOriginRequestPolicy(args, optionsOrCb, cb) {\n        const command = new DeleteOriginRequestPolicyCommand_1.DeleteOriginRequestPolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deletePublicKey(args, optionsOrCb, cb) {\n        const command = new DeletePublicKeyCommand_1.DeletePublicKeyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteRealtimeLogConfig(args, optionsOrCb, cb) {\n        const command = new DeleteRealtimeLogConfigCommand_1.DeleteRealtimeLogConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteResponseHeadersPolicy(args, optionsOrCb, cb) {\n        const command = new DeleteResponseHeadersPolicyCommand_1.DeleteResponseHeadersPolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteStreamingDistribution(args, optionsOrCb, cb) {\n        const command = new DeleteStreamingDistributionCommand_1.DeleteStreamingDistributionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeFunction(args, optionsOrCb, cb) {\n        const command = new DescribeFunctionCommand_1.DescribeFunctionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getCachePolicy(args, optionsOrCb, cb) {\n        const command = new GetCachePolicyCommand_1.GetCachePolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getCachePolicyConfig(args, optionsOrCb, cb) {\n        const command = new GetCachePolicyConfigCommand_1.GetCachePolicyConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getCloudFrontOriginAccessIdentity(args, optionsOrCb, cb) {\n        const command = new GetCloudFrontOriginAccessIdentityCommand_1.GetCloudFrontOriginAccessIdentityCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getCloudFrontOriginAccessIdentityConfig(args, optionsOrCb, cb) {\n        const command = new GetCloudFrontOriginAccessIdentityConfigCommand_1.GetCloudFrontOriginAccessIdentityConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getDistribution(args, optionsOrCb, cb) {\n        const command = new GetDistributionCommand_1.GetDistributionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getDistributionConfig(args, optionsOrCb, cb) {\n        const command = new GetDistributionConfigCommand_1.GetDistributionConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getFieldLevelEncryption(args, optionsOrCb, cb) {\n        const command = new GetFieldLevelEncryptionCommand_1.GetFieldLevelEncryptionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getFieldLevelEncryptionConfig(args, optionsOrCb, cb) {\n        const command = new GetFieldLevelEncryptionConfigCommand_1.GetFieldLevelEncryptionConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getFieldLevelEncryptionProfile(args, optionsOrCb, cb) {\n        const command = new GetFieldLevelEncryptionProfileCommand_1.GetFieldLevelEncryptionProfileCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getFieldLevelEncryptionProfileConfig(args, optionsOrCb, cb) {\n        const command = new GetFieldLevelEncryptionProfileConfigCommand_1.GetFieldLevelEncryptionProfileConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getFunction(args, optionsOrCb, cb) {\n        const command = new GetFunctionCommand_1.GetFunctionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getInvalidation(args, optionsOrCb, cb) {\n        const command = new GetInvalidationCommand_1.GetInvalidationCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getKeyGroup(args, optionsOrCb, cb) {\n        const command = new GetKeyGroupCommand_1.GetKeyGroupCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getKeyGroupConfig(args, optionsOrCb, cb) {\n        const command = new GetKeyGroupConfigCommand_1.GetKeyGroupConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getMonitoringSubscription(args, optionsOrCb, cb) {\n        const command = new GetMonitoringSubscriptionCommand_1.GetMonitoringSubscriptionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getOriginRequestPolicy(args, optionsOrCb, cb) {\n        const command = new GetOriginRequestPolicyCommand_1.GetOriginRequestPolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getOriginRequestPolicyConfig(args, optionsOrCb, cb) {\n        const command = new GetOriginRequestPolicyConfigCommand_1.GetOriginRequestPolicyConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getPublicKey(args, optionsOrCb, cb) {\n        const command = new GetPublicKeyCommand_1.GetPublicKeyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getPublicKeyConfig(args, optionsOrCb, cb) {\n        const command = new GetPublicKeyConfigCommand_1.GetPublicKeyConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getRealtimeLogConfig(args, optionsOrCb, cb) {\n        const command = new GetRealtimeLogConfigCommand_1.GetRealtimeLogConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getResponseHeadersPolicy(args, optionsOrCb, cb) {\n        const command = new GetResponseHeadersPolicyCommand_1.GetResponseHeadersPolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getResponseHeadersPolicyConfig(args, optionsOrCb, cb) {\n        const command = new GetResponseHeadersPolicyConfigCommand_1.GetResponseHeadersPolicyConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getStreamingDistribution(args, optionsOrCb, cb) {\n        const command = new GetStreamingDistributionCommand_1.GetStreamingDistributionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getStreamingDistributionConfig(args, optionsOrCb, cb) {\n        const command = new GetStreamingDistributionConfigCommand_1.GetStreamingDistributionConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listCachePolicies(args, optionsOrCb, cb) {\n        const command = new ListCachePoliciesCommand_1.ListCachePoliciesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listCloudFrontOriginAccessIdentities(args, optionsOrCb, cb) {\n        const command = new ListCloudFrontOriginAccessIdentitiesCommand_1.ListCloudFrontOriginAccessIdentitiesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listConflictingAliases(args, optionsOrCb, cb) {\n        const command = new ListConflictingAliasesCommand_1.ListConflictingAliasesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listDistributions(args, optionsOrCb, cb) {\n        const command = new ListDistributionsCommand_1.ListDistributionsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listDistributionsByCachePolicyId(args, optionsOrCb, cb) {\n        const command = new ListDistributionsByCachePolicyIdCommand_1.ListDistributionsByCachePolicyIdCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listDistributionsByKeyGroup(args, optionsOrCb, cb) {\n        const command = new ListDistributionsByKeyGroupCommand_1.ListDistributionsByKeyGroupCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listDistributionsByOriginRequestPolicyId(args, optionsOrCb, cb) {\n        const command = new ListDistributionsByOriginRequestPolicyIdCommand_1.ListDistributionsByOriginRequestPolicyIdCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listDistributionsByRealtimeLogConfig(args, optionsOrCb, cb) {\n        const command = new ListDistributionsByRealtimeLogConfigCommand_1.ListDistributionsByRealtimeLogConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listDistributionsByResponseHeadersPolicyId(args, optionsOrCb, cb) {\n        const command = new ListDistributionsByResponseHeadersPolicyIdCommand_1.ListDistributionsByResponseHeadersPolicyIdCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listDistributionsByWebACLId(args, optionsOrCb, cb) {\n        const command = new ListDistributionsByWebACLIdCommand_1.ListDistributionsByWebACLIdCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listFieldLevelEncryptionConfigs(args, optionsOrCb, cb) {\n        const command = new ListFieldLevelEncryptionConfigsCommand_1.ListFieldLevelEncryptionConfigsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listFieldLevelEncryptionProfiles(args, optionsOrCb, cb) {\n        const command = new ListFieldLevelEncryptionProfilesCommand_1.ListFieldLevelEncryptionProfilesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listFunctions(args, optionsOrCb, cb) {\n        const command = new ListFunctionsCommand_1.ListFunctionsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listInvalidations(args, optionsOrCb, cb) {\n        const command = new ListInvalidationsCommand_1.ListInvalidationsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listKeyGroups(args, optionsOrCb, cb) {\n        const command = new ListKeyGroupsCommand_1.ListKeyGroupsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listOriginRequestPolicies(args, optionsOrCb, cb) {\n        const command = new ListOriginRequestPoliciesCommand_1.ListOriginRequestPoliciesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listPublicKeys(args, optionsOrCb, cb) {\n        const command = new ListPublicKeysCommand_1.ListPublicKeysCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listRealtimeLogConfigs(args, optionsOrCb, cb) {\n        const command = new ListRealtimeLogConfigsCommand_1.ListRealtimeLogConfigsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listResponseHeadersPolicies(args, optionsOrCb, cb) {\n        const command = new ListResponseHeadersPoliciesCommand_1.ListResponseHeadersPoliciesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listStreamingDistributions(args, optionsOrCb, cb) {\n        const command = new ListStreamingDistributionsCommand_1.ListStreamingDistributionsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listTagsForResource(args, optionsOrCb, cb) {\n        const command = new ListTagsForResourceCommand_1.ListTagsForResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    publishFunction(args, optionsOrCb, cb) {\n        const command = new PublishFunctionCommand_1.PublishFunctionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    tagResource(args, optionsOrCb, cb) {\n        const command = new TagResourceCommand_1.TagResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    testFunction(args, optionsOrCb, cb) {\n        const command = new TestFunctionCommand_1.TestFunctionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    untagResource(args, optionsOrCb, cb) {\n        const command = new UntagResourceCommand_1.UntagResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateCachePolicy(args, optionsOrCb, cb) {\n        const command = new UpdateCachePolicyCommand_1.UpdateCachePolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateCloudFrontOriginAccessIdentity(args, optionsOrCb, cb) {\n        const command = new UpdateCloudFrontOriginAccessIdentityCommand_1.UpdateCloudFrontOriginAccessIdentityCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateDistribution(args, optionsOrCb, cb) {\n        const command = new UpdateDistributionCommand_1.UpdateDistributionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateFieldLevelEncryptionConfig(args, optionsOrCb, cb) {\n        const command = new UpdateFieldLevelEncryptionConfigCommand_1.UpdateFieldLevelEncryptionConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateFieldLevelEncryptionProfile(args, optionsOrCb, cb) {\n        const command = new UpdateFieldLevelEncryptionProfileCommand_1.UpdateFieldLevelEncryptionProfileCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateFunction(args, optionsOrCb, cb) {\n        const command = new UpdateFunctionCommand_1.UpdateFunctionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateKeyGroup(args, optionsOrCb, cb) {\n        const command = new UpdateKeyGroupCommand_1.UpdateKeyGroupCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateOriginRequestPolicy(args, optionsOrCb, cb) {\n        const command = new UpdateOriginRequestPolicyCommand_1.UpdateOriginRequestPolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updatePublicKey(args, optionsOrCb, cb) {\n        const command = new UpdatePublicKeyCommand_1.UpdatePublicKeyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateRealtimeLogConfig(args, optionsOrCb, cb) {\n        const command = new UpdateRealtimeLogConfigCommand_1.UpdateRealtimeLogConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateResponseHeadersPolicy(args, optionsOrCb, cb) {\n        const command = new UpdateResponseHeadersPolicyCommand_1.UpdateResponseHeadersPolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateStreamingDistribution(args, optionsOrCb, cb) {\n        const command = new UpdateStreamingDistributionCommand_1.UpdateStreamingDistributionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\nexports.CloudFront = CloudFront;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CloudFrontClient = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst middleware_content_length_1 = require(\"@aws-sdk/middleware-content-length\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_recursion_detection_1 = require(\"@aws-sdk/middleware-recursion-detection\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nclass CloudFrontClient extends smithy_client_1.Client {\n    constructor(configuration) {\n        const _config_0 = (0, runtimeConfig_1.getRuntimeConfig)(configuration);\n        const _config_1 = (0, config_resolver_1.resolveRegionConfig)(_config_0);\n        const _config_2 = (0, config_resolver_1.resolveEndpointsConfig)(_config_1);\n        const _config_3 = (0, middleware_retry_1.resolveRetryConfig)(_config_2);\n        const _config_4 = (0, middleware_host_header_1.resolveHostHeaderConfig)(_config_3);\n        const _config_5 = (0, middleware_signing_1.resolveAwsAuthConfig)(_config_4);\n        const _config_6 = (0, middleware_user_agent_1.resolveUserAgentConfig)(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use((0, middleware_retry_1.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_content_length_1.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_host_header_1.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_logger_1.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_recursion_detection_1.getRecursionDetectionPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_user_agent_1.getUserAgentPlugin)(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\nexports.CloudFrontClient = CloudFrontClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssociateAliasCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass AssociateAliasCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"AssociateAliasCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssociateAliasRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlAssociateAliasCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlAssociateAliasCommand)(output, context);\n    }\n}\nexports.AssociateAliasCommand = AssociateAliasCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateCachePolicyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateCachePolicyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateCachePolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateCachePolicyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateCachePolicyResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreateCachePolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreateCachePolicyCommand)(output, context);\n    }\n}\nexports.CreateCachePolicyCommand = CreateCachePolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateCloudFrontOriginAccessIdentityCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateCloudFrontOriginAccessIdentityCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateCloudFrontOriginAccessIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateCloudFrontOriginAccessIdentityRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateCloudFrontOriginAccessIdentityResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreateCloudFrontOriginAccessIdentityCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreateCloudFrontOriginAccessIdentityCommand)(output, context);\n    }\n}\nexports.CreateCloudFrontOriginAccessIdentityCommand = CreateCloudFrontOriginAccessIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateDistributionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateDistributionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateDistributionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateDistributionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreateDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreateDistributionCommand)(output, context);\n    }\n}\nexports.CreateDistributionCommand = CreateDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateDistributionWithTagsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateDistributionWithTagsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateDistributionWithTagsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateDistributionWithTagsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateDistributionWithTagsResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreateDistributionWithTagsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreateDistributionWithTagsCommand)(output, context);\n    }\n}\nexports.CreateDistributionWithTagsCommand = CreateDistributionWithTagsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateFieldLevelEncryptionConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateFieldLevelEncryptionConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateFieldLevelEncryptionConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateFieldLevelEncryptionConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateFieldLevelEncryptionConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreateFieldLevelEncryptionConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreateFieldLevelEncryptionConfigCommand)(output, context);\n    }\n}\nexports.CreateFieldLevelEncryptionConfigCommand = CreateFieldLevelEncryptionConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateFieldLevelEncryptionProfileCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateFieldLevelEncryptionProfileCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateFieldLevelEncryptionProfileCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateFieldLevelEncryptionProfileRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateFieldLevelEncryptionProfileResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreateFieldLevelEncryptionProfileCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreateFieldLevelEncryptionProfileCommand)(output, context);\n    }\n}\nexports.CreateFieldLevelEncryptionProfileCommand = CreateFieldLevelEncryptionProfileCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateFunctionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateFunctionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateFunctionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateFunctionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreateFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreateFunctionCommand)(output, context);\n    }\n}\nexports.CreateFunctionCommand = CreateFunctionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateInvalidationCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateInvalidationCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateInvalidationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateInvalidationRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateInvalidationResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreateInvalidationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreateInvalidationCommand)(output, context);\n    }\n}\nexports.CreateInvalidationCommand = CreateInvalidationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateKeyGroupCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateKeyGroupCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateKeyGroupCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateKeyGroupRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateKeyGroupResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreateKeyGroupCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreateKeyGroupCommand)(output, context);\n    }\n}\nexports.CreateKeyGroupCommand = CreateKeyGroupCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateMonitoringSubscriptionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateMonitoringSubscriptionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateMonitoringSubscriptionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateMonitoringSubscriptionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateMonitoringSubscriptionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreateMonitoringSubscriptionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreateMonitoringSubscriptionCommand)(output, context);\n    }\n}\nexports.CreateMonitoringSubscriptionCommand = CreateMonitoringSubscriptionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateOriginRequestPolicyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateOriginRequestPolicyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateOriginRequestPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateOriginRequestPolicyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateOriginRequestPolicyResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreateOriginRequestPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreateOriginRequestPolicyCommand)(output, context);\n    }\n}\nexports.CreateOriginRequestPolicyCommand = CreateOriginRequestPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreatePublicKeyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreatePublicKeyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreatePublicKeyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreatePublicKeyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreatePublicKeyResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreatePublicKeyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreatePublicKeyCommand)(output, context);\n    }\n}\nexports.CreatePublicKeyCommand = CreatePublicKeyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateRealtimeLogConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateRealtimeLogConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateRealtimeLogConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateRealtimeLogConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateRealtimeLogConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreateRealtimeLogConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreateRealtimeLogConfigCommand)(output, context);\n    }\n}\nexports.CreateRealtimeLogConfigCommand = CreateRealtimeLogConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateResponseHeadersPolicyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateResponseHeadersPolicyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateResponseHeadersPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateResponseHeadersPolicyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateResponseHeadersPolicyResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreateResponseHeadersPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreateResponseHeadersPolicyCommand)(output, context);\n    }\n}\nexports.CreateResponseHeadersPolicyCommand = CreateResponseHeadersPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateStreamingDistributionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateStreamingDistributionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateStreamingDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateStreamingDistributionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateStreamingDistributionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreateStreamingDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreateStreamingDistributionCommand)(output, context);\n    }\n}\nexports.CreateStreamingDistributionCommand = CreateStreamingDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateStreamingDistributionWithTagsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass CreateStreamingDistributionWithTagsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"CreateStreamingDistributionWithTagsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateStreamingDistributionWithTagsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateStreamingDistributionWithTagsResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlCreateStreamingDistributionWithTagsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlCreateStreamingDistributionWithTagsCommand)(output, context);\n    }\n}\nexports.CreateStreamingDistributionWithTagsCommand = CreateStreamingDistributionWithTagsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteCachePolicyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteCachePolicyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteCachePolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteCachePolicyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlDeleteCachePolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlDeleteCachePolicyCommand)(output, context);\n    }\n}\nexports.DeleteCachePolicyCommand = DeleteCachePolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteCloudFrontOriginAccessIdentityCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteCloudFrontOriginAccessIdentityCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteCloudFrontOriginAccessIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteCloudFrontOriginAccessIdentityRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlDeleteCloudFrontOriginAccessIdentityCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlDeleteCloudFrontOriginAccessIdentityCommand)(output, context);\n    }\n}\nexports.DeleteCloudFrontOriginAccessIdentityCommand = DeleteCloudFrontOriginAccessIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteDistributionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteDistributionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteDistributionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlDeleteDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlDeleteDistributionCommand)(output, context);\n    }\n}\nexports.DeleteDistributionCommand = DeleteDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteFieldLevelEncryptionConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteFieldLevelEncryptionConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteFieldLevelEncryptionConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteFieldLevelEncryptionConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlDeleteFieldLevelEncryptionConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlDeleteFieldLevelEncryptionConfigCommand)(output, context);\n    }\n}\nexports.DeleteFieldLevelEncryptionConfigCommand = DeleteFieldLevelEncryptionConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteFieldLevelEncryptionProfileCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteFieldLevelEncryptionProfileCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteFieldLevelEncryptionProfileCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteFieldLevelEncryptionProfileRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlDeleteFieldLevelEncryptionProfileCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlDeleteFieldLevelEncryptionProfileCommand)(output, context);\n    }\n}\nexports.DeleteFieldLevelEncryptionProfileCommand = DeleteFieldLevelEncryptionProfileCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteFunctionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteFunctionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteFunctionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlDeleteFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlDeleteFunctionCommand)(output, context);\n    }\n}\nexports.DeleteFunctionCommand = DeleteFunctionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteKeyGroupCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteKeyGroupCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteKeyGroupCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteKeyGroupRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlDeleteKeyGroupCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlDeleteKeyGroupCommand)(output, context);\n    }\n}\nexports.DeleteKeyGroupCommand = DeleteKeyGroupCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteMonitoringSubscriptionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteMonitoringSubscriptionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteMonitoringSubscriptionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.DeleteMonitoringSubscriptionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.DeleteMonitoringSubscriptionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlDeleteMonitoringSubscriptionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlDeleteMonitoringSubscriptionCommand)(output, context);\n    }\n}\nexports.DeleteMonitoringSubscriptionCommand = DeleteMonitoringSubscriptionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteOriginRequestPolicyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteOriginRequestPolicyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteOriginRequestPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.DeleteOriginRequestPolicyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlDeleteOriginRequestPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlDeleteOriginRequestPolicyCommand)(output, context);\n    }\n}\nexports.DeleteOriginRequestPolicyCommand = DeleteOriginRequestPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeletePublicKeyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeletePublicKeyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeletePublicKeyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.DeletePublicKeyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlDeletePublicKeyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlDeletePublicKeyCommand)(output, context);\n    }\n}\nexports.DeletePublicKeyCommand = DeletePublicKeyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteRealtimeLogConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteRealtimeLogConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteRealtimeLogConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.DeleteRealtimeLogConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlDeleteRealtimeLogConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlDeleteRealtimeLogConfigCommand)(output, context);\n    }\n}\nexports.DeleteRealtimeLogConfigCommand = DeleteRealtimeLogConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteResponseHeadersPolicyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteResponseHeadersPolicyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteResponseHeadersPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.DeleteResponseHeadersPolicyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlDeleteResponseHeadersPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlDeleteResponseHeadersPolicyCommand)(output, context);\n    }\n}\nexports.DeleteResponseHeadersPolicyCommand = DeleteResponseHeadersPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteStreamingDistributionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DeleteStreamingDistributionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DeleteStreamingDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.DeleteStreamingDistributionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlDeleteStreamingDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlDeleteStreamingDistributionCommand)(output, context);\n    }\n}\nexports.DeleteStreamingDistributionCommand = DeleteStreamingDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeFunctionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass DescribeFunctionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"DescribeFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.DescribeFunctionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.DescribeFunctionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlDescribeFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlDescribeFunctionCommand)(output, context);\n    }\n}\nexports.DescribeFunctionCommand = DescribeFunctionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetCachePolicyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetCachePolicyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetCachePolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetCachePolicyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetCachePolicyResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetCachePolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetCachePolicyCommand)(output, context);\n    }\n}\nexports.GetCachePolicyCommand = GetCachePolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetCachePolicyConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetCachePolicyConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetCachePolicyConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetCachePolicyConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetCachePolicyConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetCachePolicyConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetCachePolicyConfigCommand)(output, context);\n    }\n}\nexports.GetCachePolicyConfigCommand = GetCachePolicyConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetCloudFrontOriginAccessIdentityCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetCloudFrontOriginAccessIdentityCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetCloudFrontOriginAccessIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetCloudFrontOriginAccessIdentityRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetCloudFrontOriginAccessIdentityResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetCloudFrontOriginAccessIdentityCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetCloudFrontOriginAccessIdentityCommand)(output, context);\n    }\n}\nexports.GetCloudFrontOriginAccessIdentityCommand = GetCloudFrontOriginAccessIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetCloudFrontOriginAccessIdentityConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetCloudFrontOriginAccessIdentityConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetCloudFrontOriginAccessIdentityConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetCloudFrontOriginAccessIdentityConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetCloudFrontOriginAccessIdentityConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetCloudFrontOriginAccessIdentityConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetCloudFrontOriginAccessIdentityConfigCommand)(output, context);\n    }\n}\nexports.GetCloudFrontOriginAccessIdentityConfigCommand = GetCloudFrontOriginAccessIdentityConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetDistributionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetDistributionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetDistributionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetDistributionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetDistributionCommand)(output, context);\n    }\n}\nexports.GetDistributionCommand = GetDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetDistributionConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetDistributionConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetDistributionConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetDistributionConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetDistributionConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetDistributionConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetDistributionConfigCommand)(output, context);\n    }\n}\nexports.GetDistributionConfigCommand = GetDistributionConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFieldLevelEncryptionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetFieldLevelEncryptionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetFieldLevelEncryptionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetFieldLevelEncryptionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetFieldLevelEncryptionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetFieldLevelEncryptionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetFieldLevelEncryptionCommand)(output, context);\n    }\n}\nexports.GetFieldLevelEncryptionCommand = GetFieldLevelEncryptionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFieldLevelEncryptionConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetFieldLevelEncryptionConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetFieldLevelEncryptionConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetFieldLevelEncryptionConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetFieldLevelEncryptionConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetFieldLevelEncryptionConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetFieldLevelEncryptionConfigCommand)(output, context);\n    }\n}\nexports.GetFieldLevelEncryptionConfigCommand = GetFieldLevelEncryptionConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFieldLevelEncryptionProfileCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetFieldLevelEncryptionProfileCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetFieldLevelEncryptionProfileCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetFieldLevelEncryptionProfileRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetFieldLevelEncryptionProfileResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetFieldLevelEncryptionProfileCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetFieldLevelEncryptionProfileCommand)(output, context);\n    }\n}\nexports.GetFieldLevelEncryptionProfileCommand = GetFieldLevelEncryptionProfileCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFieldLevelEncryptionProfileConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetFieldLevelEncryptionProfileConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetFieldLevelEncryptionProfileConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetFieldLevelEncryptionProfileConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetFieldLevelEncryptionProfileConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetFieldLevelEncryptionProfileConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetFieldLevelEncryptionProfileConfigCommand)(output, context);\n    }\n}\nexports.GetFieldLevelEncryptionProfileConfigCommand = GetFieldLevelEncryptionProfileConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFunctionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetFunctionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetFunctionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetFunctionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetFunctionCommand)(output, context);\n    }\n}\nexports.GetFunctionCommand = GetFunctionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetInvalidationCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetInvalidationCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetInvalidationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetInvalidationRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetInvalidationResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetInvalidationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetInvalidationCommand)(output, context);\n    }\n}\nexports.GetInvalidationCommand = GetInvalidationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetKeyGroupCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetKeyGroupCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetKeyGroupCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetKeyGroupRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetKeyGroupResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetKeyGroupCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetKeyGroupCommand)(output, context);\n    }\n}\nexports.GetKeyGroupCommand = GetKeyGroupCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetKeyGroupConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetKeyGroupConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetKeyGroupConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetKeyGroupConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetKeyGroupConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetKeyGroupConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetKeyGroupConfigCommand)(output, context);\n    }\n}\nexports.GetKeyGroupConfigCommand = GetKeyGroupConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetMonitoringSubscriptionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetMonitoringSubscriptionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetMonitoringSubscriptionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetMonitoringSubscriptionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetMonitoringSubscriptionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetMonitoringSubscriptionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetMonitoringSubscriptionCommand)(output, context);\n    }\n}\nexports.GetMonitoringSubscriptionCommand = GetMonitoringSubscriptionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetOriginRequestPolicyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetOriginRequestPolicyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetOriginRequestPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetOriginRequestPolicyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetOriginRequestPolicyResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetOriginRequestPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetOriginRequestPolicyCommand)(output, context);\n    }\n}\nexports.GetOriginRequestPolicyCommand = GetOriginRequestPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetOriginRequestPolicyConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetOriginRequestPolicyConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetOriginRequestPolicyConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetOriginRequestPolicyConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetOriginRequestPolicyConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetOriginRequestPolicyConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetOriginRequestPolicyConfigCommand)(output, context);\n    }\n}\nexports.GetOriginRequestPolicyConfigCommand = GetOriginRequestPolicyConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetPublicKeyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetPublicKeyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetPublicKeyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetPublicKeyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetPublicKeyResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetPublicKeyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetPublicKeyCommand)(output, context);\n    }\n}\nexports.GetPublicKeyCommand = GetPublicKeyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetPublicKeyConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetPublicKeyConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetPublicKeyConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetPublicKeyConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetPublicKeyConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetPublicKeyConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetPublicKeyConfigCommand)(output, context);\n    }\n}\nexports.GetPublicKeyConfigCommand = GetPublicKeyConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetRealtimeLogConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetRealtimeLogConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetRealtimeLogConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetRealtimeLogConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetRealtimeLogConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetRealtimeLogConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetRealtimeLogConfigCommand)(output, context);\n    }\n}\nexports.GetRealtimeLogConfigCommand = GetRealtimeLogConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetResponseHeadersPolicyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetResponseHeadersPolicyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetResponseHeadersPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetResponseHeadersPolicyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetResponseHeadersPolicyResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetResponseHeadersPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetResponseHeadersPolicyCommand)(output, context);\n    }\n}\nexports.GetResponseHeadersPolicyCommand = GetResponseHeadersPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetResponseHeadersPolicyConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetResponseHeadersPolicyConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetResponseHeadersPolicyConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetResponseHeadersPolicyConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetResponseHeadersPolicyConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetResponseHeadersPolicyConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetResponseHeadersPolicyConfigCommand)(output, context);\n    }\n}\nexports.GetResponseHeadersPolicyConfigCommand = GetResponseHeadersPolicyConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetStreamingDistributionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetStreamingDistributionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetStreamingDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetStreamingDistributionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetStreamingDistributionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetStreamingDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetStreamingDistributionCommand)(output, context);\n    }\n}\nexports.GetStreamingDistributionCommand = GetStreamingDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetStreamingDistributionConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass GetStreamingDistributionConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"GetStreamingDistributionConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.GetStreamingDistributionConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.GetStreamingDistributionConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlGetStreamingDistributionConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlGetStreamingDistributionConfigCommand)(output, context);\n    }\n}\nexports.GetStreamingDistributionConfigCommand = GetStreamingDistributionConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListCachePoliciesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListCachePoliciesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListCachePoliciesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListCachePoliciesRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListCachePoliciesResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListCachePoliciesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListCachePoliciesCommand)(output, context);\n    }\n}\nexports.ListCachePoliciesCommand = ListCachePoliciesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListCloudFrontOriginAccessIdentitiesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListCloudFrontOriginAccessIdentitiesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListCloudFrontOriginAccessIdentitiesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListCloudFrontOriginAccessIdentitiesRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListCloudFrontOriginAccessIdentitiesResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListCloudFrontOriginAccessIdentitiesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListCloudFrontOriginAccessIdentitiesCommand)(output, context);\n    }\n}\nexports.ListCloudFrontOriginAccessIdentitiesCommand = ListCloudFrontOriginAccessIdentitiesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListConflictingAliasesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListConflictingAliasesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListConflictingAliasesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListConflictingAliasesRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListConflictingAliasesResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListConflictingAliasesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListConflictingAliasesCommand)(output, context);\n    }\n}\nexports.ListConflictingAliasesCommand = ListConflictingAliasesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDistributionsByCachePolicyIdCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListDistributionsByCachePolicyIdCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListDistributionsByCachePolicyIdCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListDistributionsByCachePolicyIdRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListDistributionsByCachePolicyIdResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListDistributionsByCachePolicyIdCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListDistributionsByCachePolicyIdCommand)(output, context);\n    }\n}\nexports.ListDistributionsByCachePolicyIdCommand = ListDistributionsByCachePolicyIdCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDistributionsByKeyGroupCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListDistributionsByKeyGroupCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListDistributionsByKeyGroupCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListDistributionsByKeyGroupRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListDistributionsByKeyGroupResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListDistributionsByKeyGroupCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListDistributionsByKeyGroupCommand)(output, context);\n    }\n}\nexports.ListDistributionsByKeyGroupCommand = ListDistributionsByKeyGroupCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDistributionsByOriginRequestPolicyIdCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListDistributionsByOriginRequestPolicyIdCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListDistributionsByOriginRequestPolicyIdCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListDistributionsByOriginRequestPolicyIdRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListDistributionsByOriginRequestPolicyIdResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListDistributionsByOriginRequestPolicyIdCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListDistributionsByOriginRequestPolicyIdCommand)(output, context);\n    }\n}\nexports.ListDistributionsByOriginRequestPolicyIdCommand = ListDistributionsByOriginRequestPolicyIdCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDistributionsByRealtimeLogConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListDistributionsByRealtimeLogConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListDistributionsByRealtimeLogConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListDistributionsByRealtimeLogConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListDistributionsByRealtimeLogConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListDistributionsByRealtimeLogConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListDistributionsByRealtimeLogConfigCommand)(output, context);\n    }\n}\nexports.ListDistributionsByRealtimeLogConfigCommand = ListDistributionsByRealtimeLogConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDistributionsByResponseHeadersPolicyIdCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListDistributionsByResponseHeadersPolicyIdCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListDistributionsByResponseHeadersPolicyIdCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListDistributionsByResponseHeadersPolicyIdRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListDistributionsByResponseHeadersPolicyIdResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListDistributionsByResponseHeadersPolicyIdCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListDistributionsByResponseHeadersPolicyIdCommand)(output, context);\n    }\n}\nexports.ListDistributionsByResponseHeadersPolicyIdCommand = ListDistributionsByResponseHeadersPolicyIdCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDistributionsByWebACLIdCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListDistributionsByWebACLIdCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListDistributionsByWebACLIdCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListDistributionsByWebACLIdRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListDistributionsByWebACLIdResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListDistributionsByWebACLIdCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListDistributionsByWebACLIdCommand)(output, context);\n    }\n}\nexports.ListDistributionsByWebACLIdCommand = ListDistributionsByWebACLIdCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDistributionsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListDistributionsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListDistributionsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListDistributionsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListDistributionsResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListDistributionsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListDistributionsCommand)(output, context);\n    }\n}\nexports.ListDistributionsCommand = ListDistributionsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListFieldLevelEncryptionConfigsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListFieldLevelEncryptionConfigsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListFieldLevelEncryptionConfigsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListFieldLevelEncryptionConfigsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListFieldLevelEncryptionConfigsResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListFieldLevelEncryptionConfigsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListFieldLevelEncryptionConfigsCommand)(output, context);\n    }\n}\nexports.ListFieldLevelEncryptionConfigsCommand = ListFieldLevelEncryptionConfigsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListFieldLevelEncryptionProfilesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListFieldLevelEncryptionProfilesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListFieldLevelEncryptionProfilesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListFieldLevelEncryptionProfilesRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListFieldLevelEncryptionProfilesResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListFieldLevelEncryptionProfilesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListFieldLevelEncryptionProfilesCommand)(output, context);\n    }\n}\nexports.ListFieldLevelEncryptionProfilesCommand = ListFieldLevelEncryptionProfilesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListFunctionsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListFunctionsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListFunctionsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListFunctionsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListFunctionsResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListFunctionsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListFunctionsCommand)(output, context);\n    }\n}\nexports.ListFunctionsCommand = ListFunctionsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListInvalidationsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListInvalidationsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListInvalidationsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListInvalidationsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListInvalidationsResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListInvalidationsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListInvalidationsCommand)(output, context);\n    }\n}\nexports.ListInvalidationsCommand = ListInvalidationsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListKeyGroupsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListKeyGroupsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListKeyGroupsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListKeyGroupsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListKeyGroupsResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListKeyGroupsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListKeyGroupsCommand)(output, context);\n    }\n}\nexports.ListKeyGroupsCommand = ListKeyGroupsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListOriginRequestPoliciesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListOriginRequestPoliciesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListOriginRequestPoliciesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListOriginRequestPoliciesRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListOriginRequestPoliciesResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListOriginRequestPoliciesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListOriginRequestPoliciesCommand)(output, context);\n    }\n}\nexports.ListOriginRequestPoliciesCommand = ListOriginRequestPoliciesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListPublicKeysCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListPublicKeysCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListPublicKeysCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListPublicKeysRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListPublicKeysResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListPublicKeysCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListPublicKeysCommand)(output, context);\n    }\n}\nexports.ListPublicKeysCommand = ListPublicKeysCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListRealtimeLogConfigsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListRealtimeLogConfigsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListRealtimeLogConfigsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListRealtimeLogConfigsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListRealtimeLogConfigsResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListRealtimeLogConfigsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListRealtimeLogConfigsCommand)(output, context);\n    }\n}\nexports.ListRealtimeLogConfigsCommand = ListRealtimeLogConfigsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListResponseHeadersPoliciesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListResponseHeadersPoliciesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListResponseHeadersPoliciesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListResponseHeadersPoliciesRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListResponseHeadersPoliciesResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListResponseHeadersPoliciesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListResponseHeadersPoliciesCommand)(output, context);\n    }\n}\nexports.ListResponseHeadersPoliciesCommand = ListResponseHeadersPoliciesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListStreamingDistributionsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListStreamingDistributionsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListStreamingDistributionsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListStreamingDistributionsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListStreamingDistributionsResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListStreamingDistributionsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListStreamingDistributionsCommand)(output, context);\n    }\n}\nexports.ListStreamingDistributionsCommand = ListStreamingDistributionsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListTagsForResourceCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass ListTagsForResourceCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"ListTagsForResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.ListTagsForResourceRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.ListTagsForResourceResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlListTagsForResourceCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlListTagsForResourceCommand)(output, context);\n    }\n}\nexports.ListTagsForResourceCommand = ListTagsForResourceCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PublishFunctionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass PublishFunctionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"PublishFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.PublishFunctionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.PublishFunctionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlPublishFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlPublishFunctionCommand)(output, context);\n    }\n}\nexports.PublishFunctionCommand = PublishFunctionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TagResourceCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass TagResourceCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"TagResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.TagResourceRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlTagResourceCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlTagResourceCommand)(output, context);\n    }\n}\nexports.TagResourceCommand = TagResourceCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TestFunctionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass TestFunctionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"TestFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.TestFunctionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.TestFunctionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlTestFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlTestFunctionCommand)(output, context);\n    }\n}\nexports.TestFunctionCommand = TestFunctionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UntagResourceCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UntagResourceCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UntagResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UntagResourceRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlUntagResourceCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlUntagResourceCommand)(output, context);\n    }\n}\nexports.UntagResourceCommand = UntagResourceCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateCachePolicyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateCachePolicyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateCachePolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UpdateCachePolicyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.UpdateCachePolicyResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlUpdateCachePolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlUpdateCachePolicyCommand)(output, context);\n    }\n}\nexports.UpdateCachePolicyCommand = UpdateCachePolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateCloudFrontOriginAccessIdentityCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateCloudFrontOriginAccessIdentityCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateCloudFrontOriginAccessIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UpdateCloudFrontOriginAccessIdentityRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.UpdateCloudFrontOriginAccessIdentityResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlUpdateCloudFrontOriginAccessIdentityCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlUpdateCloudFrontOriginAccessIdentityCommand)(output, context);\n    }\n}\nexports.UpdateCloudFrontOriginAccessIdentityCommand = UpdateCloudFrontOriginAccessIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateDistributionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateDistributionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UpdateDistributionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.UpdateDistributionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlUpdateDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlUpdateDistributionCommand)(output, context);\n    }\n}\nexports.UpdateDistributionCommand = UpdateDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateFieldLevelEncryptionConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateFieldLevelEncryptionConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateFieldLevelEncryptionConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UpdateFieldLevelEncryptionConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.UpdateFieldLevelEncryptionConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlUpdateFieldLevelEncryptionConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlUpdateFieldLevelEncryptionConfigCommand)(output, context);\n    }\n}\nexports.UpdateFieldLevelEncryptionConfigCommand = UpdateFieldLevelEncryptionConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateFieldLevelEncryptionProfileCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateFieldLevelEncryptionProfileCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateFieldLevelEncryptionProfileCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UpdateFieldLevelEncryptionProfileRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.UpdateFieldLevelEncryptionProfileResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlUpdateFieldLevelEncryptionProfileCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlUpdateFieldLevelEncryptionProfileCommand)(output, context);\n    }\n}\nexports.UpdateFieldLevelEncryptionProfileCommand = UpdateFieldLevelEncryptionProfileCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateFunctionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateFunctionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UpdateFunctionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.UpdateFunctionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlUpdateFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlUpdateFunctionCommand)(output, context);\n    }\n}\nexports.UpdateFunctionCommand = UpdateFunctionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateKeyGroupCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateKeyGroupCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateKeyGroupCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UpdateKeyGroupRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.UpdateKeyGroupResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlUpdateKeyGroupCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlUpdateKeyGroupCommand)(output, context);\n    }\n}\nexports.UpdateKeyGroupCommand = UpdateKeyGroupCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateOriginRequestPolicyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateOriginRequestPolicyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateOriginRequestPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UpdateOriginRequestPolicyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.UpdateOriginRequestPolicyResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlUpdateOriginRequestPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlUpdateOriginRequestPolicyCommand)(output, context);\n    }\n}\nexports.UpdateOriginRequestPolicyCommand = UpdateOriginRequestPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdatePublicKeyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdatePublicKeyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdatePublicKeyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UpdatePublicKeyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.UpdatePublicKeyResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlUpdatePublicKeyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlUpdatePublicKeyCommand)(output, context);\n    }\n}\nexports.UpdatePublicKeyCommand = UpdatePublicKeyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateRealtimeLogConfigCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateRealtimeLogConfigCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateRealtimeLogConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UpdateRealtimeLogConfigRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.UpdateRealtimeLogConfigResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlUpdateRealtimeLogConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlUpdateRealtimeLogConfigCommand)(output, context);\n    }\n}\nexports.UpdateRealtimeLogConfigCommand = UpdateRealtimeLogConfigCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateResponseHeadersPolicyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateResponseHeadersPolicyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateResponseHeadersPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UpdateResponseHeadersPolicyRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.UpdateResponseHeadersPolicyResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlUpdateResponseHeadersPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlUpdateResponseHeadersPolicyCommand)(output, context);\n    }\n}\nexports.UpdateResponseHeadersPolicyCommand = UpdateResponseHeadersPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateStreamingDistributionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_1_1 = require(\"../models/models_1\");\nconst Aws_restXml_1 = require(\"../protocols/Aws_restXml\");\nclass UpdateStreamingDistributionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFrontClient\";\n        const commandName = \"UpdateStreamingDistributionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_1_1.UpdateStreamingDistributionRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_1_1.UpdateStreamingDistributionResultFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restXml_1.serializeAws_restXmlUpdateStreamingDistributionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restXml_1.deserializeAws_restXmlUpdateStreamingDistributionCommand)(output, context);\n    }\n}\nexports.UpdateStreamingDistributionCommand = UpdateStreamingDistributionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./AssociateAliasCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateCachePolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateCloudFrontOriginAccessIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateDistributionCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateDistributionWithTagsCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateFieldLevelEncryptionConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateFieldLevelEncryptionProfileCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateFunctionCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateInvalidationCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateKeyGroupCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateMonitoringSubscriptionCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateOriginRequestPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreatePublicKeyCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateRealtimeLogConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateResponseHeadersPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateStreamingDistributionCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateStreamingDistributionWithTagsCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteCachePolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteCloudFrontOriginAccessIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteDistributionCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteFieldLevelEncryptionConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteFieldLevelEncryptionProfileCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteFunctionCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteKeyGroupCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteMonitoringSubscriptionCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteOriginRequestPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeletePublicKeyCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteRealtimeLogConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteResponseHeadersPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteStreamingDistributionCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeFunctionCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetCachePolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetCachePolicyConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetCloudFrontOriginAccessIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetCloudFrontOriginAccessIdentityConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetDistributionCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetDistributionConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetFieldLevelEncryptionCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetFieldLevelEncryptionConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetFieldLevelEncryptionProfileCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetFieldLevelEncryptionProfileConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetFunctionCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetInvalidationCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetKeyGroupCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetKeyGroupConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetMonitoringSubscriptionCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetOriginRequestPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetOriginRequestPolicyConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetPublicKeyCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetPublicKeyConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetRealtimeLogConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetResponseHeadersPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetResponseHeadersPolicyConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetStreamingDistributionCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetStreamingDistributionConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListCachePoliciesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListCloudFrontOriginAccessIdentitiesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListConflictingAliasesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsByCachePolicyIdCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsByKeyGroupCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsByOriginRequestPolicyIdCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsByRealtimeLogConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsByResponseHeadersPolicyIdCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsByWebACLIdCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListFieldLevelEncryptionConfigsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListFieldLevelEncryptionProfilesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListFunctionsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListInvalidationsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListKeyGroupsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListOriginRequestPoliciesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListPublicKeysCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListRealtimeLogConfigsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListResponseHeadersPoliciesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListStreamingDistributionsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListTagsForResourceCommand\"), exports);\ntslib_1.__exportStar(require(\"./PublishFunctionCommand\"), exports);\ntslib_1.__exportStar(require(\"./TagResourceCommand\"), exports);\ntslib_1.__exportStar(require(\"./TestFunctionCommand\"), exports);\ntslib_1.__exportStar(require(\"./UntagResourceCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateCachePolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateCloudFrontOriginAccessIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateDistributionCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateFieldLevelEncryptionConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateFieldLevelEncryptionProfileCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateFunctionCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateKeyGroupCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateOriginRequestPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdatePublicKeyCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateRealtimeLogConfigCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateResponseHeadersPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateStreamingDistributionCommand\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRegionInfoProvider = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst regionHash = {\n    \"aws-cn-global\": {\n        variants: [\n            {\n                hostname: \"cloudfront.cn-northwest-1.amazonaws.com.cn\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"cn-northwest-1\",\n    },\n    \"aws-global\": {\n        variants: [\n            {\n                hostname: \"cloudfront.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-east-1\",\n    },\n};\nconst partitionHash = {\n    aws: {\n        regions: [\n            \"af-south-1\",\n            \"ap-east-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-south-1\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-southeast-3\",\n            \"aws-global\",\n            \"ca-central-1\",\n            \"eu-central-1\",\n            \"eu-north-1\",\n            \"eu-south-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"me-south-1\",\n            \"sa-east-1\",\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n        ],\n        regionRegex: \"^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"cloudfront.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"cloudfront-fips.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"cloudfront-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"cloudfront.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n        endpoint: \"aws-global\",\n    },\n    \"aws-cn\": {\n        regions: [\"aws-cn-global\", \"cn-north-1\", \"cn-northwest-1\"],\n        regionRegex: \"^cn\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"cloudfront.{region}.amazonaws.com.cn\",\n                tags: [],\n            },\n            {\n                hostname: \"cloudfront-fips.{region}.amazonaws.com.cn\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"cloudfront-fips.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"cloudfront.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\"],\n            },\n        ],\n        endpoint: \"aws-cn-global\",\n    },\n    \"aws-iso\": {\n        regions: [\"us-iso-east-1\", \"us-iso-west-1\"],\n        regionRegex: \"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"cloudfront.{region}.c2s.ic.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"cloudfront-fips.{region}.c2s.ic.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-iso-b\": {\n        regions: [\"us-isob-east-1\"],\n        regionRegex: \"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"cloudfront.{region}.sc2s.sgov.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"cloudfront-fips.{region}.sc2s.sgov.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-us-gov\": {\n        regions: [\"us-gov-east-1\", \"us-gov-west-1\"],\n        regionRegex: \"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"cloudfront.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"cloudfront-fips.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"cloudfront-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"cloudfront.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n};\nconst defaultRegionInfoProvider = async (region, options) => (0, config_resolver_1.getRegionInfo)(region, {\n    ...options,\n    signingService: \"cloudfront\",\n    regionHash,\n    partitionHash,\n});\nexports.defaultRegionInfoProvider = defaultRegionInfoProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CloudFrontServiceException = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./CloudFront\"), exports);\ntslib_1.__exportStar(require(\"./CloudFrontClient\"), exports);\ntslib_1.__exportStar(require(\"./commands\"), exports);\ntslib_1.__exportStar(require(\"./models\"), exports);\ntslib_1.__exportStar(require(\"./pagination\"), exports);\ntslib_1.__exportStar(require(\"./waiters\"), exports);\nvar CloudFrontServiceException_1 = require(\"./models/CloudFrontServiceException\");\nObject.defineProperty(exports, \"CloudFrontServiceException\", { enumerable: true, get: function () { return CloudFrontServiceException_1.CloudFrontServiceException; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CloudFrontServiceException = void 0;\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nclass CloudFrontServiceException extends smithy_client_1.ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, CloudFrontServiceException.prototype);\n    }\n}\nexports.CloudFrontServiceException = CloudFrontServiceException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\ntslib_1.__exportStar(require(\"./models_1\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TooManyCacheBehaviors = exports.RealtimeLogConfigOwnerMismatch = exports.NoSuchResponseHeadersPolicy = exports.NoSuchRealtimeLogConfig = exports.NoSuchOriginRequestPolicy = exports.NoSuchOrigin = exports.NoSuchFieldLevelEncryptionConfig = exports.NoSuchCachePolicy = exports.InvalidWebACLId = exports.InvalidViewerCertificate = exports.InvalidTTLOrder = exports.InvalidResponseCode = exports.InvalidRequiredProtocol = exports.InvalidRelativePath = exports.InvalidQueryStringParameters = exports.InvalidProtocolSettings = exports.InvalidOriginReadTimeout = exports.InvalidOriginKeepaliveTimeout = exports.InvalidOriginAccessIdentity = exports.InvalidOrigin = exports.InvalidMinimumProtocolVersion = exports.InvalidLocationCode = exports.InvalidLambdaFunctionAssociation = exports.InvalidHeadersForS3Origin = exports.InvalidGeoRestrictionParameter = exports.InvalidFunctionAssociation = exports.InvalidForwardCookies = exports.InvalidErrorCode = exports.InvalidDefaultRootObject = exports.IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior = exports.DistributionAlreadyExists = exports.CNAMEAlreadyExists = exports.TooManyCloudFrontOriginAccessIdentities = exports.MissingBody = exports.CloudFrontOriginAccessIdentityAlreadyExists = exports.TooManyQueryStringsInCachePolicy = exports.TooManyHeadersInCachePolicy = exports.TooManyCookiesInCachePolicy = exports.TooManyCachePolicies = exports.InconsistentQuantities = exports.CannotChangeImmutablePublicKeyFields = exports.CachePolicyInUse = exports.CachePolicyAlreadyExists = exports.BatchTooLarge = exports.TooManyDistributionCNAMEs = exports.NoSuchDistribution = exports.InvalidArgument = exports.IllegalUpdate = exports.AccessDenied = exports.ResponseHeadersPolicyAccessControlAllowMethodsValues = void 0;\nexports.TooManyOriginRequestPolicies = exports.TooManyHeadersInOriginRequestPolicy = exports.TooManyCookiesInOriginRequestPolicy = exports.OriginRequestPolicyAlreadyExists = exports.RealtimeMetricsSubscriptionStatus = exports.TooManyPublicKeysInKeyGroup = exports.TooManyKeyGroups = exports.KeyGroupAlreadyExists = exports.TooManyInvalidationsInProgress = exports.UnsupportedOperation = exports.TooManyFunctions = exports.FunctionSizeLimitExceeded = exports.FunctionAlreadyExists = exports.FunctionStage = exports.FunctionRuntime = exports.TooManyFieldLevelEncryptionProfiles = exports.TooManyFieldLevelEncryptionFieldPatterns = exports.TooManyFieldLevelEncryptionEncryptionEntities = exports.NoSuchPublicKey = exports.FieldLevelEncryptionProfileSizeExceeded = exports.FieldLevelEncryptionProfileAlreadyExists = exports.TooManyFieldLevelEncryptionQueryArgProfiles = exports.TooManyFieldLevelEncryptionContentTypeProfiles = exports.TooManyFieldLevelEncryptionConfigs = exports.QueryArgProfileEmpty = exports.NoSuchFieldLevelEncryptionProfile = exports.FieldLevelEncryptionConfigAlreadyExists = exports.InvalidTagging = exports.TrustedSignerDoesNotExist = exports.TrustedKeyGroupDoesNotExist = exports.TooManyTrustedSigners = exports.TooManyQueryStringParameters = exports.TooManyOrigins = exports.TooManyOriginGroupsPerDistribution = exports.TooManyOriginCustomHeaders = exports.TooManyLambdaFunctionAssociations = exports.TooManyKeyGroupsAssociatedToDistribution = exports.TooManyHeadersInForwardedValues = exports.TooManyFunctionAssociations = exports.TooManyDistributionsWithSingleFunctionARN = exports.TooManyDistributionsWithLambdaAssociations = exports.TooManyDistributionsWithFunctionAssociations = exports.TooManyDistributionsAssociatedToResponseHeadersPolicy = exports.TooManyDistributionsAssociatedToOriginRequestPolicy = exports.TooManyDistributionsAssociatedToKeyGroup = exports.TooManyDistributionsAssociatedToFieldLevelEncryptionConfig = exports.TooManyDistributionsAssociatedToCachePolicy = exports.TooManyDistributions = exports.TooManyCookieNamesInWhiteList = exports.TooManyCertificates = void 0;\nexports.CachePolicyHeadersConfigFilterSensitiveLog = exports.CachePolicyCookiesConfigFilterSensitiveLog = exports.CacheBehaviorsFilterSensitiveLog = exports.CacheBehaviorFilterSensitiveLog = exports.TrustedSignersFilterSensitiveLog = exports.TrustedKeyGroupsFilterSensitiveLog = exports.LambdaFunctionAssociationsFilterSensitiveLog = exports.LambdaFunctionAssociationFilterSensitiveLog = exports.FunctionAssociationsFilterSensitiveLog = exports.FunctionAssociationFilterSensitiveLog = exports.ForwardedValuesFilterSensitiveLog = exports.QueryStringCacheKeysFilterSensitiveLog = exports.HeadersFilterSensitiveLog = exports.CookiePreferenceFilterSensitiveLog = exports.CookieNamesFilterSensitiveLog = exports.AssociateAliasRequestFilterSensitiveLog = exports.AllowedMethodsFilterSensitiveLog = exports.CachedMethodsFilterSensitiveLog = exports.AliasICPRecordalFilterSensitiveLog = exports.AliasesFilterSensitiveLog = exports.ActiveTrustedSignersFilterSensitiveLog = exports.SignerFilterSensitiveLog = exports.ActiveTrustedKeyGroupsFilterSensitiveLog = exports.KGKeyPairIdsFilterSensitiveLog = exports.KeyPairIdsFilterSensitiveLog = exports.NoSuchResource = exports.NoSuchFunctionExists = exports.FunctionInUse = exports.FieldLevelEncryptionProfileInUse = exports.FieldLevelEncryptionConfigInUse = exports.DistributionNotDisabled = exports.NoSuchCloudFrontOriginAccessIdentity = exports.CloudFrontOriginAccessIdentityInUse = exports.PreconditionFailed = exports.InvalidIfMatchVersion = exports.IllegalDelete = exports.TooManyStreamingDistributions = exports.TooManyStreamingDistributionCNAMEs = exports.StreamingDistributionAlreadyExists = exports.TooManyResponseHeadersPolicies = exports.TooManyCustomHeadersInResponseHeadersPolicy = exports.TooLongCSPInResponseHeadersPolicy = exports.ResponseHeadersPolicyAlreadyExists = exports.ReferrerPolicyList = exports.FrameOptionsList = exports.TooManyRealtimeLogConfigs = exports.RealtimeLogConfigAlreadyExists = exports.TooManyPublicKeys = exports.PublicKeyAlreadyExists = exports.TooManyQueryStringsInOriginRequestPolicy = void 0;\nexports.FieldLevelEncryptionConfigFilterSensitiveLog = exports.QueryArgProfileConfigFilterSensitiveLog = exports.QueryArgProfilesFilterSensitiveLog = exports.QueryArgProfileFilterSensitiveLog = exports.ContentTypeProfileConfigFilterSensitiveLog = exports.ContentTypeProfilesFilterSensitiveLog = exports.ContentTypeProfileFilterSensitiveLog = exports.CreateDistributionWithTagsResultFilterSensitiveLog = exports.CreateDistributionWithTagsRequestFilterSensitiveLog = exports.DistributionConfigWithTagsFilterSensitiveLog = exports.TagsFilterSensitiveLog = exports.TagFilterSensitiveLog = exports.CreateDistributionResultFilterSensitiveLog = exports.DistributionFilterSensitiveLog = exports.CreateDistributionRequestFilterSensitiveLog = exports.DistributionConfigFilterSensitiveLog = exports.ViewerCertificateFilterSensitiveLog = exports.RestrictionsFilterSensitiveLog = exports.GeoRestrictionFilterSensitiveLog = exports.OriginsFilterSensitiveLog = exports.OriginFilterSensitiveLog = exports.S3OriginConfigFilterSensitiveLog = exports.OriginShieldFilterSensitiveLog = exports.CustomOriginConfigFilterSensitiveLog = exports.OriginSslProtocolsFilterSensitiveLog = exports.CustomHeadersFilterSensitiveLog = exports.OriginCustomHeaderFilterSensitiveLog = exports.OriginGroupsFilterSensitiveLog = exports.OriginGroupFilterSensitiveLog = exports.OriginGroupMembersFilterSensitiveLog = exports.OriginGroupMemberFilterSensitiveLog = exports.OriginGroupFailoverCriteriaFilterSensitiveLog = exports.StatusCodesFilterSensitiveLog = exports.LoggingConfigFilterSensitiveLog = exports.DefaultCacheBehaviorFilterSensitiveLog = exports.CustomErrorResponsesFilterSensitiveLog = exports.CustomErrorResponseFilterSensitiveLog = exports.CreateCloudFrontOriginAccessIdentityResultFilterSensitiveLog = exports.CloudFrontOriginAccessIdentityFilterSensitiveLog = exports.CreateCloudFrontOriginAccessIdentityRequestFilterSensitiveLog = exports.CloudFrontOriginAccessIdentityConfigFilterSensitiveLog = exports.CreateCachePolicyResultFilterSensitiveLog = exports.CreateCachePolicyRequestFilterSensitiveLog = exports.CachePolicyListFilterSensitiveLog = exports.CachePolicySummaryFilterSensitiveLog = exports.CachePolicyFilterSensitiveLog = exports.CachePolicyConfigFilterSensitiveLog = exports.ParametersInCacheKeyAndForwardedToOriginFilterSensitiveLog = exports.CachePolicyQueryStringsConfigFilterSensitiveLog = exports.QueryStringNamesFilterSensitiveLog = void 0;\nexports.ResponseHeadersPolicyCustomHeaderFilterSensitiveLog = exports.ResponseHeadersPolicyCorsConfigFilterSensitiveLog = exports.ResponseHeadersPolicyAccessControlExposeHeadersFilterSensitiveLog = exports.ResponseHeadersPolicyAccessControlAllowOriginsFilterSensitiveLog = exports.ResponseHeadersPolicyAccessControlAllowMethodsFilterSensitiveLog = exports.ResponseHeadersPolicyAccessControlAllowHeadersFilterSensitiveLog = exports.CreateRealtimeLogConfigResultFilterSensitiveLog = exports.RealtimeLogConfigFilterSensitiveLog = exports.CreateRealtimeLogConfigRequestFilterSensitiveLog = exports.EndPointFilterSensitiveLog = exports.KinesisStreamConfigFilterSensitiveLog = exports.CreatePublicKeyResultFilterSensitiveLog = exports.PublicKeyFilterSensitiveLog = exports.CreatePublicKeyRequestFilterSensitiveLog = exports.PublicKeyConfigFilterSensitiveLog = exports.CreateOriginRequestPolicyResultFilterSensitiveLog = exports.OriginRequestPolicyFilterSensitiveLog = exports.CreateOriginRequestPolicyRequestFilterSensitiveLog = exports.OriginRequestPolicyConfigFilterSensitiveLog = exports.OriginRequestPolicyQueryStringsConfigFilterSensitiveLog = exports.OriginRequestPolicyHeadersConfigFilterSensitiveLog = exports.OriginRequestPolicyCookiesConfigFilterSensitiveLog = exports.CreateMonitoringSubscriptionResultFilterSensitiveLog = exports.CreateMonitoringSubscriptionRequestFilterSensitiveLog = exports.MonitoringSubscriptionFilterSensitiveLog = exports.RealtimeMetricsSubscriptionConfigFilterSensitiveLog = exports.CreateKeyGroupResultFilterSensitiveLog = exports.KeyGroupFilterSensitiveLog = exports.CreateKeyGroupRequestFilterSensitiveLog = exports.KeyGroupConfigFilterSensitiveLog = exports.CreateInvalidationResultFilterSensitiveLog = exports.InvalidationFilterSensitiveLog = exports.CreateInvalidationRequestFilterSensitiveLog = exports.InvalidationBatchFilterSensitiveLog = exports.PathsFilterSensitiveLog = exports.CreateFunctionResultFilterSensitiveLog = exports.FunctionSummaryFilterSensitiveLog = exports.FunctionMetadataFilterSensitiveLog = exports.CreateFunctionRequestFilterSensitiveLog = exports.FunctionConfigFilterSensitiveLog = exports.CreateFieldLevelEncryptionProfileResultFilterSensitiveLog = exports.FieldLevelEncryptionProfileFilterSensitiveLog = exports.CreateFieldLevelEncryptionProfileRequestFilterSensitiveLog = exports.FieldLevelEncryptionProfileConfigFilterSensitiveLog = exports.EncryptionEntitiesFilterSensitiveLog = exports.EncryptionEntityFilterSensitiveLog = exports.FieldPatternsFilterSensitiveLog = exports.CreateFieldLevelEncryptionConfigResultFilterSensitiveLog = exports.FieldLevelEncryptionFilterSensitiveLog = exports.CreateFieldLevelEncryptionConfigRequestFilterSensitiveLog = void 0;\nexports.DeleteKeyGroupRequestFilterSensitiveLog = exports.DeleteFunctionRequestFilterSensitiveLog = exports.DeleteFieldLevelEncryptionProfileRequestFilterSensitiveLog = exports.DeleteFieldLevelEncryptionConfigRequestFilterSensitiveLog = exports.DeleteDistributionRequestFilterSensitiveLog = exports.DeleteCloudFrontOriginAccessIdentityRequestFilterSensitiveLog = exports.DeleteCachePolicyRequestFilterSensitiveLog = exports.CreateStreamingDistributionWithTagsResultFilterSensitiveLog = exports.CreateStreamingDistributionWithTagsRequestFilterSensitiveLog = exports.StreamingDistributionConfigWithTagsFilterSensitiveLog = exports.CreateStreamingDistributionResultFilterSensitiveLog = exports.StreamingDistributionFilterSensitiveLog = exports.CreateStreamingDistributionRequestFilterSensitiveLog = exports.StreamingDistributionConfigFilterSensitiveLog = exports.S3OriginFilterSensitiveLog = exports.StreamingLoggingConfigFilterSensitiveLog = exports.CreateResponseHeadersPolicyResultFilterSensitiveLog = exports.ResponseHeadersPolicyFilterSensitiveLog = exports.CreateResponseHeadersPolicyRequestFilterSensitiveLog = exports.ResponseHeadersPolicyConfigFilterSensitiveLog = exports.ResponseHeadersPolicyServerTimingHeadersConfigFilterSensitiveLog = exports.ResponseHeadersPolicySecurityHeadersConfigFilterSensitiveLog = exports.ResponseHeadersPolicyXSSProtectionFilterSensitiveLog = exports.ResponseHeadersPolicyStrictTransportSecurityFilterSensitiveLog = exports.ResponseHeadersPolicyReferrerPolicyFilterSensitiveLog = exports.ResponseHeadersPolicyFrameOptionsFilterSensitiveLog = exports.ResponseHeadersPolicyContentTypeOptionsFilterSensitiveLog = exports.ResponseHeadersPolicyContentSecurityPolicyFilterSensitiveLog = exports.ResponseHeadersPolicyCustomHeadersConfigFilterSensitiveLog = void 0;\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst CloudFrontServiceException_1 = require(\"./CloudFrontServiceException\");\nvar ResponseHeadersPolicyAccessControlAllowMethodsValues;\n(function (ResponseHeadersPolicyAccessControlAllowMethodsValues) {\n    ResponseHeadersPolicyAccessControlAllowMethodsValues[\"ALL\"] = \"ALL\";\n    ResponseHeadersPolicyAccessControlAllowMethodsValues[\"DELETE\"] = \"DELETE\";\n    ResponseHeadersPolicyAccessControlAllowMethodsValues[\"GET\"] = \"GET\";\n    ResponseHeadersPolicyAccessControlAllowMethodsValues[\"HEAD\"] = \"HEAD\";\n    ResponseHeadersPolicyAccessControlAllowMethodsValues[\"OPTIONS\"] = \"OPTIONS\";\n    ResponseHeadersPolicyAccessControlAllowMethodsValues[\"PATCH\"] = \"PATCH\";\n    ResponseHeadersPolicyAccessControlAllowMethodsValues[\"POST\"] = \"POST\";\n    ResponseHeadersPolicyAccessControlAllowMethodsValues[\"PUT\"] = \"PUT\";\n})(ResponseHeadersPolicyAccessControlAllowMethodsValues = exports.ResponseHeadersPolicyAccessControlAllowMethodsValues || (exports.ResponseHeadersPolicyAccessControlAllowMethodsValues = {}));\nclass AccessDenied extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"AccessDenied\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AccessDenied\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AccessDenied.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.AccessDenied = AccessDenied;\nclass IllegalUpdate extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"IllegalUpdate\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IllegalUpdate\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IllegalUpdate.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.IllegalUpdate = IllegalUpdate;\nclass InvalidArgument extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidArgument\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidArgument\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidArgument.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidArgument = InvalidArgument;\nclass NoSuchDistribution extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchDistribution\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchDistribution\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchDistribution.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchDistribution = NoSuchDistribution;\nclass TooManyDistributionCNAMEs extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionCNAMEs\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionCNAMEs\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionCNAMEs.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionCNAMEs = TooManyDistributionCNAMEs;\nclass BatchTooLarge extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"BatchTooLarge\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"BatchTooLarge\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, BatchTooLarge.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.BatchTooLarge = BatchTooLarge;\nclass CachePolicyAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"CachePolicyAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CachePolicyAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CachePolicyAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.CachePolicyAlreadyExists = CachePolicyAlreadyExists;\nclass CachePolicyInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"CachePolicyInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CachePolicyInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CachePolicyInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.CachePolicyInUse = CachePolicyInUse;\nclass CannotChangeImmutablePublicKeyFields extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"CannotChangeImmutablePublicKeyFields\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CannotChangeImmutablePublicKeyFields\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CannotChangeImmutablePublicKeyFields.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.CannotChangeImmutablePublicKeyFields = CannotChangeImmutablePublicKeyFields;\nclass InconsistentQuantities extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InconsistentQuantities\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InconsistentQuantities\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InconsistentQuantities.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InconsistentQuantities = InconsistentQuantities;\nclass TooManyCachePolicies extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCachePolicies\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCachePolicies\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCachePolicies.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCachePolicies = TooManyCachePolicies;\nclass TooManyCookiesInCachePolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCookiesInCachePolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCookiesInCachePolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCookiesInCachePolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCookiesInCachePolicy = TooManyCookiesInCachePolicy;\nclass TooManyHeadersInCachePolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyHeadersInCachePolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyHeadersInCachePolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyHeadersInCachePolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyHeadersInCachePolicy = TooManyHeadersInCachePolicy;\nclass TooManyQueryStringsInCachePolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyQueryStringsInCachePolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyQueryStringsInCachePolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyQueryStringsInCachePolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyQueryStringsInCachePolicy = TooManyQueryStringsInCachePolicy;\nclass CloudFrontOriginAccessIdentityAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"CloudFrontOriginAccessIdentityAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CloudFrontOriginAccessIdentityAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CloudFrontOriginAccessIdentityAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.CloudFrontOriginAccessIdentityAlreadyExists = CloudFrontOriginAccessIdentityAlreadyExists;\nclass MissingBody extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"MissingBody\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MissingBody\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MissingBody.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.MissingBody = MissingBody;\nclass TooManyCloudFrontOriginAccessIdentities extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCloudFrontOriginAccessIdentities\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCloudFrontOriginAccessIdentities\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCloudFrontOriginAccessIdentities.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCloudFrontOriginAccessIdentities = TooManyCloudFrontOriginAccessIdentities;\nclass CNAMEAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"CNAMEAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CNAMEAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CNAMEAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.CNAMEAlreadyExists = CNAMEAlreadyExists;\nclass DistributionAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"DistributionAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"DistributionAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DistributionAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.DistributionAlreadyExists = DistributionAlreadyExists;\nclass IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior = IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior;\nclass InvalidDefaultRootObject extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidDefaultRootObject\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidDefaultRootObject\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidDefaultRootObject.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidDefaultRootObject = InvalidDefaultRootObject;\nclass InvalidErrorCode extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidErrorCode\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidErrorCode\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidErrorCode.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidErrorCode = InvalidErrorCode;\nclass InvalidForwardCookies extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidForwardCookies\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidForwardCookies\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidForwardCookies.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidForwardCookies = InvalidForwardCookies;\nclass InvalidFunctionAssociation extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidFunctionAssociation\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidFunctionAssociation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidFunctionAssociation.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidFunctionAssociation = InvalidFunctionAssociation;\nclass InvalidGeoRestrictionParameter extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidGeoRestrictionParameter\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidGeoRestrictionParameter\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidGeoRestrictionParameter.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidGeoRestrictionParameter = InvalidGeoRestrictionParameter;\nclass InvalidHeadersForS3Origin extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidHeadersForS3Origin\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidHeadersForS3Origin\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidHeadersForS3Origin.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidHeadersForS3Origin = InvalidHeadersForS3Origin;\nclass InvalidLambdaFunctionAssociation extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidLambdaFunctionAssociation\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidLambdaFunctionAssociation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidLambdaFunctionAssociation.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidLambdaFunctionAssociation = InvalidLambdaFunctionAssociation;\nclass InvalidLocationCode extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidLocationCode\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidLocationCode\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidLocationCode.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidLocationCode = InvalidLocationCode;\nclass InvalidMinimumProtocolVersion extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidMinimumProtocolVersion\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidMinimumProtocolVersion\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidMinimumProtocolVersion.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidMinimumProtocolVersion = InvalidMinimumProtocolVersion;\nclass InvalidOrigin extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidOrigin\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidOrigin\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOrigin.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidOrigin = InvalidOrigin;\nclass InvalidOriginAccessIdentity extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidOriginAccessIdentity\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidOriginAccessIdentity\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOriginAccessIdentity.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidOriginAccessIdentity = InvalidOriginAccessIdentity;\nclass InvalidOriginKeepaliveTimeout extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidOriginKeepaliveTimeout\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidOriginKeepaliveTimeout\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOriginKeepaliveTimeout.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidOriginKeepaliveTimeout = InvalidOriginKeepaliveTimeout;\nclass InvalidOriginReadTimeout extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidOriginReadTimeout\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidOriginReadTimeout\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOriginReadTimeout.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidOriginReadTimeout = InvalidOriginReadTimeout;\nclass InvalidProtocolSettings extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidProtocolSettings\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidProtocolSettings\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidProtocolSettings.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidProtocolSettings = InvalidProtocolSettings;\nclass InvalidQueryStringParameters extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidQueryStringParameters\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidQueryStringParameters\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidQueryStringParameters.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidQueryStringParameters = InvalidQueryStringParameters;\nclass InvalidRelativePath extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRelativePath\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRelativePath\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRelativePath.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidRelativePath = InvalidRelativePath;\nclass InvalidRequiredProtocol extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequiredProtocol\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRequiredProtocol\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequiredProtocol.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidRequiredProtocol = InvalidRequiredProtocol;\nclass InvalidResponseCode extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidResponseCode\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidResponseCode\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidResponseCode.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidResponseCode = InvalidResponseCode;\nclass InvalidTTLOrder extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidTTLOrder\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidTTLOrder\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidTTLOrder.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidTTLOrder = InvalidTTLOrder;\nclass InvalidViewerCertificate extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidViewerCertificate\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidViewerCertificate\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidViewerCertificate.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidViewerCertificate = InvalidViewerCertificate;\nclass InvalidWebACLId extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidWebACLId\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidWebACLId\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidWebACLId.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidWebACLId = InvalidWebACLId;\nclass NoSuchCachePolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchCachePolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchCachePolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchCachePolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchCachePolicy = NoSuchCachePolicy;\nclass NoSuchFieldLevelEncryptionConfig extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchFieldLevelEncryptionConfig\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchFieldLevelEncryptionConfig\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchFieldLevelEncryptionConfig.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchFieldLevelEncryptionConfig = NoSuchFieldLevelEncryptionConfig;\nclass NoSuchOrigin extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchOrigin\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchOrigin\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchOrigin.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchOrigin = NoSuchOrigin;\nclass NoSuchOriginRequestPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchOriginRequestPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchOriginRequestPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchOriginRequestPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchOriginRequestPolicy = NoSuchOriginRequestPolicy;\nclass NoSuchRealtimeLogConfig extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchRealtimeLogConfig\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchRealtimeLogConfig\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchRealtimeLogConfig.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchRealtimeLogConfig = NoSuchRealtimeLogConfig;\nclass NoSuchResponseHeadersPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchResponseHeadersPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchResponseHeadersPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchResponseHeadersPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchResponseHeadersPolicy = NoSuchResponseHeadersPolicy;\nclass RealtimeLogConfigOwnerMismatch extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"RealtimeLogConfigOwnerMismatch\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RealtimeLogConfigOwnerMismatch\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RealtimeLogConfigOwnerMismatch.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.RealtimeLogConfigOwnerMismatch = RealtimeLogConfigOwnerMismatch;\nclass TooManyCacheBehaviors extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCacheBehaviors\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCacheBehaviors\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCacheBehaviors.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCacheBehaviors = TooManyCacheBehaviors;\nclass TooManyCertificates extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCertificates\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCertificates\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCertificates.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCertificates = TooManyCertificates;\nclass TooManyCookieNamesInWhiteList extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCookieNamesInWhiteList\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCookieNamesInWhiteList\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCookieNamesInWhiteList.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCookieNamesInWhiteList = TooManyCookieNamesInWhiteList;\nclass TooManyDistributions extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributions\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributions\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributions.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributions = TooManyDistributions;\nclass TooManyDistributionsAssociatedToCachePolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsAssociatedToCachePolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsAssociatedToCachePolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToCachePolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsAssociatedToCachePolicy = TooManyDistributionsAssociatedToCachePolicy;\nclass TooManyDistributionsAssociatedToFieldLevelEncryptionConfig extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToFieldLevelEncryptionConfig.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsAssociatedToFieldLevelEncryptionConfig = TooManyDistributionsAssociatedToFieldLevelEncryptionConfig;\nclass TooManyDistributionsAssociatedToKeyGroup extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsAssociatedToKeyGroup\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsAssociatedToKeyGroup\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToKeyGroup.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsAssociatedToKeyGroup = TooManyDistributionsAssociatedToKeyGroup;\nclass TooManyDistributionsAssociatedToOriginRequestPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsAssociatedToOriginRequestPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsAssociatedToOriginRequestPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToOriginRequestPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsAssociatedToOriginRequestPolicy = TooManyDistributionsAssociatedToOriginRequestPolicy;\nclass TooManyDistributionsAssociatedToResponseHeadersPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsAssociatedToResponseHeadersPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsAssociatedToResponseHeadersPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsAssociatedToResponseHeadersPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsAssociatedToResponseHeadersPolicy = TooManyDistributionsAssociatedToResponseHeadersPolicy;\nclass TooManyDistributionsWithFunctionAssociations extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsWithFunctionAssociations\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsWithFunctionAssociations\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsWithFunctionAssociations.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsWithFunctionAssociations = TooManyDistributionsWithFunctionAssociations;\nclass TooManyDistributionsWithLambdaAssociations extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsWithLambdaAssociations\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsWithLambdaAssociations\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsWithLambdaAssociations.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsWithLambdaAssociations = TooManyDistributionsWithLambdaAssociations;\nclass TooManyDistributionsWithSingleFunctionARN extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyDistributionsWithSingleFunctionARN\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyDistributionsWithSingleFunctionARN\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyDistributionsWithSingleFunctionARN.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyDistributionsWithSingleFunctionARN = TooManyDistributionsWithSingleFunctionARN;\nclass TooManyFunctionAssociations extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFunctionAssociations\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFunctionAssociations\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFunctionAssociations.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFunctionAssociations = TooManyFunctionAssociations;\nclass TooManyHeadersInForwardedValues extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyHeadersInForwardedValues\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyHeadersInForwardedValues\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyHeadersInForwardedValues.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyHeadersInForwardedValues = TooManyHeadersInForwardedValues;\nclass TooManyKeyGroupsAssociatedToDistribution extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyKeyGroupsAssociatedToDistribution\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyKeyGroupsAssociatedToDistribution\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyKeyGroupsAssociatedToDistribution.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyKeyGroupsAssociatedToDistribution = TooManyKeyGroupsAssociatedToDistribution;\nclass TooManyLambdaFunctionAssociations extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyLambdaFunctionAssociations\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyLambdaFunctionAssociations\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyLambdaFunctionAssociations.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyLambdaFunctionAssociations = TooManyLambdaFunctionAssociations;\nclass TooManyOriginCustomHeaders extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyOriginCustomHeaders\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyOriginCustomHeaders\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyOriginCustomHeaders.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyOriginCustomHeaders = TooManyOriginCustomHeaders;\nclass TooManyOriginGroupsPerDistribution extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyOriginGroupsPerDistribution\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyOriginGroupsPerDistribution\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyOriginGroupsPerDistribution.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyOriginGroupsPerDistribution = TooManyOriginGroupsPerDistribution;\nclass TooManyOrigins extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyOrigins\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyOrigins\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyOrigins.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyOrigins = TooManyOrigins;\nclass TooManyQueryStringParameters extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyQueryStringParameters\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyQueryStringParameters\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyQueryStringParameters.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyQueryStringParameters = TooManyQueryStringParameters;\nclass TooManyTrustedSigners extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyTrustedSigners\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyTrustedSigners\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyTrustedSigners.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyTrustedSigners = TooManyTrustedSigners;\nclass TrustedKeyGroupDoesNotExist extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TrustedKeyGroupDoesNotExist\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TrustedKeyGroupDoesNotExist\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TrustedKeyGroupDoesNotExist.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TrustedKeyGroupDoesNotExist = TrustedKeyGroupDoesNotExist;\nclass TrustedSignerDoesNotExist extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TrustedSignerDoesNotExist\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TrustedSignerDoesNotExist\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TrustedSignerDoesNotExist.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TrustedSignerDoesNotExist = TrustedSignerDoesNotExist;\nclass InvalidTagging extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidTagging\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidTagging\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidTagging.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidTagging = InvalidTagging;\nclass FieldLevelEncryptionConfigAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FieldLevelEncryptionConfigAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FieldLevelEncryptionConfigAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FieldLevelEncryptionConfigAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FieldLevelEncryptionConfigAlreadyExists = FieldLevelEncryptionConfigAlreadyExists;\nclass NoSuchFieldLevelEncryptionProfile extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchFieldLevelEncryptionProfile\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchFieldLevelEncryptionProfile\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchFieldLevelEncryptionProfile.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchFieldLevelEncryptionProfile = NoSuchFieldLevelEncryptionProfile;\nclass QueryArgProfileEmpty extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"QueryArgProfileEmpty\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"QueryArgProfileEmpty\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, QueryArgProfileEmpty.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.QueryArgProfileEmpty = QueryArgProfileEmpty;\nclass TooManyFieldLevelEncryptionConfigs extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFieldLevelEncryptionConfigs\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFieldLevelEncryptionConfigs\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionConfigs.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFieldLevelEncryptionConfigs = TooManyFieldLevelEncryptionConfigs;\nclass TooManyFieldLevelEncryptionContentTypeProfiles extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFieldLevelEncryptionContentTypeProfiles\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFieldLevelEncryptionContentTypeProfiles\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionContentTypeProfiles.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFieldLevelEncryptionContentTypeProfiles = TooManyFieldLevelEncryptionContentTypeProfiles;\nclass TooManyFieldLevelEncryptionQueryArgProfiles extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFieldLevelEncryptionQueryArgProfiles\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFieldLevelEncryptionQueryArgProfiles\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionQueryArgProfiles.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFieldLevelEncryptionQueryArgProfiles = TooManyFieldLevelEncryptionQueryArgProfiles;\nclass FieldLevelEncryptionProfileAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FieldLevelEncryptionProfileAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FieldLevelEncryptionProfileAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FieldLevelEncryptionProfileAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FieldLevelEncryptionProfileAlreadyExists = FieldLevelEncryptionProfileAlreadyExists;\nclass FieldLevelEncryptionProfileSizeExceeded extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FieldLevelEncryptionProfileSizeExceeded\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FieldLevelEncryptionProfileSizeExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FieldLevelEncryptionProfileSizeExceeded.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FieldLevelEncryptionProfileSizeExceeded = FieldLevelEncryptionProfileSizeExceeded;\nclass NoSuchPublicKey extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchPublicKey\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchPublicKey\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchPublicKey.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchPublicKey = NoSuchPublicKey;\nclass TooManyFieldLevelEncryptionEncryptionEntities extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFieldLevelEncryptionEncryptionEntities\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFieldLevelEncryptionEncryptionEntities\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionEncryptionEntities.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFieldLevelEncryptionEncryptionEntities = TooManyFieldLevelEncryptionEncryptionEntities;\nclass TooManyFieldLevelEncryptionFieldPatterns extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFieldLevelEncryptionFieldPatterns\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFieldLevelEncryptionFieldPatterns\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionFieldPatterns.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFieldLevelEncryptionFieldPatterns = TooManyFieldLevelEncryptionFieldPatterns;\nclass TooManyFieldLevelEncryptionProfiles extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFieldLevelEncryptionProfiles\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFieldLevelEncryptionProfiles\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFieldLevelEncryptionProfiles.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFieldLevelEncryptionProfiles = TooManyFieldLevelEncryptionProfiles;\nvar FunctionRuntime;\n(function (FunctionRuntime) {\n    FunctionRuntime[\"cloudfront_js_1_0\"] = \"cloudfront-js-1.0\";\n})(FunctionRuntime = exports.FunctionRuntime || (exports.FunctionRuntime = {}));\nvar FunctionStage;\n(function (FunctionStage) {\n    FunctionStage[\"DEVELOPMENT\"] = \"DEVELOPMENT\";\n    FunctionStage[\"LIVE\"] = \"LIVE\";\n})(FunctionStage = exports.FunctionStage || (exports.FunctionStage = {}));\nclass FunctionAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FunctionAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FunctionAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FunctionAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FunctionAlreadyExists = FunctionAlreadyExists;\nclass FunctionSizeLimitExceeded extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FunctionSizeLimitExceeded\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FunctionSizeLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FunctionSizeLimitExceeded.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FunctionSizeLimitExceeded = FunctionSizeLimitExceeded;\nclass TooManyFunctions extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyFunctions\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyFunctions\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyFunctions.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyFunctions = TooManyFunctions;\nclass UnsupportedOperation extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"UnsupportedOperation\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnsupportedOperation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedOperation.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.UnsupportedOperation = UnsupportedOperation;\nclass TooManyInvalidationsInProgress extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyInvalidationsInProgress\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyInvalidationsInProgress\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyInvalidationsInProgress.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyInvalidationsInProgress = TooManyInvalidationsInProgress;\nclass KeyGroupAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"KeyGroupAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"KeyGroupAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, KeyGroupAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.KeyGroupAlreadyExists = KeyGroupAlreadyExists;\nclass TooManyKeyGroups extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyKeyGroups\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyKeyGroups\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyKeyGroups.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyKeyGroups = TooManyKeyGroups;\nclass TooManyPublicKeysInKeyGroup extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyPublicKeysInKeyGroup\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyPublicKeysInKeyGroup\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyPublicKeysInKeyGroup.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyPublicKeysInKeyGroup = TooManyPublicKeysInKeyGroup;\nvar RealtimeMetricsSubscriptionStatus;\n(function (RealtimeMetricsSubscriptionStatus) {\n    RealtimeMetricsSubscriptionStatus[\"Disabled\"] = \"Disabled\";\n    RealtimeMetricsSubscriptionStatus[\"Enabled\"] = \"Enabled\";\n})(RealtimeMetricsSubscriptionStatus = exports.RealtimeMetricsSubscriptionStatus || (exports.RealtimeMetricsSubscriptionStatus = {}));\nclass OriginRequestPolicyAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"OriginRequestPolicyAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OriginRequestPolicyAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OriginRequestPolicyAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.OriginRequestPolicyAlreadyExists = OriginRequestPolicyAlreadyExists;\nclass TooManyCookiesInOriginRequestPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCookiesInOriginRequestPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCookiesInOriginRequestPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCookiesInOriginRequestPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCookiesInOriginRequestPolicy = TooManyCookiesInOriginRequestPolicy;\nclass TooManyHeadersInOriginRequestPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyHeadersInOriginRequestPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyHeadersInOriginRequestPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyHeadersInOriginRequestPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyHeadersInOriginRequestPolicy = TooManyHeadersInOriginRequestPolicy;\nclass TooManyOriginRequestPolicies extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyOriginRequestPolicies\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyOriginRequestPolicies\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyOriginRequestPolicies.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyOriginRequestPolicies = TooManyOriginRequestPolicies;\nclass TooManyQueryStringsInOriginRequestPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyQueryStringsInOriginRequestPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyQueryStringsInOriginRequestPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyQueryStringsInOriginRequestPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyQueryStringsInOriginRequestPolicy = TooManyQueryStringsInOriginRequestPolicy;\nclass PublicKeyAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"PublicKeyAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PublicKeyAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PublicKeyAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.PublicKeyAlreadyExists = PublicKeyAlreadyExists;\nclass TooManyPublicKeys extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyPublicKeys\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyPublicKeys\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyPublicKeys.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyPublicKeys = TooManyPublicKeys;\nclass RealtimeLogConfigAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"RealtimeLogConfigAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RealtimeLogConfigAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RealtimeLogConfigAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.RealtimeLogConfigAlreadyExists = RealtimeLogConfigAlreadyExists;\nclass TooManyRealtimeLogConfigs extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyRealtimeLogConfigs\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyRealtimeLogConfigs\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyRealtimeLogConfigs.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyRealtimeLogConfigs = TooManyRealtimeLogConfigs;\nvar FrameOptionsList;\n(function (FrameOptionsList) {\n    FrameOptionsList[\"DENY\"] = \"DENY\";\n    FrameOptionsList[\"SAMEORIGIN\"] = \"SAMEORIGIN\";\n})(FrameOptionsList = exports.FrameOptionsList || (exports.FrameOptionsList = {}));\nvar ReferrerPolicyList;\n(function (ReferrerPolicyList) {\n    ReferrerPolicyList[\"no_referrer\"] = \"no-referrer\";\n    ReferrerPolicyList[\"no_referrer_when_downgrade\"] = \"no-referrer-when-downgrade\";\n    ReferrerPolicyList[\"origin\"] = \"origin\";\n    ReferrerPolicyList[\"origin_when_cross_origin\"] = \"origin-when-cross-origin\";\n    ReferrerPolicyList[\"same_origin\"] = \"same-origin\";\n    ReferrerPolicyList[\"strict_origin\"] = \"strict-origin\";\n    ReferrerPolicyList[\"strict_origin_when_cross_origin\"] = \"strict-origin-when-cross-origin\";\n    ReferrerPolicyList[\"unsafe_url\"] = \"unsafe-url\";\n})(ReferrerPolicyList = exports.ReferrerPolicyList || (exports.ReferrerPolicyList = {}));\nclass ResponseHeadersPolicyAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"ResponseHeadersPolicyAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResponseHeadersPolicyAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResponseHeadersPolicyAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.ResponseHeadersPolicyAlreadyExists = ResponseHeadersPolicyAlreadyExists;\nclass TooLongCSPInResponseHeadersPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooLongCSPInResponseHeadersPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooLongCSPInResponseHeadersPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooLongCSPInResponseHeadersPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooLongCSPInResponseHeadersPolicy = TooLongCSPInResponseHeadersPolicy;\nclass TooManyCustomHeadersInResponseHeadersPolicy extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyCustomHeadersInResponseHeadersPolicy\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyCustomHeadersInResponseHeadersPolicy\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyCustomHeadersInResponseHeadersPolicy.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyCustomHeadersInResponseHeadersPolicy = TooManyCustomHeadersInResponseHeadersPolicy;\nclass TooManyResponseHeadersPolicies extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyResponseHeadersPolicies\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyResponseHeadersPolicies\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyResponseHeadersPolicies.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyResponseHeadersPolicies = TooManyResponseHeadersPolicies;\nclass StreamingDistributionAlreadyExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"StreamingDistributionAlreadyExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"StreamingDistributionAlreadyExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, StreamingDistributionAlreadyExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.StreamingDistributionAlreadyExists = StreamingDistributionAlreadyExists;\nclass TooManyStreamingDistributionCNAMEs extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyStreamingDistributionCNAMEs\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyStreamingDistributionCNAMEs\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyStreamingDistributionCNAMEs.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyStreamingDistributionCNAMEs = TooManyStreamingDistributionCNAMEs;\nclass TooManyStreamingDistributions extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyStreamingDistributions\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyStreamingDistributions\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyStreamingDistributions.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TooManyStreamingDistributions = TooManyStreamingDistributions;\nclass IllegalDelete extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"IllegalDelete\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IllegalDelete\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IllegalDelete.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.IllegalDelete = IllegalDelete;\nclass InvalidIfMatchVersion extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidIfMatchVersion\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidIfMatchVersion\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidIfMatchVersion.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidIfMatchVersion = InvalidIfMatchVersion;\nclass PreconditionFailed extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"PreconditionFailed\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PreconditionFailed\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PreconditionFailed.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.PreconditionFailed = PreconditionFailed;\nclass CloudFrontOriginAccessIdentityInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"CloudFrontOriginAccessIdentityInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CloudFrontOriginAccessIdentityInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CloudFrontOriginAccessIdentityInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.CloudFrontOriginAccessIdentityInUse = CloudFrontOriginAccessIdentityInUse;\nclass NoSuchCloudFrontOriginAccessIdentity extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchCloudFrontOriginAccessIdentity\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchCloudFrontOriginAccessIdentity\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchCloudFrontOriginAccessIdentity.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchCloudFrontOriginAccessIdentity = NoSuchCloudFrontOriginAccessIdentity;\nclass DistributionNotDisabled extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"DistributionNotDisabled\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"DistributionNotDisabled\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DistributionNotDisabled.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.DistributionNotDisabled = DistributionNotDisabled;\nclass FieldLevelEncryptionConfigInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FieldLevelEncryptionConfigInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FieldLevelEncryptionConfigInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FieldLevelEncryptionConfigInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FieldLevelEncryptionConfigInUse = FieldLevelEncryptionConfigInUse;\nclass FieldLevelEncryptionProfileInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FieldLevelEncryptionProfileInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FieldLevelEncryptionProfileInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FieldLevelEncryptionProfileInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FieldLevelEncryptionProfileInUse = FieldLevelEncryptionProfileInUse;\nclass FunctionInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"FunctionInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"FunctionInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, FunctionInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.FunctionInUse = FunctionInUse;\nclass NoSuchFunctionExists extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchFunctionExists\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchFunctionExists\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchFunctionExists.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchFunctionExists = NoSuchFunctionExists;\nclass NoSuchResource extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchResource\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchResource\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchResource.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchResource = NoSuchResource;\nconst KeyPairIdsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.KeyPairIdsFilterSensitiveLog = KeyPairIdsFilterSensitiveLog;\nconst KGKeyPairIdsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.KGKeyPairIdsFilterSensitiveLog = KGKeyPairIdsFilterSensitiveLog;\nconst ActiveTrustedKeyGroupsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ActiveTrustedKeyGroupsFilterSensitiveLog = ActiveTrustedKeyGroupsFilterSensitiveLog;\nconst SignerFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.SignerFilterSensitiveLog = SignerFilterSensitiveLog;\nconst ActiveTrustedSignersFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ActiveTrustedSignersFilterSensitiveLog = ActiveTrustedSignersFilterSensitiveLog;\nconst AliasesFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.AliasesFilterSensitiveLog = AliasesFilterSensitiveLog;\nconst AliasICPRecordalFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.AliasICPRecordalFilterSensitiveLog = AliasICPRecordalFilterSensitiveLog;\nconst CachedMethodsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CachedMethodsFilterSensitiveLog = CachedMethodsFilterSensitiveLog;\nconst AllowedMethodsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.AllowedMethodsFilterSensitiveLog = AllowedMethodsFilterSensitiveLog;\nconst AssociateAliasRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.AssociateAliasRequestFilterSensitiveLog = AssociateAliasRequestFilterSensitiveLog;\nconst CookieNamesFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CookieNamesFilterSensitiveLog = CookieNamesFilterSensitiveLog;\nconst CookiePreferenceFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CookiePreferenceFilterSensitiveLog = CookiePreferenceFilterSensitiveLog;\nconst HeadersFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.HeadersFilterSensitiveLog = HeadersFilterSensitiveLog;\nconst QueryStringCacheKeysFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.QueryStringCacheKeysFilterSensitiveLog = QueryStringCacheKeysFilterSensitiveLog;\nconst ForwardedValuesFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ForwardedValuesFilterSensitiveLog = ForwardedValuesFilterSensitiveLog;\nconst FunctionAssociationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FunctionAssociationFilterSensitiveLog = FunctionAssociationFilterSensitiveLog;\nconst FunctionAssociationsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FunctionAssociationsFilterSensitiveLog = FunctionAssociationsFilterSensitiveLog;\nconst LambdaFunctionAssociationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.LambdaFunctionAssociationFilterSensitiveLog = LambdaFunctionAssociationFilterSensitiveLog;\nconst LambdaFunctionAssociationsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.LambdaFunctionAssociationsFilterSensitiveLog = LambdaFunctionAssociationsFilterSensitiveLog;\nconst TrustedKeyGroupsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.TrustedKeyGroupsFilterSensitiveLog = TrustedKeyGroupsFilterSensitiveLog;\nconst TrustedSignersFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.TrustedSignersFilterSensitiveLog = TrustedSignersFilterSensitiveLog;\nconst CacheBehaviorFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CacheBehaviorFilterSensitiveLog = CacheBehaviorFilterSensitiveLog;\nconst CacheBehaviorsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CacheBehaviorsFilterSensitiveLog = CacheBehaviorsFilterSensitiveLog;\nconst CachePolicyCookiesConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CachePolicyCookiesConfigFilterSensitiveLog = CachePolicyCookiesConfigFilterSensitiveLog;\nconst CachePolicyHeadersConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CachePolicyHeadersConfigFilterSensitiveLog = CachePolicyHeadersConfigFilterSensitiveLog;\nconst QueryStringNamesFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.QueryStringNamesFilterSensitiveLog = QueryStringNamesFilterSensitiveLog;\nconst CachePolicyQueryStringsConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CachePolicyQueryStringsConfigFilterSensitiveLog = CachePolicyQueryStringsConfigFilterSensitiveLog;\nconst ParametersInCacheKeyAndForwardedToOriginFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ParametersInCacheKeyAndForwardedToOriginFilterSensitiveLog = ParametersInCacheKeyAndForwardedToOriginFilterSensitiveLog;\nconst CachePolicyConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CachePolicyConfigFilterSensitiveLog = CachePolicyConfigFilterSensitiveLog;\nconst CachePolicyFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CachePolicyFilterSensitiveLog = CachePolicyFilterSensitiveLog;\nconst CachePolicySummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CachePolicySummaryFilterSensitiveLog = CachePolicySummaryFilterSensitiveLog;\nconst CachePolicyListFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CachePolicyListFilterSensitiveLog = CachePolicyListFilterSensitiveLog;\nconst CreateCachePolicyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateCachePolicyRequestFilterSensitiveLog = CreateCachePolicyRequestFilterSensitiveLog;\nconst CreateCachePolicyResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateCachePolicyResultFilterSensitiveLog = CreateCachePolicyResultFilterSensitiveLog;\nconst CloudFrontOriginAccessIdentityConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CloudFrontOriginAccessIdentityConfigFilterSensitiveLog = CloudFrontOriginAccessIdentityConfigFilterSensitiveLog;\nconst CreateCloudFrontOriginAccessIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateCloudFrontOriginAccessIdentityRequestFilterSensitiveLog = CreateCloudFrontOriginAccessIdentityRequestFilterSensitiveLog;\nconst CloudFrontOriginAccessIdentityFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CloudFrontOriginAccessIdentityFilterSensitiveLog = CloudFrontOriginAccessIdentityFilterSensitiveLog;\nconst CreateCloudFrontOriginAccessIdentityResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateCloudFrontOriginAccessIdentityResultFilterSensitiveLog = CreateCloudFrontOriginAccessIdentityResultFilterSensitiveLog;\nconst CustomErrorResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CustomErrorResponseFilterSensitiveLog = CustomErrorResponseFilterSensitiveLog;\nconst CustomErrorResponsesFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CustomErrorResponsesFilterSensitiveLog = CustomErrorResponsesFilterSensitiveLog;\nconst DefaultCacheBehaviorFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DefaultCacheBehaviorFilterSensitiveLog = DefaultCacheBehaviorFilterSensitiveLog;\nconst LoggingConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.LoggingConfigFilterSensitiveLog = LoggingConfigFilterSensitiveLog;\nconst StatusCodesFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.StatusCodesFilterSensitiveLog = StatusCodesFilterSensitiveLog;\nconst OriginGroupFailoverCriteriaFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginGroupFailoverCriteriaFilterSensitiveLog = OriginGroupFailoverCriteriaFilterSensitiveLog;\nconst OriginGroupMemberFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginGroupMemberFilterSensitiveLog = OriginGroupMemberFilterSensitiveLog;\nconst OriginGroupMembersFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginGroupMembersFilterSensitiveLog = OriginGroupMembersFilterSensitiveLog;\nconst OriginGroupFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginGroupFilterSensitiveLog = OriginGroupFilterSensitiveLog;\nconst OriginGroupsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginGroupsFilterSensitiveLog = OriginGroupsFilterSensitiveLog;\nconst OriginCustomHeaderFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.HeaderValue && { HeaderValue: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.OriginCustomHeaderFilterSensitiveLog = OriginCustomHeaderFilterSensitiveLog;\nconst CustomHeadersFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Items && { Items: obj.Items.map((item) => (0, exports.OriginCustomHeaderFilterSensitiveLog)(item)) }),\n});\nexports.CustomHeadersFilterSensitiveLog = CustomHeadersFilterSensitiveLog;\nconst OriginSslProtocolsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginSslProtocolsFilterSensitiveLog = OriginSslProtocolsFilterSensitiveLog;\nconst CustomOriginConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CustomOriginConfigFilterSensitiveLog = CustomOriginConfigFilterSensitiveLog;\nconst OriginShieldFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginShieldFilterSensitiveLog = OriginShieldFilterSensitiveLog;\nconst S3OriginConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.S3OriginConfigFilterSensitiveLog = S3OriginConfigFilterSensitiveLog;\nconst OriginFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.CustomHeaders && { CustomHeaders: (0, exports.CustomHeadersFilterSensitiveLog)(obj.CustomHeaders) }),\n});\nexports.OriginFilterSensitiveLog = OriginFilterSensitiveLog;\nconst OriginsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginsFilterSensitiveLog = OriginsFilterSensitiveLog;\nconst GeoRestrictionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GeoRestrictionFilterSensitiveLog = GeoRestrictionFilterSensitiveLog;\nconst RestrictionsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.RestrictionsFilterSensitiveLog = RestrictionsFilterSensitiveLog;\nconst ViewerCertificateFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ViewerCertificateFilterSensitiveLog = ViewerCertificateFilterSensitiveLog;\nconst DistributionConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Comment && { Comment: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.DistributionConfigFilterSensitiveLog = DistributionConfigFilterSensitiveLog;\nconst CreateDistributionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.DistributionConfig && { DistributionConfig: (0, exports.DistributionConfigFilterSensitiveLog)(obj.DistributionConfig) }),\n});\nexports.CreateDistributionRequestFilterSensitiveLog = CreateDistributionRequestFilterSensitiveLog;\nconst DistributionFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.DistributionConfig && { DistributionConfig: (0, exports.DistributionConfigFilterSensitiveLog)(obj.DistributionConfig) }),\n});\nexports.DistributionFilterSensitiveLog = DistributionFilterSensitiveLog;\nconst CreateDistributionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Distribution && { Distribution: (0, exports.DistributionFilterSensitiveLog)(obj.Distribution) }),\n});\nexports.CreateDistributionResultFilterSensitiveLog = CreateDistributionResultFilterSensitiveLog;\nconst TagFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.TagFilterSensitiveLog = TagFilterSensitiveLog;\nconst TagsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.TagsFilterSensitiveLog = TagsFilterSensitiveLog;\nconst DistributionConfigWithTagsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.DistributionConfig && { DistributionConfig: (0, exports.DistributionConfigFilterSensitiveLog)(obj.DistributionConfig) }),\n});\nexports.DistributionConfigWithTagsFilterSensitiveLog = DistributionConfigWithTagsFilterSensitiveLog;\nconst CreateDistributionWithTagsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.DistributionConfigWithTags && {\n        DistributionConfigWithTags: (0, exports.DistributionConfigWithTagsFilterSensitiveLog)(obj.DistributionConfigWithTags),\n    }),\n});\nexports.CreateDistributionWithTagsRequestFilterSensitiveLog = CreateDistributionWithTagsRequestFilterSensitiveLog;\nconst CreateDistributionWithTagsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Distribution && { Distribution: (0, exports.DistributionFilterSensitiveLog)(obj.Distribution) }),\n});\nexports.CreateDistributionWithTagsResultFilterSensitiveLog = CreateDistributionWithTagsResultFilterSensitiveLog;\nconst ContentTypeProfileFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ContentTypeProfileFilterSensitiveLog = ContentTypeProfileFilterSensitiveLog;\nconst ContentTypeProfilesFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ContentTypeProfilesFilterSensitiveLog = ContentTypeProfilesFilterSensitiveLog;\nconst ContentTypeProfileConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ContentTypeProfileConfigFilterSensitiveLog = ContentTypeProfileConfigFilterSensitiveLog;\nconst QueryArgProfileFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.QueryArgProfileFilterSensitiveLog = QueryArgProfileFilterSensitiveLog;\nconst QueryArgProfilesFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.QueryArgProfilesFilterSensitiveLog = QueryArgProfilesFilterSensitiveLog;\nconst QueryArgProfileConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.QueryArgProfileConfigFilterSensitiveLog = QueryArgProfileConfigFilterSensitiveLog;\nconst FieldLevelEncryptionConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FieldLevelEncryptionConfigFilterSensitiveLog = FieldLevelEncryptionConfigFilterSensitiveLog;\nconst CreateFieldLevelEncryptionConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateFieldLevelEncryptionConfigRequestFilterSensitiveLog = CreateFieldLevelEncryptionConfigRequestFilterSensitiveLog;\nconst FieldLevelEncryptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FieldLevelEncryptionFilterSensitiveLog = FieldLevelEncryptionFilterSensitiveLog;\nconst CreateFieldLevelEncryptionConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateFieldLevelEncryptionConfigResultFilterSensitiveLog = CreateFieldLevelEncryptionConfigResultFilterSensitiveLog;\nconst FieldPatternsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FieldPatternsFilterSensitiveLog = FieldPatternsFilterSensitiveLog;\nconst EncryptionEntityFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.EncryptionEntityFilterSensitiveLog = EncryptionEntityFilterSensitiveLog;\nconst EncryptionEntitiesFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.EncryptionEntitiesFilterSensitiveLog = EncryptionEntitiesFilterSensitiveLog;\nconst FieldLevelEncryptionProfileConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FieldLevelEncryptionProfileConfigFilterSensitiveLog = FieldLevelEncryptionProfileConfigFilterSensitiveLog;\nconst CreateFieldLevelEncryptionProfileRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateFieldLevelEncryptionProfileRequestFilterSensitiveLog = CreateFieldLevelEncryptionProfileRequestFilterSensitiveLog;\nconst FieldLevelEncryptionProfileFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FieldLevelEncryptionProfileFilterSensitiveLog = FieldLevelEncryptionProfileFilterSensitiveLog;\nconst CreateFieldLevelEncryptionProfileResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateFieldLevelEncryptionProfileResultFilterSensitiveLog = CreateFieldLevelEncryptionProfileResultFilterSensitiveLog;\nconst FunctionConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FunctionConfigFilterSensitiveLog = FunctionConfigFilterSensitiveLog;\nconst CreateFunctionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.FunctionCode && { FunctionCode: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.CreateFunctionRequestFilterSensitiveLog = CreateFunctionRequestFilterSensitiveLog;\nconst FunctionMetadataFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FunctionMetadataFilterSensitiveLog = FunctionMetadataFilterSensitiveLog;\nconst FunctionSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FunctionSummaryFilterSensitiveLog = FunctionSummaryFilterSensitiveLog;\nconst CreateFunctionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateFunctionResultFilterSensitiveLog = CreateFunctionResultFilterSensitiveLog;\nconst PathsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.PathsFilterSensitiveLog = PathsFilterSensitiveLog;\nconst InvalidationBatchFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.InvalidationBatchFilterSensitiveLog = InvalidationBatchFilterSensitiveLog;\nconst CreateInvalidationRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateInvalidationRequestFilterSensitiveLog = CreateInvalidationRequestFilterSensitiveLog;\nconst InvalidationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.InvalidationFilterSensitiveLog = InvalidationFilterSensitiveLog;\nconst CreateInvalidationResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateInvalidationResultFilterSensitiveLog = CreateInvalidationResultFilterSensitiveLog;\nconst KeyGroupConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.KeyGroupConfigFilterSensitiveLog = KeyGroupConfigFilterSensitiveLog;\nconst CreateKeyGroupRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateKeyGroupRequestFilterSensitiveLog = CreateKeyGroupRequestFilterSensitiveLog;\nconst KeyGroupFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.KeyGroupFilterSensitiveLog = KeyGroupFilterSensitiveLog;\nconst CreateKeyGroupResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateKeyGroupResultFilterSensitiveLog = CreateKeyGroupResultFilterSensitiveLog;\nconst RealtimeMetricsSubscriptionConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.RealtimeMetricsSubscriptionConfigFilterSensitiveLog = RealtimeMetricsSubscriptionConfigFilterSensitiveLog;\nconst MonitoringSubscriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.MonitoringSubscriptionFilterSensitiveLog = MonitoringSubscriptionFilterSensitiveLog;\nconst CreateMonitoringSubscriptionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateMonitoringSubscriptionRequestFilterSensitiveLog = CreateMonitoringSubscriptionRequestFilterSensitiveLog;\nconst CreateMonitoringSubscriptionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateMonitoringSubscriptionResultFilterSensitiveLog = CreateMonitoringSubscriptionResultFilterSensitiveLog;\nconst OriginRequestPolicyCookiesConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginRequestPolicyCookiesConfigFilterSensitiveLog = OriginRequestPolicyCookiesConfigFilterSensitiveLog;\nconst OriginRequestPolicyHeadersConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginRequestPolicyHeadersConfigFilterSensitiveLog = OriginRequestPolicyHeadersConfigFilterSensitiveLog;\nconst OriginRequestPolicyQueryStringsConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginRequestPolicyQueryStringsConfigFilterSensitiveLog = OriginRequestPolicyQueryStringsConfigFilterSensitiveLog;\nconst OriginRequestPolicyConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginRequestPolicyConfigFilterSensitiveLog = OriginRequestPolicyConfigFilterSensitiveLog;\nconst CreateOriginRequestPolicyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateOriginRequestPolicyRequestFilterSensitiveLog = CreateOriginRequestPolicyRequestFilterSensitiveLog;\nconst OriginRequestPolicyFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginRequestPolicyFilterSensitiveLog = OriginRequestPolicyFilterSensitiveLog;\nconst CreateOriginRequestPolicyResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateOriginRequestPolicyResultFilterSensitiveLog = CreateOriginRequestPolicyResultFilterSensitiveLog;\nconst PublicKeyConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.PublicKeyConfigFilterSensitiveLog = PublicKeyConfigFilterSensitiveLog;\nconst CreatePublicKeyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreatePublicKeyRequestFilterSensitiveLog = CreatePublicKeyRequestFilterSensitiveLog;\nconst PublicKeyFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.PublicKeyFilterSensitiveLog = PublicKeyFilterSensitiveLog;\nconst CreatePublicKeyResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreatePublicKeyResultFilterSensitiveLog = CreatePublicKeyResultFilterSensitiveLog;\nconst KinesisStreamConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.KinesisStreamConfigFilterSensitiveLog = KinesisStreamConfigFilterSensitiveLog;\nconst EndPointFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.EndPointFilterSensitiveLog = EndPointFilterSensitiveLog;\nconst CreateRealtimeLogConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateRealtimeLogConfigRequestFilterSensitiveLog = CreateRealtimeLogConfigRequestFilterSensitiveLog;\nconst RealtimeLogConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.RealtimeLogConfigFilterSensitiveLog = RealtimeLogConfigFilterSensitiveLog;\nconst CreateRealtimeLogConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateRealtimeLogConfigResultFilterSensitiveLog = CreateRealtimeLogConfigResultFilterSensitiveLog;\nconst ResponseHeadersPolicyAccessControlAllowHeadersFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyAccessControlAllowHeadersFilterSensitiveLog = ResponseHeadersPolicyAccessControlAllowHeadersFilterSensitiveLog;\nconst ResponseHeadersPolicyAccessControlAllowMethodsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyAccessControlAllowMethodsFilterSensitiveLog = ResponseHeadersPolicyAccessControlAllowMethodsFilterSensitiveLog;\nconst ResponseHeadersPolicyAccessControlAllowOriginsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyAccessControlAllowOriginsFilterSensitiveLog = ResponseHeadersPolicyAccessControlAllowOriginsFilterSensitiveLog;\nconst ResponseHeadersPolicyAccessControlExposeHeadersFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyAccessControlExposeHeadersFilterSensitiveLog = ResponseHeadersPolicyAccessControlExposeHeadersFilterSensitiveLog;\nconst ResponseHeadersPolicyCorsConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyCorsConfigFilterSensitiveLog = ResponseHeadersPolicyCorsConfigFilterSensitiveLog;\nconst ResponseHeadersPolicyCustomHeaderFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyCustomHeaderFilterSensitiveLog = ResponseHeadersPolicyCustomHeaderFilterSensitiveLog;\nconst ResponseHeadersPolicyCustomHeadersConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyCustomHeadersConfigFilterSensitiveLog = ResponseHeadersPolicyCustomHeadersConfigFilterSensitiveLog;\nconst ResponseHeadersPolicyContentSecurityPolicyFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyContentSecurityPolicyFilterSensitiveLog = ResponseHeadersPolicyContentSecurityPolicyFilterSensitiveLog;\nconst ResponseHeadersPolicyContentTypeOptionsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyContentTypeOptionsFilterSensitiveLog = ResponseHeadersPolicyContentTypeOptionsFilterSensitiveLog;\nconst ResponseHeadersPolicyFrameOptionsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyFrameOptionsFilterSensitiveLog = ResponseHeadersPolicyFrameOptionsFilterSensitiveLog;\nconst ResponseHeadersPolicyReferrerPolicyFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyReferrerPolicyFilterSensitiveLog = ResponseHeadersPolicyReferrerPolicyFilterSensitiveLog;\nconst ResponseHeadersPolicyStrictTransportSecurityFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyStrictTransportSecurityFilterSensitiveLog = ResponseHeadersPolicyStrictTransportSecurityFilterSensitiveLog;\nconst ResponseHeadersPolicyXSSProtectionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyXSSProtectionFilterSensitiveLog = ResponseHeadersPolicyXSSProtectionFilterSensitiveLog;\nconst ResponseHeadersPolicySecurityHeadersConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicySecurityHeadersConfigFilterSensitiveLog = ResponseHeadersPolicySecurityHeadersConfigFilterSensitiveLog;\nconst ResponseHeadersPolicyServerTimingHeadersConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyServerTimingHeadersConfigFilterSensitiveLog = ResponseHeadersPolicyServerTimingHeadersConfigFilterSensitiveLog;\nconst ResponseHeadersPolicyConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyConfigFilterSensitiveLog = ResponseHeadersPolicyConfigFilterSensitiveLog;\nconst CreateResponseHeadersPolicyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateResponseHeadersPolicyRequestFilterSensitiveLog = CreateResponseHeadersPolicyRequestFilterSensitiveLog;\nconst ResponseHeadersPolicyFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyFilterSensitiveLog = ResponseHeadersPolicyFilterSensitiveLog;\nconst CreateResponseHeadersPolicyResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateResponseHeadersPolicyResultFilterSensitiveLog = CreateResponseHeadersPolicyResultFilterSensitiveLog;\nconst StreamingLoggingConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.StreamingLoggingConfigFilterSensitiveLog = StreamingLoggingConfigFilterSensitiveLog;\nconst S3OriginFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.S3OriginFilterSensitiveLog = S3OriginFilterSensitiveLog;\nconst StreamingDistributionConfigFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.StreamingDistributionConfigFilterSensitiveLog = StreamingDistributionConfigFilterSensitiveLog;\nconst CreateStreamingDistributionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateStreamingDistributionRequestFilterSensitiveLog = CreateStreamingDistributionRequestFilterSensitiveLog;\nconst StreamingDistributionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.StreamingDistributionFilterSensitiveLog = StreamingDistributionFilterSensitiveLog;\nconst CreateStreamingDistributionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateStreamingDistributionResultFilterSensitiveLog = CreateStreamingDistributionResultFilterSensitiveLog;\nconst StreamingDistributionConfigWithTagsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.StreamingDistributionConfigWithTagsFilterSensitiveLog = StreamingDistributionConfigWithTagsFilterSensitiveLog;\nconst CreateStreamingDistributionWithTagsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateStreamingDistributionWithTagsRequestFilterSensitiveLog = CreateStreamingDistributionWithTagsRequestFilterSensitiveLog;\nconst CreateStreamingDistributionWithTagsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CreateStreamingDistributionWithTagsResultFilterSensitiveLog = CreateStreamingDistributionWithTagsResultFilterSensitiveLog;\nconst DeleteCachePolicyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DeleteCachePolicyRequestFilterSensitiveLog = DeleteCachePolicyRequestFilterSensitiveLog;\nconst DeleteCloudFrontOriginAccessIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DeleteCloudFrontOriginAccessIdentityRequestFilterSensitiveLog = DeleteCloudFrontOriginAccessIdentityRequestFilterSensitiveLog;\nconst DeleteDistributionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DeleteDistributionRequestFilterSensitiveLog = DeleteDistributionRequestFilterSensitiveLog;\nconst DeleteFieldLevelEncryptionConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DeleteFieldLevelEncryptionConfigRequestFilterSensitiveLog = DeleteFieldLevelEncryptionConfigRequestFilterSensitiveLog;\nconst DeleteFieldLevelEncryptionProfileRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DeleteFieldLevelEncryptionProfileRequestFilterSensitiveLog = DeleteFieldLevelEncryptionProfileRequestFilterSensitiveLog;\nconst DeleteFunctionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DeleteFunctionRequestFilterSensitiveLog = DeleteFunctionRequestFilterSensitiveLog;\nconst DeleteKeyGroupRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DeleteKeyGroupRequestFilterSensitiveLog = DeleteKeyGroupRequestFilterSensitiveLog;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetOriginRequestPolicyRequestFilterSensitiveLog = exports.GetMonitoringSubscriptionResultFilterSensitiveLog = exports.GetMonitoringSubscriptionRequestFilterSensitiveLog = exports.GetKeyGroupConfigResultFilterSensitiveLog = exports.GetKeyGroupConfigRequestFilterSensitiveLog = exports.GetKeyGroupResultFilterSensitiveLog = exports.GetKeyGroupRequestFilterSensitiveLog = exports.GetInvalidationResultFilterSensitiveLog = exports.GetInvalidationRequestFilterSensitiveLog = exports.GetFunctionResultFilterSensitiveLog = exports.GetFunctionRequestFilterSensitiveLog = exports.GetFieldLevelEncryptionProfileConfigResultFilterSensitiveLog = exports.GetFieldLevelEncryptionProfileConfigRequestFilterSensitiveLog = exports.GetFieldLevelEncryptionProfileResultFilterSensitiveLog = exports.GetFieldLevelEncryptionProfileRequestFilterSensitiveLog = exports.GetFieldLevelEncryptionConfigResultFilterSensitiveLog = exports.GetFieldLevelEncryptionConfigRequestFilterSensitiveLog = exports.GetFieldLevelEncryptionResultFilterSensitiveLog = exports.GetFieldLevelEncryptionRequestFilterSensitiveLog = exports.GetDistributionConfigResultFilterSensitiveLog = exports.GetDistributionConfigRequestFilterSensitiveLog = exports.GetDistributionResultFilterSensitiveLog = exports.GetDistributionRequestFilterSensitiveLog = exports.GetCloudFrontOriginAccessIdentityConfigResultFilterSensitiveLog = exports.GetCloudFrontOriginAccessIdentityConfigRequestFilterSensitiveLog = exports.GetCloudFrontOriginAccessIdentityResultFilterSensitiveLog = exports.GetCloudFrontOriginAccessIdentityRequestFilterSensitiveLog = exports.GetCachePolicyConfigResultFilterSensitiveLog = exports.GetCachePolicyConfigRequestFilterSensitiveLog = exports.GetCachePolicyResultFilterSensitiveLog = exports.GetCachePolicyRequestFilterSensitiveLog = exports.DescribeFunctionResultFilterSensitiveLog = exports.DescribeFunctionRequestFilterSensitiveLog = exports.DeleteStreamingDistributionRequestFilterSensitiveLog = exports.DeleteResponseHeadersPolicyRequestFilterSensitiveLog = exports.DeleteRealtimeLogConfigRequestFilterSensitiveLog = exports.DeletePublicKeyRequestFilterSensitiveLog = exports.DeleteOriginRequestPolicyRequestFilterSensitiveLog = exports.DeleteMonitoringSubscriptionResultFilterSensitiveLog = exports.DeleteMonitoringSubscriptionRequestFilterSensitiveLog = exports.TestFunctionFailed = exports.ResponseHeadersPolicyType = exports.NoSuchInvalidation = exports.StreamingDistributionNotDisabled = exports.NoSuchStreamingDistribution = exports.ResponseHeadersPolicyInUse = exports.RealtimeLogConfigInUse = exports.PublicKeyInUse = exports.OriginRequestPolicyInUse = exports.ResourceInUse = void 0;\nexports.FieldLevelEncryptionProfileSummaryFilterSensitiveLog = exports.ListFieldLevelEncryptionProfilesRequestFilterSensitiveLog = exports.ListFieldLevelEncryptionConfigsResultFilterSensitiveLog = exports.FieldLevelEncryptionListFilterSensitiveLog = exports.FieldLevelEncryptionSummaryFilterSensitiveLog = exports.ListFieldLevelEncryptionConfigsRequestFilterSensitiveLog = exports.ListDistributionsByWebACLIdResultFilterSensitiveLog = exports.ListDistributionsByWebACLIdRequestFilterSensitiveLog = exports.ListDistributionsByResponseHeadersPolicyIdResultFilterSensitiveLog = exports.ListDistributionsByResponseHeadersPolicyIdRequestFilterSensitiveLog = exports.ListDistributionsByRealtimeLogConfigResultFilterSensitiveLog = exports.ListDistributionsByRealtimeLogConfigRequestFilterSensitiveLog = exports.ListDistributionsByOriginRequestPolicyIdResultFilterSensitiveLog = exports.ListDistributionsByOriginRequestPolicyIdRequestFilterSensitiveLog = exports.ListDistributionsByKeyGroupResultFilterSensitiveLog = exports.ListDistributionsByKeyGroupRequestFilterSensitiveLog = exports.ListDistributionsByCachePolicyIdResultFilterSensitiveLog = exports.DistributionIdListFilterSensitiveLog = exports.ListDistributionsByCachePolicyIdRequestFilterSensitiveLog = exports.ListDistributionsResultFilterSensitiveLog = exports.DistributionListFilterSensitiveLog = exports.DistributionSummaryFilterSensitiveLog = exports.ListDistributionsRequestFilterSensitiveLog = exports.ListConflictingAliasesResultFilterSensitiveLog = exports.ConflictingAliasesListFilterSensitiveLog = exports.ConflictingAliasFilterSensitiveLog = exports.ListConflictingAliasesRequestFilterSensitiveLog = exports.ListCloudFrontOriginAccessIdentitiesResultFilterSensitiveLog = exports.CloudFrontOriginAccessIdentityListFilterSensitiveLog = exports.CloudFrontOriginAccessIdentitySummaryFilterSensitiveLog = exports.ListCloudFrontOriginAccessIdentitiesRequestFilterSensitiveLog = exports.ListCachePoliciesResultFilterSensitiveLog = exports.ListCachePoliciesRequestFilterSensitiveLog = exports.GetStreamingDistributionConfigResultFilterSensitiveLog = exports.GetStreamingDistributionConfigRequestFilterSensitiveLog = exports.GetStreamingDistributionResultFilterSensitiveLog = exports.GetStreamingDistributionRequestFilterSensitiveLog = exports.GetResponseHeadersPolicyConfigResultFilterSensitiveLog = exports.GetResponseHeadersPolicyConfigRequestFilterSensitiveLog = exports.GetResponseHeadersPolicyResultFilterSensitiveLog = exports.GetResponseHeadersPolicyRequestFilterSensitiveLog = exports.GetRealtimeLogConfigResultFilterSensitiveLog = exports.GetRealtimeLogConfigRequestFilterSensitiveLog = exports.GetPublicKeyConfigResultFilterSensitiveLog = exports.GetPublicKeyConfigRequestFilterSensitiveLog = exports.GetPublicKeyResultFilterSensitiveLog = exports.GetPublicKeyRequestFilterSensitiveLog = exports.GetOriginRequestPolicyConfigResultFilterSensitiveLog = exports.GetOriginRequestPolicyConfigRequestFilterSensitiveLog = exports.GetOriginRequestPolicyResultFilterSensitiveLog = void 0;\nexports.UpdateFieldLevelEncryptionConfigResultFilterSensitiveLog = exports.UpdateFieldLevelEncryptionConfigRequestFilterSensitiveLog = exports.UpdateDistributionResultFilterSensitiveLog = exports.UpdateDistributionRequestFilterSensitiveLog = exports.UpdateCloudFrontOriginAccessIdentityResultFilterSensitiveLog = exports.UpdateCloudFrontOriginAccessIdentityRequestFilterSensitiveLog = exports.UpdateCachePolicyResultFilterSensitiveLog = exports.UpdateCachePolicyRequestFilterSensitiveLog = exports.UntagResourceRequestFilterSensitiveLog = exports.TagKeysFilterSensitiveLog = exports.TestFunctionResultFilterSensitiveLog = exports.TestResultFilterSensitiveLog = exports.TestFunctionRequestFilterSensitiveLog = exports.TagResourceRequestFilterSensitiveLog = exports.PublishFunctionResultFilterSensitiveLog = exports.PublishFunctionRequestFilterSensitiveLog = exports.ListTagsForResourceResultFilterSensitiveLog = exports.ListTagsForResourceRequestFilterSensitiveLog = exports.ListStreamingDistributionsResultFilterSensitiveLog = exports.StreamingDistributionListFilterSensitiveLog = exports.StreamingDistributionSummaryFilterSensitiveLog = exports.ListStreamingDistributionsRequestFilterSensitiveLog = exports.ListResponseHeadersPoliciesResultFilterSensitiveLog = exports.ResponseHeadersPolicyListFilterSensitiveLog = exports.ResponseHeadersPolicySummaryFilterSensitiveLog = exports.ListResponseHeadersPoliciesRequestFilterSensitiveLog = exports.ListRealtimeLogConfigsResultFilterSensitiveLog = exports.RealtimeLogConfigsFilterSensitiveLog = exports.ListRealtimeLogConfigsRequestFilterSensitiveLog = exports.ListPublicKeysResultFilterSensitiveLog = exports.PublicKeyListFilterSensitiveLog = exports.PublicKeySummaryFilterSensitiveLog = exports.ListPublicKeysRequestFilterSensitiveLog = exports.ListOriginRequestPoliciesResultFilterSensitiveLog = exports.OriginRequestPolicyListFilterSensitiveLog = exports.OriginRequestPolicySummaryFilterSensitiveLog = exports.ListOriginRequestPoliciesRequestFilterSensitiveLog = exports.ListKeyGroupsResultFilterSensitiveLog = exports.KeyGroupListFilterSensitiveLog = exports.KeyGroupSummaryFilterSensitiveLog = exports.ListKeyGroupsRequestFilterSensitiveLog = exports.ListInvalidationsResultFilterSensitiveLog = exports.InvalidationListFilterSensitiveLog = exports.InvalidationSummaryFilterSensitiveLog = exports.ListInvalidationsRequestFilterSensitiveLog = exports.ListFunctionsResultFilterSensitiveLog = exports.FunctionListFilterSensitiveLog = exports.ListFunctionsRequestFilterSensitiveLog = exports.ListFieldLevelEncryptionProfilesResultFilterSensitiveLog = exports.FieldLevelEncryptionProfileListFilterSensitiveLog = void 0;\nexports.UpdateStreamingDistributionResultFilterSensitiveLog = exports.UpdateStreamingDistributionRequestFilterSensitiveLog = exports.UpdateResponseHeadersPolicyResultFilterSensitiveLog = exports.UpdateResponseHeadersPolicyRequestFilterSensitiveLog = exports.UpdateRealtimeLogConfigResultFilterSensitiveLog = exports.UpdateRealtimeLogConfigRequestFilterSensitiveLog = exports.UpdatePublicKeyResultFilterSensitiveLog = exports.UpdatePublicKeyRequestFilterSensitiveLog = exports.UpdateOriginRequestPolicyResultFilterSensitiveLog = exports.UpdateOriginRequestPolicyRequestFilterSensitiveLog = exports.UpdateKeyGroupResultFilterSensitiveLog = exports.UpdateKeyGroupRequestFilterSensitiveLog = exports.UpdateFunctionResultFilterSensitiveLog = exports.UpdateFunctionRequestFilterSensitiveLog = exports.UpdateFieldLevelEncryptionProfileResultFilterSensitiveLog = exports.UpdateFieldLevelEncryptionProfileRequestFilterSensitiveLog = void 0;\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst CloudFrontServiceException_1 = require(\"./CloudFrontServiceException\");\nconst models_0_1 = require(\"./models_0\");\nclass ResourceInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"ResourceInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.ResourceInUse = ResourceInUse;\nclass OriginRequestPolicyInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"OriginRequestPolicyInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OriginRequestPolicyInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OriginRequestPolicyInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.OriginRequestPolicyInUse = OriginRequestPolicyInUse;\nclass PublicKeyInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"PublicKeyInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PublicKeyInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PublicKeyInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.PublicKeyInUse = PublicKeyInUse;\nclass RealtimeLogConfigInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"RealtimeLogConfigInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RealtimeLogConfigInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RealtimeLogConfigInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.RealtimeLogConfigInUse = RealtimeLogConfigInUse;\nclass ResponseHeadersPolicyInUse extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"ResponseHeadersPolicyInUse\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResponseHeadersPolicyInUse\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResponseHeadersPolicyInUse.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.ResponseHeadersPolicyInUse = ResponseHeadersPolicyInUse;\nclass NoSuchStreamingDistribution extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchStreamingDistribution\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchStreamingDistribution\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchStreamingDistribution.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchStreamingDistribution = NoSuchStreamingDistribution;\nclass StreamingDistributionNotDisabled extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"StreamingDistributionNotDisabled\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"StreamingDistributionNotDisabled\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, StreamingDistributionNotDisabled.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.StreamingDistributionNotDisabled = StreamingDistributionNotDisabled;\nclass NoSuchInvalidation extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"NoSuchInvalidation\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NoSuchInvalidation\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NoSuchInvalidation.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NoSuchInvalidation = NoSuchInvalidation;\nvar ResponseHeadersPolicyType;\n(function (ResponseHeadersPolicyType) {\n    ResponseHeadersPolicyType[\"custom\"] = \"custom\";\n    ResponseHeadersPolicyType[\"managed\"] = \"managed\";\n})(ResponseHeadersPolicyType = exports.ResponseHeadersPolicyType || (exports.ResponseHeadersPolicyType = {}));\nclass TestFunctionFailed extends CloudFrontServiceException_1.CloudFrontServiceException {\n    constructor(opts) {\n        super({\n            name: \"TestFunctionFailed\",\n            $fault: \"server\",\n            ...opts,\n        });\n        this.name = \"TestFunctionFailed\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, TestFunctionFailed.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TestFunctionFailed = TestFunctionFailed;\nconst DeleteMonitoringSubscriptionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DeleteMonitoringSubscriptionRequestFilterSensitiveLog = DeleteMonitoringSubscriptionRequestFilterSensitiveLog;\nconst DeleteMonitoringSubscriptionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DeleteMonitoringSubscriptionResultFilterSensitiveLog = DeleteMonitoringSubscriptionResultFilterSensitiveLog;\nconst DeleteOriginRequestPolicyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DeleteOriginRequestPolicyRequestFilterSensitiveLog = DeleteOriginRequestPolicyRequestFilterSensitiveLog;\nconst DeletePublicKeyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DeletePublicKeyRequestFilterSensitiveLog = DeletePublicKeyRequestFilterSensitiveLog;\nconst DeleteRealtimeLogConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DeleteRealtimeLogConfigRequestFilterSensitiveLog = DeleteRealtimeLogConfigRequestFilterSensitiveLog;\nconst DeleteResponseHeadersPolicyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DeleteResponseHeadersPolicyRequestFilterSensitiveLog = DeleteResponseHeadersPolicyRequestFilterSensitiveLog;\nconst DeleteStreamingDistributionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DeleteStreamingDistributionRequestFilterSensitiveLog = DeleteStreamingDistributionRequestFilterSensitiveLog;\nconst DescribeFunctionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DescribeFunctionRequestFilterSensitiveLog = DescribeFunctionRequestFilterSensitiveLog;\nconst DescribeFunctionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DescribeFunctionResultFilterSensitiveLog = DescribeFunctionResultFilterSensitiveLog;\nconst GetCachePolicyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetCachePolicyRequestFilterSensitiveLog = GetCachePolicyRequestFilterSensitiveLog;\nconst GetCachePolicyResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetCachePolicyResultFilterSensitiveLog = GetCachePolicyResultFilterSensitiveLog;\nconst GetCachePolicyConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetCachePolicyConfigRequestFilterSensitiveLog = GetCachePolicyConfigRequestFilterSensitiveLog;\nconst GetCachePolicyConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetCachePolicyConfigResultFilterSensitiveLog = GetCachePolicyConfigResultFilterSensitiveLog;\nconst GetCloudFrontOriginAccessIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetCloudFrontOriginAccessIdentityRequestFilterSensitiveLog = GetCloudFrontOriginAccessIdentityRequestFilterSensitiveLog;\nconst GetCloudFrontOriginAccessIdentityResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetCloudFrontOriginAccessIdentityResultFilterSensitiveLog = GetCloudFrontOriginAccessIdentityResultFilterSensitiveLog;\nconst GetCloudFrontOriginAccessIdentityConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetCloudFrontOriginAccessIdentityConfigRequestFilterSensitiveLog = GetCloudFrontOriginAccessIdentityConfigRequestFilterSensitiveLog;\nconst GetCloudFrontOriginAccessIdentityConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetCloudFrontOriginAccessIdentityConfigResultFilterSensitiveLog = GetCloudFrontOriginAccessIdentityConfigResultFilterSensitiveLog;\nconst GetDistributionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetDistributionRequestFilterSensitiveLog = GetDistributionRequestFilterSensitiveLog;\nconst GetDistributionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Distribution && { Distribution: (0, models_0_1.DistributionFilterSensitiveLog)(obj.Distribution) }),\n});\nexports.GetDistributionResultFilterSensitiveLog = GetDistributionResultFilterSensitiveLog;\nconst GetDistributionConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetDistributionConfigRequestFilterSensitiveLog = GetDistributionConfigRequestFilterSensitiveLog;\nconst GetDistributionConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.DistributionConfig && { DistributionConfig: (0, models_0_1.DistributionConfigFilterSensitiveLog)(obj.DistributionConfig) }),\n});\nexports.GetDistributionConfigResultFilterSensitiveLog = GetDistributionConfigResultFilterSensitiveLog;\nconst GetFieldLevelEncryptionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetFieldLevelEncryptionRequestFilterSensitiveLog = GetFieldLevelEncryptionRequestFilterSensitiveLog;\nconst GetFieldLevelEncryptionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetFieldLevelEncryptionResultFilterSensitiveLog = GetFieldLevelEncryptionResultFilterSensitiveLog;\nconst GetFieldLevelEncryptionConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetFieldLevelEncryptionConfigRequestFilterSensitiveLog = GetFieldLevelEncryptionConfigRequestFilterSensitiveLog;\nconst GetFieldLevelEncryptionConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetFieldLevelEncryptionConfigResultFilterSensitiveLog = GetFieldLevelEncryptionConfigResultFilterSensitiveLog;\nconst GetFieldLevelEncryptionProfileRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetFieldLevelEncryptionProfileRequestFilterSensitiveLog = GetFieldLevelEncryptionProfileRequestFilterSensitiveLog;\nconst GetFieldLevelEncryptionProfileResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetFieldLevelEncryptionProfileResultFilterSensitiveLog = GetFieldLevelEncryptionProfileResultFilterSensitiveLog;\nconst GetFieldLevelEncryptionProfileConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetFieldLevelEncryptionProfileConfigRequestFilterSensitiveLog = GetFieldLevelEncryptionProfileConfigRequestFilterSensitiveLog;\nconst GetFieldLevelEncryptionProfileConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetFieldLevelEncryptionProfileConfigResultFilterSensitiveLog = GetFieldLevelEncryptionProfileConfigResultFilterSensitiveLog;\nconst GetFunctionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetFunctionRequestFilterSensitiveLog = GetFunctionRequestFilterSensitiveLog;\nconst GetFunctionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.FunctionCode && { FunctionCode: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.GetFunctionResultFilterSensitiveLog = GetFunctionResultFilterSensitiveLog;\nconst GetInvalidationRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetInvalidationRequestFilterSensitiveLog = GetInvalidationRequestFilterSensitiveLog;\nconst GetInvalidationResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetInvalidationResultFilterSensitiveLog = GetInvalidationResultFilterSensitiveLog;\nconst GetKeyGroupRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetKeyGroupRequestFilterSensitiveLog = GetKeyGroupRequestFilterSensitiveLog;\nconst GetKeyGroupResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetKeyGroupResultFilterSensitiveLog = GetKeyGroupResultFilterSensitiveLog;\nconst GetKeyGroupConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetKeyGroupConfigRequestFilterSensitiveLog = GetKeyGroupConfigRequestFilterSensitiveLog;\nconst GetKeyGroupConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetKeyGroupConfigResultFilterSensitiveLog = GetKeyGroupConfigResultFilterSensitiveLog;\nconst GetMonitoringSubscriptionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetMonitoringSubscriptionRequestFilterSensitiveLog = GetMonitoringSubscriptionRequestFilterSensitiveLog;\nconst GetMonitoringSubscriptionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetMonitoringSubscriptionResultFilterSensitiveLog = GetMonitoringSubscriptionResultFilterSensitiveLog;\nconst GetOriginRequestPolicyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetOriginRequestPolicyRequestFilterSensitiveLog = GetOriginRequestPolicyRequestFilterSensitiveLog;\nconst GetOriginRequestPolicyResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetOriginRequestPolicyResultFilterSensitiveLog = GetOriginRequestPolicyResultFilterSensitiveLog;\nconst GetOriginRequestPolicyConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetOriginRequestPolicyConfigRequestFilterSensitiveLog = GetOriginRequestPolicyConfigRequestFilterSensitiveLog;\nconst GetOriginRequestPolicyConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetOriginRequestPolicyConfigResultFilterSensitiveLog = GetOriginRequestPolicyConfigResultFilterSensitiveLog;\nconst GetPublicKeyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetPublicKeyRequestFilterSensitiveLog = GetPublicKeyRequestFilterSensitiveLog;\nconst GetPublicKeyResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetPublicKeyResultFilterSensitiveLog = GetPublicKeyResultFilterSensitiveLog;\nconst GetPublicKeyConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetPublicKeyConfigRequestFilterSensitiveLog = GetPublicKeyConfigRequestFilterSensitiveLog;\nconst GetPublicKeyConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetPublicKeyConfigResultFilterSensitiveLog = GetPublicKeyConfigResultFilterSensitiveLog;\nconst GetRealtimeLogConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetRealtimeLogConfigRequestFilterSensitiveLog = GetRealtimeLogConfigRequestFilterSensitiveLog;\nconst GetRealtimeLogConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetRealtimeLogConfigResultFilterSensitiveLog = GetRealtimeLogConfigResultFilterSensitiveLog;\nconst GetResponseHeadersPolicyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetResponseHeadersPolicyRequestFilterSensitiveLog = GetResponseHeadersPolicyRequestFilterSensitiveLog;\nconst GetResponseHeadersPolicyResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetResponseHeadersPolicyResultFilterSensitiveLog = GetResponseHeadersPolicyResultFilterSensitiveLog;\nconst GetResponseHeadersPolicyConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetResponseHeadersPolicyConfigRequestFilterSensitiveLog = GetResponseHeadersPolicyConfigRequestFilterSensitiveLog;\nconst GetResponseHeadersPolicyConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetResponseHeadersPolicyConfigResultFilterSensitiveLog = GetResponseHeadersPolicyConfigResultFilterSensitiveLog;\nconst GetStreamingDistributionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetStreamingDistributionRequestFilterSensitiveLog = GetStreamingDistributionRequestFilterSensitiveLog;\nconst GetStreamingDistributionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetStreamingDistributionResultFilterSensitiveLog = GetStreamingDistributionResultFilterSensitiveLog;\nconst GetStreamingDistributionConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetStreamingDistributionConfigRequestFilterSensitiveLog = GetStreamingDistributionConfigRequestFilterSensitiveLog;\nconst GetStreamingDistributionConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetStreamingDistributionConfigResultFilterSensitiveLog = GetStreamingDistributionConfigResultFilterSensitiveLog;\nconst ListCachePoliciesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListCachePoliciesRequestFilterSensitiveLog = ListCachePoliciesRequestFilterSensitiveLog;\nconst ListCachePoliciesResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListCachePoliciesResultFilterSensitiveLog = ListCachePoliciesResultFilterSensitiveLog;\nconst ListCloudFrontOriginAccessIdentitiesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListCloudFrontOriginAccessIdentitiesRequestFilterSensitiveLog = ListCloudFrontOriginAccessIdentitiesRequestFilterSensitiveLog;\nconst CloudFrontOriginAccessIdentitySummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CloudFrontOriginAccessIdentitySummaryFilterSensitiveLog = CloudFrontOriginAccessIdentitySummaryFilterSensitiveLog;\nconst CloudFrontOriginAccessIdentityListFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CloudFrontOriginAccessIdentityListFilterSensitiveLog = CloudFrontOriginAccessIdentityListFilterSensitiveLog;\nconst ListCloudFrontOriginAccessIdentitiesResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListCloudFrontOriginAccessIdentitiesResultFilterSensitiveLog = ListCloudFrontOriginAccessIdentitiesResultFilterSensitiveLog;\nconst ListConflictingAliasesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListConflictingAliasesRequestFilterSensitiveLog = ListConflictingAliasesRequestFilterSensitiveLog;\nconst ConflictingAliasFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ConflictingAliasFilterSensitiveLog = ConflictingAliasFilterSensitiveLog;\nconst ConflictingAliasesListFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ConflictingAliasesListFilterSensitiveLog = ConflictingAliasesListFilterSensitiveLog;\nconst ListConflictingAliasesResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListConflictingAliasesResultFilterSensitiveLog = ListConflictingAliasesResultFilterSensitiveLog;\nconst ListDistributionsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsRequestFilterSensitiveLog = ListDistributionsRequestFilterSensitiveLog;\nconst DistributionSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DistributionSummaryFilterSensitiveLog = DistributionSummaryFilterSensitiveLog;\nconst DistributionListFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DistributionListFilterSensitiveLog = DistributionListFilterSensitiveLog;\nconst ListDistributionsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsResultFilterSensitiveLog = ListDistributionsResultFilterSensitiveLog;\nconst ListDistributionsByCachePolicyIdRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsByCachePolicyIdRequestFilterSensitiveLog = ListDistributionsByCachePolicyIdRequestFilterSensitiveLog;\nconst DistributionIdListFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DistributionIdListFilterSensitiveLog = DistributionIdListFilterSensitiveLog;\nconst ListDistributionsByCachePolicyIdResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsByCachePolicyIdResultFilterSensitiveLog = ListDistributionsByCachePolicyIdResultFilterSensitiveLog;\nconst ListDistributionsByKeyGroupRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsByKeyGroupRequestFilterSensitiveLog = ListDistributionsByKeyGroupRequestFilterSensitiveLog;\nconst ListDistributionsByKeyGroupResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsByKeyGroupResultFilterSensitiveLog = ListDistributionsByKeyGroupResultFilterSensitiveLog;\nconst ListDistributionsByOriginRequestPolicyIdRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsByOriginRequestPolicyIdRequestFilterSensitiveLog = ListDistributionsByOriginRequestPolicyIdRequestFilterSensitiveLog;\nconst ListDistributionsByOriginRequestPolicyIdResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsByOriginRequestPolicyIdResultFilterSensitiveLog = ListDistributionsByOriginRequestPolicyIdResultFilterSensitiveLog;\nconst ListDistributionsByRealtimeLogConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsByRealtimeLogConfigRequestFilterSensitiveLog = ListDistributionsByRealtimeLogConfigRequestFilterSensitiveLog;\nconst ListDistributionsByRealtimeLogConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsByRealtimeLogConfigResultFilterSensitiveLog = ListDistributionsByRealtimeLogConfigResultFilterSensitiveLog;\nconst ListDistributionsByResponseHeadersPolicyIdRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsByResponseHeadersPolicyIdRequestFilterSensitiveLog = ListDistributionsByResponseHeadersPolicyIdRequestFilterSensitiveLog;\nconst ListDistributionsByResponseHeadersPolicyIdResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsByResponseHeadersPolicyIdResultFilterSensitiveLog = ListDistributionsByResponseHeadersPolicyIdResultFilterSensitiveLog;\nconst ListDistributionsByWebACLIdRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsByWebACLIdRequestFilterSensitiveLog = ListDistributionsByWebACLIdRequestFilterSensitiveLog;\nconst ListDistributionsByWebACLIdResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListDistributionsByWebACLIdResultFilterSensitiveLog = ListDistributionsByWebACLIdResultFilterSensitiveLog;\nconst ListFieldLevelEncryptionConfigsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListFieldLevelEncryptionConfigsRequestFilterSensitiveLog = ListFieldLevelEncryptionConfigsRequestFilterSensitiveLog;\nconst FieldLevelEncryptionSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FieldLevelEncryptionSummaryFilterSensitiveLog = FieldLevelEncryptionSummaryFilterSensitiveLog;\nconst FieldLevelEncryptionListFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FieldLevelEncryptionListFilterSensitiveLog = FieldLevelEncryptionListFilterSensitiveLog;\nconst ListFieldLevelEncryptionConfigsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListFieldLevelEncryptionConfigsResultFilterSensitiveLog = ListFieldLevelEncryptionConfigsResultFilterSensitiveLog;\nconst ListFieldLevelEncryptionProfilesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListFieldLevelEncryptionProfilesRequestFilterSensitiveLog = ListFieldLevelEncryptionProfilesRequestFilterSensitiveLog;\nconst FieldLevelEncryptionProfileSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FieldLevelEncryptionProfileSummaryFilterSensitiveLog = FieldLevelEncryptionProfileSummaryFilterSensitiveLog;\nconst FieldLevelEncryptionProfileListFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FieldLevelEncryptionProfileListFilterSensitiveLog = FieldLevelEncryptionProfileListFilterSensitiveLog;\nconst ListFieldLevelEncryptionProfilesResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListFieldLevelEncryptionProfilesResultFilterSensitiveLog = ListFieldLevelEncryptionProfilesResultFilterSensitiveLog;\nconst ListFunctionsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListFunctionsRequestFilterSensitiveLog = ListFunctionsRequestFilterSensitiveLog;\nconst FunctionListFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FunctionListFilterSensitiveLog = FunctionListFilterSensitiveLog;\nconst ListFunctionsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListFunctionsResultFilterSensitiveLog = ListFunctionsResultFilterSensitiveLog;\nconst ListInvalidationsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListInvalidationsRequestFilterSensitiveLog = ListInvalidationsRequestFilterSensitiveLog;\nconst InvalidationSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.InvalidationSummaryFilterSensitiveLog = InvalidationSummaryFilterSensitiveLog;\nconst InvalidationListFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.InvalidationListFilterSensitiveLog = InvalidationListFilterSensitiveLog;\nconst ListInvalidationsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListInvalidationsResultFilterSensitiveLog = ListInvalidationsResultFilterSensitiveLog;\nconst ListKeyGroupsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListKeyGroupsRequestFilterSensitiveLog = ListKeyGroupsRequestFilterSensitiveLog;\nconst KeyGroupSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.KeyGroupSummaryFilterSensitiveLog = KeyGroupSummaryFilterSensitiveLog;\nconst KeyGroupListFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.KeyGroupListFilterSensitiveLog = KeyGroupListFilterSensitiveLog;\nconst ListKeyGroupsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListKeyGroupsResultFilterSensitiveLog = ListKeyGroupsResultFilterSensitiveLog;\nconst ListOriginRequestPoliciesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListOriginRequestPoliciesRequestFilterSensitiveLog = ListOriginRequestPoliciesRequestFilterSensitiveLog;\nconst OriginRequestPolicySummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginRequestPolicySummaryFilterSensitiveLog = OriginRequestPolicySummaryFilterSensitiveLog;\nconst OriginRequestPolicyListFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.OriginRequestPolicyListFilterSensitiveLog = OriginRequestPolicyListFilterSensitiveLog;\nconst ListOriginRequestPoliciesResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListOriginRequestPoliciesResultFilterSensitiveLog = ListOriginRequestPoliciesResultFilterSensitiveLog;\nconst ListPublicKeysRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListPublicKeysRequestFilterSensitiveLog = ListPublicKeysRequestFilterSensitiveLog;\nconst PublicKeySummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.PublicKeySummaryFilterSensitiveLog = PublicKeySummaryFilterSensitiveLog;\nconst PublicKeyListFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.PublicKeyListFilterSensitiveLog = PublicKeyListFilterSensitiveLog;\nconst ListPublicKeysResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListPublicKeysResultFilterSensitiveLog = ListPublicKeysResultFilterSensitiveLog;\nconst ListRealtimeLogConfigsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListRealtimeLogConfigsRequestFilterSensitiveLog = ListRealtimeLogConfigsRequestFilterSensitiveLog;\nconst RealtimeLogConfigsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.RealtimeLogConfigsFilterSensitiveLog = RealtimeLogConfigsFilterSensitiveLog;\nconst ListRealtimeLogConfigsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListRealtimeLogConfigsResultFilterSensitiveLog = ListRealtimeLogConfigsResultFilterSensitiveLog;\nconst ListResponseHeadersPoliciesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListResponseHeadersPoliciesRequestFilterSensitiveLog = ListResponseHeadersPoliciesRequestFilterSensitiveLog;\nconst ResponseHeadersPolicySummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicySummaryFilterSensitiveLog = ResponseHeadersPolicySummaryFilterSensitiveLog;\nconst ResponseHeadersPolicyListFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ResponseHeadersPolicyListFilterSensitiveLog = ResponseHeadersPolicyListFilterSensitiveLog;\nconst ListResponseHeadersPoliciesResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListResponseHeadersPoliciesResultFilterSensitiveLog = ListResponseHeadersPoliciesResultFilterSensitiveLog;\nconst ListStreamingDistributionsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListStreamingDistributionsRequestFilterSensitiveLog = ListStreamingDistributionsRequestFilterSensitiveLog;\nconst StreamingDistributionSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.StreamingDistributionSummaryFilterSensitiveLog = StreamingDistributionSummaryFilterSensitiveLog;\nconst StreamingDistributionListFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.StreamingDistributionListFilterSensitiveLog = StreamingDistributionListFilterSensitiveLog;\nconst ListStreamingDistributionsResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListStreamingDistributionsResultFilterSensitiveLog = ListStreamingDistributionsResultFilterSensitiveLog;\nconst ListTagsForResourceRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListTagsForResourceRequestFilterSensitiveLog = ListTagsForResourceRequestFilterSensitiveLog;\nconst ListTagsForResourceResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListTagsForResourceResultFilterSensitiveLog = ListTagsForResourceResultFilterSensitiveLog;\nconst PublishFunctionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.PublishFunctionRequestFilterSensitiveLog = PublishFunctionRequestFilterSensitiveLog;\nconst PublishFunctionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.PublishFunctionResultFilterSensitiveLog = PublishFunctionResultFilterSensitiveLog;\nconst TagResourceRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.TagResourceRequestFilterSensitiveLog = TagResourceRequestFilterSensitiveLog;\nconst TestFunctionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.EventObject && { EventObject: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.TestFunctionRequestFilterSensitiveLog = TestFunctionRequestFilterSensitiveLog;\nconst TestResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.FunctionExecutionLogs && { FunctionExecutionLogs: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.FunctionErrorMessage && { FunctionErrorMessage: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.FunctionOutput && { FunctionOutput: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.TestResultFilterSensitiveLog = TestResultFilterSensitiveLog;\nconst TestFunctionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.TestResult && { TestResult: (0, exports.TestResultFilterSensitiveLog)(obj.TestResult) }),\n});\nexports.TestFunctionResultFilterSensitiveLog = TestFunctionResultFilterSensitiveLog;\nconst TagKeysFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.TagKeysFilterSensitiveLog = TagKeysFilterSensitiveLog;\nconst UntagResourceRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UntagResourceRequestFilterSensitiveLog = UntagResourceRequestFilterSensitiveLog;\nconst UpdateCachePolicyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateCachePolicyRequestFilterSensitiveLog = UpdateCachePolicyRequestFilterSensitiveLog;\nconst UpdateCachePolicyResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateCachePolicyResultFilterSensitiveLog = UpdateCachePolicyResultFilterSensitiveLog;\nconst UpdateCloudFrontOriginAccessIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateCloudFrontOriginAccessIdentityRequestFilterSensitiveLog = UpdateCloudFrontOriginAccessIdentityRequestFilterSensitiveLog;\nconst UpdateCloudFrontOriginAccessIdentityResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateCloudFrontOriginAccessIdentityResultFilterSensitiveLog = UpdateCloudFrontOriginAccessIdentityResultFilterSensitiveLog;\nconst UpdateDistributionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.DistributionConfig && { DistributionConfig: (0, models_0_1.DistributionConfigFilterSensitiveLog)(obj.DistributionConfig) }),\n});\nexports.UpdateDistributionRequestFilterSensitiveLog = UpdateDistributionRequestFilterSensitiveLog;\nconst UpdateDistributionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Distribution && { Distribution: (0, models_0_1.DistributionFilterSensitiveLog)(obj.Distribution) }),\n});\nexports.UpdateDistributionResultFilterSensitiveLog = UpdateDistributionResultFilterSensitiveLog;\nconst UpdateFieldLevelEncryptionConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateFieldLevelEncryptionConfigRequestFilterSensitiveLog = UpdateFieldLevelEncryptionConfigRequestFilterSensitiveLog;\nconst UpdateFieldLevelEncryptionConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateFieldLevelEncryptionConfigResultFilterSensitiveLog = UpdateFieldLevelEncryptionConfigResultFilterSensitiveLog;\nconst UpdateFieldLevelEncryptionProfileRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateFieldLevelEncryptionProfileRequestFilterSensitiveLog = UpdateFieldLevelEncryptionProfileRequestFilterSensitiveLog;\nconst UpdateFieldLevelEncryptionProfileResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateFieldLevelEncryptionProfileResultFilterSensitiveLog = UpdateFieldLevelEncryptionProfileResultFilterSensitiveLog;\nconst UpdateFunctionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.FunctionCode && { FunctionCode: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.UpdateFunctionRequestFilterSensitiveLog = UpdateFunctionRequestFilterSensitiveLog;\nconst UpdateFunctionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateFunctionResultFilterSensitiveLog = UpdateFunctionResultFilterSensitiveLog;\nconst UpdateKeyGroupRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateKeyGroupRequestFilterSensitiveLog = UpdateKeyGroupRequestFilterSensitiveLog;\nconst UpdateKeyGroupResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateKeyGroupResultFilterSensitiveLog = UpdateKeyGroupResultFilterSensitiveLog;\nconst UpdateOriginRequestPolicyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateOriginRequestPolicyRequestFilterSensitiveLog = UpdateOriginRequestPolicyRequestFilterSensitiveLog;\nconst UpdateOriginRequestPolicyResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateOriginRequestPolicyResultFilterSensitiveLog = UpdateOriginRequestPolicyResultFilterSensitiveLog;\nconst UpdatePublicKeyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdatePublicKeyRequestFilterSensitiveLog = UpdatePublicKeyRequestFilterSensitiveLog;\nconst UpdatePublicKeyResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdatePublicKeyResultFilterSensitiveLog = UpdatePublicKeyResultFilterSensitiveLog;\nconst UpdateRealtimeLogConfigRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateRealtimeLogConfigRequestFilterSensitiveLog = UpdateRealtimeLogConfigRequestFilterSensitiveLog;\nconst UpdateRealtimeLogConfigResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateRealtimeLogConfigResultFilterSensitiveLog = UpdateRealtimeLogConfigResultFilterSensitiveLog;\nconst UpdateResponseHeadersPolicyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateResponseHeadersPolicyRequestFilterSensitiveLog = UpdateResponseHeadersPolicyRequestFilterSensitiveLog;\nconst UpdateResponseHeadersPolicyResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateResponseHeadersPolicyResultFilterSensitiveLog = UpdateResponseHeadersPolicyResultFilterSensitiveLog;\nconst UpdateStreamingDistributionRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateStreamingDistributionRequestFilterSensitiveLog = UpdateStreamingDistributionRequestFilterSensitiveLog;\nconst UpdateStreamingDistributionResultFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.UpdateStreamingDistributionResultFilterSensitiveLog = UpdateStreamingDistributionResultFilterSensitiveLog;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListCloudFrontOriginAccessIdentities = void 0;\nconst CloudFront_1 = require(\"../CloudFront\");\nconst CloudFrontClient_1 = require(\"../CloudFrontClient\");\nconst ListCloudFrontOriginAccessIdentitiesCommand_1 = require(\"../commands/ListCloudFrontOriginAccessIdentitiesCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListCloudFrontOriginAccessIdentitiesCommand_1.ListCloudFrontOriginAccessIdentitiesCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listCloudFrontOriginAccessIdentities(input, ...args);\n};\nasync function* paginateListCloudFrontOriginAccessIdentities(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof CloudFront_1.CloudFront) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFrontClient_1.CloudFrontClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFront | CloudFrontClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.CloudFrontOriginAccessIdentityList.NextMarker;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\nexports.paginateListCloudFrontOriginAccessIdentities = paginateListCloudFrontOriginAccessIdentities;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListDistributions = void 0;\nconst CloudFront_1 = require(\"../CloudFront\");\nconst CloudFrontClient_1 = require(\"../CloudFrontClient\");\nconst ListDistributionsCommand_1 = require(\"../commands/ListDistributionsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListDistributionsCommand_1.ListDistributionsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listDistributions(input, ...args);\n};\nasync function* paginateListDistributions(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof CloudFront_1.CloudFront) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFrontClient_1.CloudFrontClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFront | CloudFrontClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.DistributionList.NextMarker;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\nexports.paginateListDistributions = paginateListDistributions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListInvalidations = void 0;\nconst CloudFront_1 = require(\"../CloudFront\");\nconst CloudFrontClient_1 = require(\"../CloudFrontClient\");\nconst ListInvalidationsCommand_1 = require(\"../commands/ListInvalidationsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListInvalidationsCommand_1.ListInvalidationsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listInvalidations(input, ...args);\n};\nasync function* paginateListInvalidations(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof CloudFront_1.CloudFront) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFrontClient_1.CloudFrontClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFront | CloudFrontClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.InvalidationList.NextMarker;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\nexports.paginateListInvalidations = paginateListInvalidations;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListStreamingDistributions = void 0;\nconst CloudFront_1 = require(\"../CloudFront\");\nconst CloudFrontClient_1 = require(\"../CloudFrontClient\");\nconst ListStreamingDistributionsCommand_1 = require(\"../commands/ListStreamingDistributionsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListStreamingDistributionsCommand_1.ListStreamingDistributionsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listStreamingDistributions(input, ...args);\n};\nasync function* paginateListStreamingDistributions(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof CloudFront_1.CloudFront) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFrontClient_1.CloudFrontClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFront | CloudFrontClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.StreamingDistributionList.NextMarker;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\nexports.paginateListStreamingDistributions = paginateListStreamingDistributions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./Interfaces\"), exports);\ntslib_1.__exportStar(require(\"./ListCloudFrontOriginAccessIdentitiesPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListDistributionsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListInvalidationsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListStreamingDistributionsPaginator\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeAws_restXmlGetPublicKeyConfigCommand = exports.serializeAws_restXmlGetPublicKeyCommand = exports.serializeAws_restXmlGetOriginRequestPolicyConfigCommand = exports.serializeAws_restXmlGetOriginRequestPolicyCommand = exports.serializeAws_restXmlGetMonitoringSubscriptionCommand = exports.serializeAws_restXmlGetKeyGroupConfigCommand = exports.serializeAws_restXmlGetKeyGroupCommand = exports.serializeAws_restXmlGetInvalidationCommand = exports.serializeAws_restXmlGetFunctionCommand = exports.serializeAws_restXmlGetFieldLevelEncryptionProfileConfigCommand = exports.serializeAws_restXmlGetFieldLevelEncryptionProfileCommand = exports.serializeAws_restXmlGetFieldLevelEncryptionConfigCommand = exports.serializeAws_restXmlGetFieldLevelEncryptionCommand = exports.serializeAws_restXmlGetDistributionConfigCommand = exports.serializeAws_restXmlGetDistributionCommand = exports.serializeAws_restXmlGetCloudFrontOriginAccessIdentityConfigCommand = exports.serializeAws_restXmlGetCloudFrontOriginAccessIdentityCommand = exports.serializeAws_restXmlGetCachePolicyConfigCommand = exports.serializeAws_restXmlGetCachePolicyCommand = exports.serializeAws_restXmlDescribeFunctionCommand = exports.serializeAws_restXmlDeleteStreamingDistributionCommand = exports.serializeAws_restXmlDeleteResponseHeadersPolicyCommand = exports.serializeAws_restXmlDeleteRealtimeLogConfigCommand = exports.serializeAws_restXmlDeletePublicKeyCommand = exports.serializeAws_restXmlDeleteOriginRequestPolicyCommand = exports.serializeAws_restXmlDeleteMonitoringSubscriptionCommand = exports.serializeAws_restXmlDeleteKeyGroupCommand = exports.serializeAws_restXmlDeleteFunctionCommand = exports.serializeAws_restXmlDeleteFieldLevelEncryptionProfileCommand = exports.serializeAws_restXmlDeleteFieldLevelEncryptionConfigCommand = exports.serializeAws_restXmlDeleteDistributionCommand = exports.serializeAws_restXmlDeleteCloudFrontOriginAccessIdentityCommand = exports.serializeAws_restXmlDeleteCachePolicyCommand = exports.serializeAws_restXmlCreateStreamingDistributionWithTagsCommand = exports.serializeAws_restXmlCreateStreamingDistributionCommand = exports.serializeAws_restXmlCreateResponseHeadersPolicyCommand = exports.serializeAws_restXmlCreateRealtimeLogConfigCommand = exports.serializeAws_restXmlCreatePublicKeyCommand = exports.serializeAws_restXmlCreateOriginRequestPolicyCommand = exports.serializeAws_restXmlCreateMonitoringSubscriptionCommand = exports.serializeAws_restXmlCreateKeyGroupCommand = exports.serializeAws_restXmlCreateInvalidationCommand = exports.serializeAws_restXmlCreateFunctionCommand = exports.serializeAws_restXmlCreateFieldLevelEncryptionProfileCommand = exports.serializeAws_restXmlCreateFieldLevelEncryptionConfigCommand = exports.serializeAws_restXmlCreateDistributionWithTagsCommand = exports.serializeAws_restXmlCreateDistributionCommand = exports.serializeAws_restXmlCreateCloudFrontOriginAccessIdentityCommand = exports.serializeAws_restXmlCreateCachePolicyCommand = exports.serializeAws_restXmlAssociateAliasCommand = void 0;\nexports.deserializeAws_restXmlCreateFunctionCommand = exports.deserializeAws_restXmlCreateFieldLevelEncryptionProfileCommand = exports.deserializeAws_restXmlCreateFieldLevelEncryptionConfigCommand = exports.deserializeAws_restXmlCreateDistributionWithTagsCommand = exports.deserializeAws_restXmlCreateDistributionCommand = exports.deserializeAws_restXmlCreateCloudFrontOriginAccessIdentityCommand = exports.deserializeAws_restXmlCreateCachePolicyCommand = exports.deserializeAws_restXmlAssociateAliasCommand = exports.serializeAws_restXmlUpdateStreamingDistributionCommand = exports.serializeAws_restXmlUpdateResponseHeadersPolicyCommand = exports.serializeAws_restXmlUpdateRealtimeLogConfigCommand = exports.serializeAws_restXmlUpdatePublicKeyCommand = exports.serializeAws_restXmlUpdateOriginRequestPolicyCommand = exports.serializeAws_restXmlUpdateKeyGroupCommand = exports.serializeAws_restXmlUpdateFunctionCommand = exports.serializeAws_restXmlUpdateFieldLevelEncryptionProfileCommand = exports.serializeAws_restXmlUpdateFieldLevelEncryptionConfigCommand = exports.serializeAws_restXmlUpdateDistributionCommand = exports.serializeAws_restXmlUpdateCloudFrontOriginAccessIdentityCommand = exports.serializeAws_restXmlUpdateCachePolicyCommand = exports.serializeAws_restXmlUntagResourceCommand = exports.serializeAws_restXmlTestFunctionCommand = exports.serializeAws_restXmlTagResourceCommand = exports.serializeAws_restXmlPublishFunctionCommand = exports.serializeAws_restXmlListTagsForResourceCommand = exports.serializeAws_restXmlListStreamingDistributionsCommand = exports.serializeAws_restXmlListResponseHeadersPoliciesCommand = exports.serializeAws_restXmlListRealtimeLogConfigsCommand = exports.serializeAws_restXmlListPublicKeysCommand = exports.serializeAws_restXmlListOriginRequestPoliciesCommand = exports.serializeAws_restXmlListKeyGroupsCommand = exports.serializeAws_restXmlListInvalidationsCommand = exports.serializeAws_restXmlListFunctionsCommand = exports.serializeAws_restXmlListFieldLevelEncryptionProfilesCommand = exports.serializeAws_restXmlListFieldLevelEncryptionConfigsCommand = exports.serializeAws_restXmlListDistributionsByWebACLIdCommand = exports.serializeAws_restXmlListDistributionsByResponseHeadersPolicyIdCommand = exports.serializeAws_restXmlListDistributionsByRealtimeLogConfigCommand = exports.serializeAws_restXmlListDistributionsByOriginRequestPolicyIdCommand = exports.serializeAws_restXmlListDistributionsByKeyGroupCommand = exports.serializeAws_restXmlListDistributionsByCachePolicyIdCommand = exports.serializeAws_restXmlListDistributionsCommand = exports.serializeAws_restXmlListConflictingAliasesCommand = exports.serializeAws_restXmlListCloudFrontOriginAccessIdentitiesCommand = exports.serializeAws_restXmlListCachePoliciesCommand = exports.serializeAws_restXmlGetStreamingDistributionConfigCommand = exports.serializeAws_restXmlGetStreamingDistributionCommand = exports.serializeAws_restXmlGetResponseHeadersPolicyConfigCommand = exports.serializeAws_restXmlGetResponseHeadersPolicyCommand = exports.serializeAws_restXmlGetRealtimeLogConfigCommand = void 0;\nexports.deserializeAws_restXmlListConflictingAliasesCommand = exports.deserializeAws_restXmlListCloudFrontOriginAccessIdentitiesCommand = exports.deserializeAws_restXmlListCachePoliciesCommand = exports.deserializeAws_restXmlGetStreamingDistributionConfigCommand = exports.deserializeAws_restXmlGetStreamingDistributionCommand = exports.deserializeAws_restXmlGetResponseHeadersPolicyConfigCommand = exports.deserializeAws_restXmlGetResponseHeadersPolicyCommand = exports.deserializeAws_restXmlGetRealtimeLogConfigCommand = exports.deserializeAws_restXmlGetPublicKeyConfigCommand = exports.deserializeAws_restXmlGetPublicKeyCommand = exports.deserializeAws_restXmlGetOriginRequestPolicyConfigCommand = exports.deserializeAws_restXmlGetOriginRequestPolicyCommand = exports.deserializeAws_restXmlGetMonitoringSubscriptionCommand = exports.deserializeAws_restXmlGetKeyGroupConfigCommand = exports.deserializeAws_restXmlGetKeyGroupCommand = exports.deserializeAws_restXmlGetInvalidationCommand = exports.deserializeAws_restXmlGetFunctionCommand = exports.deserializeAws_restXmlGetFieldLevelEncryptionProfileConfigCommand = exports.deserializeAws_restXmlGetFieldLevelEncryptionProfileCommand = exports.deserializeAws_restXmlGetFieldLevelEncryptionConfigCommand = exports.deserializeAws_restXmlGetFieldLevelEncryptionCommand = exports.deserializeAws_restXmlGetDistributionConfigCommand = exports.deserializeAws_restXmlGetDistributionCommand = exports.deserializeAws_restXmlGetCloudFrontOriginAccessIdentityConfigCommand = exports.deserializeAws_restXmlGetCloudFrontOriginAccessIdentityCommand = exports.deserializeAws_restXmlGetCachePolicyConfigCommand = exports.deserializeAws_restXmlGetCachePolicyCommand = exports.deserializeAws_restXmlDescribeFunctionCommand = exports.deserializeAws_restXmlDeleteStreamingDistributionCommand = exports.deserializeAws_restXmlDeleteResponseHeadersPolicyCommand = exports.deserializeAws_restXmlDeleteRealtimeLogConfigCommand = exports.deserializeAws_restXmlDeletePublicKeyCommand = exports.deserializeAws_restXmlDeleteOriginRequestPolicyCommand = exports.deserializeAws_restXmlDeleteMonitoringSubscriptionCommand = exports.deserializeAws_restXmlDeleteKeyGroupCommand = exports.deserializeAws_restXmlDeleteFunctionCommand = exports.deserializeAws_restXmlDeleteFieldLevelEncryptionProfileCommand = exports.deserializeAws_restXmlDeleteFieldLevelEncryptionConfigCommand = exports.deserializeAws_restXmlDeleteDistributionCommand = exports.deserializeAws_restXmlDeleteCloudFrontOriginAccessIdentityCommand = exports.deserializeAws_restXmlDeleteCachePolicyCommand = exports.deserializeAws_restXmlCreateStreamingDistributionWithTagsCommand = exports.deserializeAws_restXmlCreateStreamingDistributionCommand = exports.deserializeAws_restXmlCreateResponseHeadersPolicyCommand = exports.deserializeAws_restXmlCreateRealtimeLogConfigCommand = exports.deserializeAws_restXmlCreatePublicKeyCommand = exports.deserializeAws_restXmlCreateOriginRequestPolicyCommand = exports.deserializeAws_restXmlCreateMonitoringSubscriptionCommand = exports.deserializeAws_restXmlCreateKeyGroupCommand = exports.deserializeAws_restXmlCreateInvalidationCommand = void 0;\nexports.deserializeAws_restXmlUpdateStreamingDistributionCommand = exports.deserializeAws_restXmlUpdateResponseHeadersPolicyCommand = exports.deserializeAws_restXmlUpdateRealtimeLogConfigCommand = exports.deserializeAws_restXmlUpdatePublicKeyCommand = exports.deserializeAws_restXmlUpdateOriginRequestPolicyCommand = exports.deserializeAws_restXmlUpdateKeyGroupCommand = exports.deserializeAws_restXmlUpdateFunctionCommand = exports.deserializeAws_restXmlUpdateFieldLevelEncryptionProfileCommand = exports.deserializeAws_restXmlUpdateFieldLevelEncryptionConfigCommand = exports.deserializeAws_restXmlUpdateDistributionCommand = exports.deserializeAws_restXmlUpdateCloudFrontOriginAccessIdentityCommand = exports.deserializeAws_restXmlUpdateCachePolicyCommand = exports.deserializeAws_restXmlUntagResourceCommand = exports.deserializeAws_restXmlTestFunctionCommand = exports.deserializeAws_restXmlTagResourceCommand = exports.deserializeAws_restXmlPublishFunctionCommand = exports.deserializeAws_restXmlListTagsForResourceCommand = exports.deserializeAws_restXmlListStreamingDistributionsCommand = exports.deserializeAws_restXmlListResponseHeadersPoliciesCommand = exports.deserializeAws_restXmlListRealtimeLogConfigsCommand = exports.deserializeAws_restXmlListPublicKeysCommand = exports.deserializeAws_restXmlListOriginRequestPoliciesCommand = exports.deserializeAws_restXmlListKeyGroupsCommand = exports.deserializeAws_restXmlListInvalidationsCommand = exports.deserializeAws_restXmlListFunctionsCommand = exports.deserializeAws_restXmlListFieldLevelEncryptionProfilesCommand = exports.deserializeAws_restXmlListFieldLevelEncryptionConfigsCommand = exports.deserializeAws_restXmlListDistributionsByWebACLIdCommand = exports.deserializeAws_restXmlListDistributionsByResponseHeadersPolicyIdCommand = exports.deserializeAws_restXmlListDistributionsByRealtimeLogConfigCommand = exports.deserializeAws_restXmlListDistributionsByOriginRequestPolicyIdCommand = exports.deserializeAws_restXmlListDistributionsByKeyGroupCommand = exports.deserializeAws_restXmlListDistributionsByCachePolicyIdCommand = exports.deserializeAws_restXmlListDistributionsCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst xml_builder_1 = require(\"@aws-sdk/xml-builder\");\nconst entities_1 = require(\"entities\");\nconst fast_xml_parser_1 = require(\"fast-xml-parser\");\nconst CloudFrontServiceException_1 = require(\"../models/CloudFrontServiceException\");\nconst models_0_1 = require(\"../models/models_0\");\nconst models_1_1 = require(\"../models/models_1\");\nconst serializeAws_restXmlAssociateAliasCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distribution/{TargetDistributionId}/associate-alias\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"TargetDistributionId\", () => input.TargetDistributionId, \"{TargetDistributionId}\", false);\n    const query = map({\n        Alias: [, input.Alias],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlAssociateAliasCommand = serializeAws_restXmlAssociateAliasCommand;\nconst serializeAws_restXmlCreateCachePolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/cache-policy\";\n    let body;\n    if (input.CachePolicyConfig !== undefined) {\n        body = serializeAws_restXmlCachePolicyConfig(input.CachePolicyConfig, context);\n    }\n    let contents;\n    if (input.CachePolicyConfig !== undefined) {\n        contents = serializeAws_restXmlCachePolicyConfig(input.CachePolicyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreateCachePolicyCommand = serializeAws_restXmlCreateCachePolicyCommand;\nconst serializeAws_restXmlCreateCloudFrontOriginAccessIdentityCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-access-identity/cloudfront\";\n    let body;\n    if (input.CloudFrontOriginAccessIdentityConfig !== undefined) {\n        body = serializeAws_restXmlCloudFrontOriginAccessIdentityConfig(input.CloudFrontOriginAccessIdentityConfig, context);\n    }\n    let contents;\n    if (input.CloudFrontOriginAccessIdentityConfig !== undefined) {\n        contents = serializeAws_restXmlCloudFrontOriginAccessIdentityConfig(input.CloudFrontOriginAccessIdentityConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreateCloudFrontOriginAccessIdentityCommand = serializeAws_restXmlCreateCloudFrontOriginAccessIdentityCommand;\nconst serializeAws_restXmlCreateDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/distribution\";\n    let body;\n    if (input.DistributionConfig !== undefined) {\n        body = serializeAws_restXmlDistributionConfig(input.DistributionConfig, context);\n    }\n    let contents;\n    if (input.DistributionConfig !== undefined) {\n        contents = serializeAws_restXmlDistributionConfig(input.DistributionConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreateDistributionCommand = serializeAws_restXmlCreateDistributionCommand;\nconst serializeAws_restXmlCreateDistributionWithTagsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/distribution\";\n    const query = map({\n        WithTags: [, \"\"],\n    });\n    let body;\n    if (input.DistributionConfigWithTags !== undefined) {\n        body = serializeAws_restXmlDistributionConfigWithTags(input.DistributionConfigWithTags, context);\n    }\n    let contents;\n    if (input.DistributionConfigWithTags !== undefined) {\n        contents = serializeAws_restXmlDistributionConfigWithTags(input.DistributionConfigWithTags, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreateDistributionWithTagsCommand = serializeAws_restXmlCreateDistributionWithTagsCommand;\nconst serializeAws_restXmlCreateFieldLevelEncryptionConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/field-level-encryption\";\n    let body;\n    if (input.FieldLevelEncryptionConfig !== undefined) {\n        body = serializeAws_restXmlFieldLevelEncryptionConfig(input.FieldLevelEncryptionConfig, context);\n    }\n    let contents;\n    if (input.FieldLevelEncryptionConfig !== undefined) {\n        contents = serializeAws_restXmlFieldLevelEncryptionConfig(input.FieldLevelEncryptionConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreateFieldLevelEncryptionConfigCommand = serializeAws_restXmlCreateFieldLevelEncryptionConfigCommand;\nconst serializeAws_restXmlCreateFieldLevelEncryptionProfileCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption-profile\";\n    let body;\n    if (input.FieldLevelEncryptionProfileConfig !== undefined) {\n        body = serializeAws_restXmlFieldLevelEncryptionProfileConfig(input.FieldLevelEncryptionProfileConfig, context);\n    }\n    let contents;\n    if (input.FieldLevelEncryptionProfileConfig !== undefined) {\n        contents = serializeAws_restXmlFieldLevelEncryptionProfileConfig(input.FieldLevelEncryptionProfileConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreateFieldLevelEncryptionProfileCommand = serializeAws_restXmlCreateFieldLevelEncryptionProfileCommand;\nconst serializeAws_restXmlCreateFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function\";\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"CreateFunctionRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.FunctionCode !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"FunctionBlob\", context.base64Encoder(input.FunctionCode)).withName(\"FunctionCode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FunctionConfig !== undefined) {\n        const node = serializeAws_restXmlFunctionConfig(input.FunctionConfig, context).withName(\"FunctionConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Name !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"FunctionName\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreateFunctionCommand = serializeAws_restXmlCreateFunctionCommand;\nconst serializeAws_restXmlCreateInvalidationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distribution/{DistributionId}/invalidation\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"DistributionId\", () => input.DistributionId, \"{DistributionId}\", false);\n    let body;\n    if (input.InvalidationBatch !== undefined) {\n        body = serializeAws_restXmlInvalidationBatch(input.InvalidationBatch, context);\n    }\n    let contents;\n    if (input.InvalidationBatch !== undefined) {\n        contents = serializeAws_restXmlInvalidationBatch(input.InvalidationBatch, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreateInvalidationCommand = serializeAws_restXmlCreateInvalidationCommand;\nconst serializeAws_restXmlCreateKeyGroupCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/key-group\";\n    let body;\n    if (input.KeyGroupConfig !== undefined) {\n        body = serializeAws_restXmlKeyGroupConfig(input.KeyGroupConfig, context);\n    }\n    let contents;\n    if (input.KeyGroupConfig !== undefined) {\n        contents = serializeAws_restXmlKeyGroupConfig(input.KeyGroupConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreateKeyGroupCommand = serializeAws_restXmlCreateKeyGroupCommand;\nconst serializeAws_restXmlCreateMonitoringSubscriptionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributions/{DistributionId}/monitoring-subscription\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"DistributionId\", () => input.DistributionId, \"{DistributionId}\", false);\n    let body;\n    if (input.MonitoringSubscription !== undefined) {\n        body = serializeAws_restXmlMonitoringSubscription(input.MonitoringSubscription, context);\n    }\n    let contents;\n    if (input.MonitoringSubscription !== undefined) {\n        contents = serializeAws_restXmlMonitoringSubscription(input.MonitoringSubscription, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreateMonitoringSubscriptionCommand = serializeAws_restXmlCreateMonitoringSubscriptionCommand;\nconst serializeAws_restXmlCreateOriginRequestPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/origin-request-policy\";\n    let body;\n    if (input.OriginRequestPolicyConfig !== undefined) {\n        body = serializeAws_restXmlOriginRequestPolicyConfig(input.OriginRequestPolicyConfig, context);\n    }\n    let contents;\n    if (input.OriginRequestPolicyConfig !== undefined) {\n        contents = serializeAws_restXmlOriginRequestPolicyConfig(input.OriginRequestPolicyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreateOriginRequestPolicyCommand = serializeAws_restXmlCreateOriginRequestPolicyCommand;\nconst serializeAws_restXmlCreatePublicKeyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/public-key\";\n    let body;\n    if (input.PublicKeyConfig !== undefined) {\n        body = serializeAws_restXmlPublicKeyConfig(input.PublicKeyConfig, context);\n    }\n    let contents;\n    if (input.PublicKeyConfig !== undefined) {\n        contents = serializeAws_restXmlPublicKeyConfig(input.PublicKeyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreatePublicKeyCommand = serializeAws_restXmlCreatePublicKeyCommand;\nconst serializeAws_restXmlCreateRealtimeLogConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/realtime-log-config\";\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"CreateRealtimeLogConfigRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.EndPoints !== undefined) {\n        const nodes = serializeAws_restXmlEndPointList(input.EndPoints, context);\n        const containerNode = new xml_builder_1.XmlNode(\"EndPoints\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Fields !== undefined) {\n        const nodes = serializeAws_restXmlFieldList(input.Fields, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Fields\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Name !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SamplingRate !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.SamplingRate)).withName(\"SamplingRate\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreateRealtimeLogConfigCommand = serializeAws_restXmlCreateRealtimeLogConfigCommand;\nconst serializeAws_restXmlCreateResponseHeadersPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/response-headers-policy\";\n    let body;\n    if (input.ResponseHeadersPolicyConfig !== undefined) {\n        body = serializeAws_restXmlResponseHeadersPolicyConfig(input.ResponseHeadersPolicyConfig, context);\n    }\n    let contents;\n    if (input.ResponseHeadersPolicyConfig !== undefined) {\n        contents = serializeAws_restXmlResponseHeadersPolicyConfig(input.ResponseHeadersPolicyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreateResponseHeadersPolicyCommand = serializeAws_restXmlCreateResponseHeadersPolicyCommand;\nconst serializeAws_restXmlCreateStreamingDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/streaming-distribution\";\n    let body;\n    if (input.StreamingDistributionConfig !== undefined) {\n        body = serializeAws_restXmlStreamingDistributionConfig(input.StreamingDistributionConfig, context);\n    }\n    let contents;\n    if (input.StreamingDistributionConfig !== undefined) {\n        contents = serializeAws_restXmlStreamingDistributionConfig(input.StreamingDistributionConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreateStreamingDistributionCommand = serializeAws_restXmlCreateStreamingDistributionCommand;\nconst serializeAws_restXmlCreateStreamingDistributionWithTagsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/streaming-distribution\";\n    const query = map({\n        WithTags: [, \"\"],\n    });\n    let body;\n    if (input.StreamingDistributionConfigWithTags !== undefined) {\n        body = serializeAws_restXmlStreamingDistributionConfigWithTags(input.StreamingDistributionConfigWithTags, context);\n    }\n    let contents;\n    if (input.StreamingDistributionConfigWithTags !== undefined) {\n        contents = serializeAws_restXmlStreamingDistributionConfigWithTags(input.StreamingDistributionConfigWithTags, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlCreateStreamingDistributionWithTagsCommand = serializeAws_restXmlCreateStreamingDistributionWithTagsCommand;\nconst serializeAws_restXmlDeleteCachePolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/cache-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlDeleteCachePolicyCommand = serializeAws_restXmlDeleteCachePolicyCommand;\nconst serializeAws_restXmlDeleteCloudFrontOriginAccessIdentityCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-access-identity/cloudfront/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlDeleteCloudFrontOriginAccessIdentityCommand = serializeAws_restXmlDeleteCloudFrontOriginAccessIdentityCommand;\nconst serializeAws_restXmlDeleteDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/distribution/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlDeleteDistributionCommand = serializeAws_restXmlDeleteDistributionCommand;\nconst serializeAws_restXmlDeleteFieldLevelEncryptionConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/field-level-encryption/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlDeleteFieldLevelEncryptionConfigCommand = serializeAws_restXmlDeleteFieldLevelEncryptionConfigCommand;\nconst serializeAws_restXmlDeleteFieldLevelEncryptionProfileCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption-profile/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlDeleteFieldLevelEncryptionProfileCommand = serializeAws_restXmlDeleteFieldLevelEncryptionProfileCommand;\nconst serializeAws_restXmlDeleteFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function/{Name}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Name\", () => input.Name, \"{Name}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlDeleteFunctionCommand = serializeAws_restXmlDeleteFunctionCommand;\nconst serializeAws_restXmlDeleteKeyGroupCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/key-group/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlDeleteKeyGroupCommand = serializeAws_restXmlDeleteKeyGroupCommand;\nconst serializeAws_restXmlDeleteMonitoringSubscriptionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributions/{DistributionId}/monitoring-subscription\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"DistributionId\", () => input.DistributionId, \"{DistributionId}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlDeleteMonitoringSubscriptionCommand = serializeAws_restXmlDeleteMonitoringSubscriptionCommand;\nconst serializeAws_restXmlDeleteOriginRequestPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/origin-request-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlDeleteOriginRequestPolicyCommand = serializeAws_restXmlDeleteOriginRequestPolicyCommand;\nconst serializeAws_restXmlDeletePublicKeyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/public-key/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlDeletePublicKeyCommand = serializeAws_restXmlDeletePublicKeyCommand;\nconst serializeAws_restXmlDeleteRealtimeLogConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/delete-realtime-log-config\";\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"DeleteRealtimeLogConfigRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.ARN !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ARN).withName(\"ARN\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Name !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlDeleteRealtimeLogConfigCommand = serializeAws_restXmlDeleteRealtimeLogConfigCommand;\nconst serializeAws_restXmlDeleteResponseHeadersPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/response-headers-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlDeleteResponseHeadersPolicyCommand = serializeAws_restXmlDeleteResponseHeadersPolicyCommand;\nconst serializeAws_restXmlDeleteStreamingDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/streaming-distribution/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlDeleteStreamingDistributionCommand = serializeAws_restXmlDeleteStreamingDistributionCommand;\nconst serializeAws_restXmlDescribeFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function/{Name}/describe\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Name\", () => input.Name, \"{Name}\", false);\n    const query = map({\n        Stage: [, input.Stage],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlDescribeFunctionCommand = serializeAws_restXmlDescribeFunctionCommand;\nconst serializeAws_restXmlGetCachePolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/cache-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetCachePolicyCommand = serializeAws_restXmlGetCachePolicyCommand;\nconst serializeAws_restXmlGetCachePolicyConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/cache-policy/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetCachePolicyConfigCommand = serializeAws_restXmlGetCachePolicyConfigCommand;\nconst serializeAws_restXmlGetCloudFrontOriginAccessIdentityCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-access-identity/cloudfront/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetCloudFrontOriginAccessIdentityCommand = serializeAws_restXmlGetCloudFrontOriginAccessIdentityCommand;\nconst serializeAws_restXmlGetCloudFrontOriginAccessIdentityConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-access-identity/cloudfront/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetCloudFrontOriginAccessIdentityConfigCommand = serializeAws_restXmlGetCloudFrontOriginAccessIdentityConfigCommand;\nconst serializeAws_restXmlGetDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/distribution/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetDistributionCommand = serializeAws_restXmlGetDistributionCommand;\nconst serializeAws_restXmlGetDistributionConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/distribution/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetDistributionConfigCommand = serializeAws_restXmlGetDistributionConfigCommand;\nconst serializeAws_restXmlGetFieldLevelEncryptionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/field-level-encryption/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetFieldLevelEncryptionCommand = serializeAws_restXmlGetFieldLevelEncryptionCommand;\nconst serializeAws_restXmlGetFieldLevelEncryptionConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetFieldLevelEncryptionConfigCommand = serializeAws_restXmlGetFieldLevelEncryptionConfigCommand;\nconst serializeAws_restXmlGetFieldLevelEncryptionProfileCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption-profile/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetFieldLevelEncryptionProfileCommand = serializeAws_restXmlGetFieldLevelEncryptionProfileCommand;\nconst serializeAws_restXmlGetFieldLevelEncryptionProfileConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption-profile/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetFieldLevelEncryptionProfileConfigCommand = serializeAws_restXmlGetFieldLevelEncryptionProfileConfigCommand;\nconst serializeAws_restXmlGetFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function/{Name}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Name\", () => input.Name, \"{Name}\", false);\n    const query = map({\n        Stage: [, input.Stage],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetFunctionCommand = serializeAws_restXmlGetFunctionCommand;\nconst serializeAws_restXmlGetInvalidationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distribution/{DistributionId}/invalidation/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"DistributionId\", () => input.DistributionId, \"{DistributionId}\", false);\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetInvalidationCommand = serializeAws_restXmlGetInvalidationCommand;\nconst serializeAws_restXmlGetKeyGroupCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/key-group/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetKeyGroupCommand = serializeAws_restXmlGetKeyGroupCommand;\nconst serializeAws_restXmlGetKeyGroupConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/key-group/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetKeyGroupConfigCommand = serializeAws_restXmlGetKeyGroupConfigCommand;\nconst serializeAws_restXmlGetMonitoringSubscriptionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributions/{DistributionId}/monitoring-subscription\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"DistributionId\", () => input.DistributionId, \"{DistributionId}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetMonitoringSubscriptionCommand = serializeAws_restXmlGetMonitoringSubscriptionCommand;\nconst serializeAws_restXmlGetOriginRequestPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/origin-request-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetOriginRequestPolicyCommand = serializeAws_restXmlGetOriginRequestPolicyCommand;\nconst serializeAws_restXmlGetOriginRequestPolicyConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-request-policy/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetOriginRequestPolicyConfigCommand = serializeAws_restXmlGetOriginRequestPolicyConfigCommand;\nconst serializeAws_restXmlGetPublicKeyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/public-key/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetPublicKeyCommand = serializeAws_restXmlGetPublicKeyCommand;\nconst serializeAws_restXmlGetPublicKeyConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/public-key/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetPublicKeyConfigCommand = serializeAws_restXmlGetPublicKeyConfigCommand;\nconst serializeAws_restXmlGetRealtimeLogConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/get-realtime-log-config\";\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"GetRealtimeLogConfigRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.ARN !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ARN).withName(\"ARN\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Name !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetRealtimeLogConfigCommand = serializeAws_restXmlGetRealtimeLogConfigCommand;\nconst serializeAws_restXmlGetResponseHeadersPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/response-headers-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetResponseHeadersPolicyCommand = serializeAws_restXmlGetResponseHeadersPolicyCommand;\nconst serializeAws_restXmlGetResponseHeadersPolicyConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/response-headers-policy/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetResponseHeadersPolicyConfigCommand = serializeAws_restXmlGetResponseHeadersPolicyConfigCommand;\nconst serializeAws_restXmlGetStreamingDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/streaming-distribution/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetStreamingDistributionCommand = serializeAws_restXmlGetStreamingDistributionCommand;\nconst serializeAws_restXmlGetStreamingDistributionConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/streaming-distribution/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlGetStreamingDistributionConfigCommand = serializeAws_restXmlGetStreamingDistributionConfigCommand;\nconst serializeAws_restXmlListCachePoliciesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/cache-policy\";\n    const query = map({\n        Type: [, input.Type],\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListCachePoliciesCommand = serializeAws_restXmlListCachePoliciesCommand;\nconst serializeAws_restXmlListCloudFrontOriginAccessIdentitiesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-access-identity/cloudfront\";\n    const query = map({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListCloudFrontOriginAccessIdentitiesCommand = serializeAws_restXmlListCloudFrontOriginAccessIdentitiesCommand;\nconst serializeAws_restXmlListConflictingAliasesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/conflicting-alias\";\n    const query = map({\n        DistributionId: [, input.DistributionId],\n        Alias: [, input.Alias],\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListConflictingAliasesCommand = serializeAws_restXmlListConflictingAliasesCommand;\nconst serializeAws_restXmlListDistributionsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/distribution\";\n    const query = map({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListDistributionsCommand = serializeAws_restXmlListDistributionsCommand;\nconst serializeAws_restXmlListDistributionsByCachePolicyIdCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributionsByCachePolicyId/{CachePolicyId}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"CachePolicyId\", () => input.CachePolicyId, \"{CachePolicyId}\", false);\n    const query = map({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListDistributionsByCachePolicyIdCommand = serializeAws_restXmlListDistributionsByCachePolicyIdCommand;\nconst serializeAws_restXmlListDistributionsByKeyGroupCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributionsByKeyGroupId/{KeyGroupId}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"KeyGroupId\", () => input.KeyGroupId, \"{KeyGroupId}\", false);\n    const query = map({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListDistributionsByKeyGroupCommand = serializeAws_restXmlListDistributionsByKeyGroupCommand;\nconst serializeAws_restXmlListDistributionsByOriginRequestPolicyIdCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributionsByOriginRequestPolicyId/{OriginRequestPolicyId}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"OriginRequestPolicyId\", () => input.OriginRequestPolicyId, \"{OriginRequestPolicyId}\", false);\n    const query = map({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListDistributionsByOriginRequestPolicyIdCommand = serializeAws_restXmlListDistributionsByOriginRequestPolicyIdCommand;\nconst serializeAws_restXmlListDistributionsByRealtimeLogConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributionsByRealtimeLogConfig\";\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"ListDistributionsByRealtimeLogConfigRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.Marker !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Marker).withName(\"Marker\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MaxItems !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"Integer\", String(input.MaxItems)).withName(\"MaxItems\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RealtimeLogConfigArn !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.RealtimeLogConfigArn).withName(\"RealtimeLogConfigArn\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RealtimeLogConfigName !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.RealtimeLogConfigName).withName(\"RealtimeLogConfigName\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlListDistributionsByRealtimeLogConfigCommand = serializeAws_restXmlListDistributionsByRealtimeLogConfigCommand;\nconst serializeAws_restXmlListDistributionsByResponseHeadersPolicyIdCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributionsByResponseHeadersPolicyId/{ResponseHeadersPolicyId}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"ResponseHeadersPolicyId\", () => input.ResponseHeadersPolicyId, \"{ResponseHeadersPolicyId}\", false);\n    const query = map({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListDistributionsByResponseHeadersPolicyIdCommand = serializeAws_restXmlListDistributionsByResponseHeadersPolicyIdCommand;\nconst serializeAws_restXmlListDistributionsByWebACLIdCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distributionsByWebACLId/{WebACLId}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"WebACLId\", () => input.WebACLId, \"{WebACLId}\", false);\n    const query = map({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListDistributionsByWebACLIdCommand = serializeAws_restXmlListDistributionsByWebACLIdCommand;\nconst serializeAws_restXmlListFieldLevelEncryptionConfigsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/field-level-encryption\";\n    const query = map({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListFieldLevelEncryptionConfigsCommand = serializeAws_restXmlListFieldLevelEncryptionConfigsCommand;\nconst serializeAws_restXmlListFieldLevelEncryptionProfilesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption-profile\";\n    const query = map({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListFieldLevelEncryptionProfilesCommand = serializeAws_restXmlListFieldLevelEncryptionProfilesCommand;\nconst serializeAws_restXmlListFunctionsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function\";\n    const query = map({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n        Stage: [, input.Stage],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListFunctionsCommand = serializeAws_restXmlListFunctionsCommand;\nconst serializeAws_restXmlListInvalidationsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/distribution/{DistributionId}/invalidation\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"DistributionId\", () => input.DistributionId, \"{DistributionId}\", false);\n    const query = map({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListInvalidationsCommand = serializeAws_restXmlListInvalidationsCommand;\nconst serializeAws_restXmlListKeyGroupsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/key-group\";\n    const query = map({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListKeyGroupsCommand = serializeAws_restXmlListKeyGroupsCommand;\nconst serializeAws_restXmlListOriginRequestPoliciesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/origin-request-policy\";\n    const query = map({\n        Type: [, input.Type],\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListOriginRequestPoliciesCommand = serializeAws_restXmlListOriginRequestPoliciesCommand;\nconst serializeAws_restXmlListPublicKeysCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/public-key\";\n    const query = map({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListPublicKeysCommand = serializeAws_restXmlListPublicKeysCommand;\nconst serializeAws_restXmlListRealtimeLogConfigsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/realtime-log-config\";\n    const query = map({\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n        Marker: [, input.Marker],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListRealtimeLogConfigsCommand = serializeAws_restXmlListRealtimeLogConfigsCommand;\nconst serializeAws_restXmlListResponseHeadersPoliciesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/response-headers-policy\";\n    const query = map({\n        Type: [, input.Type],\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListResponseHeadersPoliciesCommand = serializeAws_restXmlListResponseHeadersPoliciesCommand;\nconst serializeAws_restXmlListStreamingDistributionsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/streaming-distribution\";\n    const query = map({\n        Marker: [, input.Marker],\n        MaxItems: [() => input.MaxItems !== void 0, () => input.MaxItems.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListStreamingDistributionsCommand = serializeAws_restXmlListStreamingDistributionsCommand;\nconst serializeAws_restXmlListTagsForResourceCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/tagging\";\n    const query = map({\n        Resource: [, input.Resource],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlListTagsForResourceCommand = serializeAws_restXmlListTagsForResourceCommand;\nconst serializeAws_restXmlPublishFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function/{Name}/publish\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Name\", () => input.Name, \"{Name}\", false);\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlPublishFunctionCommand = serializeAws_restXmlPublishFunctionCommand;\nconst serializeAws_restXmlTagResourceCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/tagging\";\n    const query = map({\n        Operation: [, \"Tag\"],\n        Resource: [, input.Resource],\n    });\n    let body;\n    if (input.Tags !== undefined) {\n        body = serializeAws_restXmlTags(input.Tags, context);\n    }\n    let contents;\n    if (input.Tags !== undefined) {\n        contents = serializeAws_restXmlTags(input.Tags, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlTagResourceCommand = serializeAws_restXmlTagResourceCommand;\nconst serializeAws_restXmlTestFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function/{Name}/test\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Name\", () => input.Name, \"{Name}\", false);\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"TestFunctionRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.EventObject !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"FunctionEventObject\", context.base64Encoder(input.EventObject)).withName(\"EventObject\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Stage !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"FunctionStage\", input.Stage).withName(\"Stage\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlTestFunctionCommand = serializeAws_restXmlTestFunctionCommand;\nconst serializeAws_restXmlUntagResourceCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/tagging\";\n    const query = map({\n        Operation: [, \"Untag\"],\n        Resource: [, input.Resource],\n    });\n    let body;\n    if (input.TagKeys !== undefined) {\n        body = serializeAws_restXmlTagKeys(input.TagKeys, context);\n    }\n    let contents;\n    if (input.TagKeys !== undefined) {\n        contents = serializeAws_restXmlTagKeys(input.TagKeys, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restXmlUntagResourceCommand = serializeAws_restXmlUntagResourceCommand;\nconst serializeAws_restXmlUpdateCachePolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/cache-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.CachePolicyConfig !== undefined) {\n        body = serializeAws_restXmlCachePolicyConfig(input.CachePolicyConfig, context);\n    }\n    let contents;\n    if (input.CachePolicyConfig !== undefined) {\n        contents = serializeAws_restXmlCachePolicyConfig(input.CachePolicyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlUpdateCachePolicyCommand = serializeAws_restXmlUpdateCachePolicyCommand;\nconst serializeAws_restXmlUpdateCloudFrontOriginAccessIdentityCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/origin-access-identity/cloudfront/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.CloudFrontOriginAccessIdentityConfig !== undefined) {\n        body = serializeAws_restXmlCloudFrontOriginAccessIdentityConfig(input.CloudFrontOriginAccessIdentityConfig, context);\n    }\n    let contents;\n    if (input.CloudFrontOriginAccessIdentityConfig !== undefined) {\n        contents = serializeAws_restXmlCloudFrontOriginAccessIdentityConfig(input.CloudFrontOriginAccessIdentityConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlUpdateCloudFrontOriginAccessIdentityCommand = serializeAws_restXmlUpdateCloudFrontOriginAccessIdentityCommand;\nconst serializeAws_restXmlUpdateDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/distribution/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.DistributionConfig !== undefined) {\n        body = serializeAws_restXmlDistributionConfig(input.DistributionConfig, context);\n    }\n    let contents;\n    if (input.DistributionConfig !== undefined) {\n        contents = serializeAws_restXmlDistributionConfig(input.DistributionConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlUpdateDistributionCommand = serializeAws_restXmlUpdateDistributionCommand;\nconst serializeAws_restXmlUpdateFieldLevelEncryptionConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.FieldLevelEncryptionConfig !== undefined) {\n        body = serializeAws_restXmlFieldLevelEncryptionConfig(input.FieldLevelEncryptionConfig, context);\n    }\n    let contents;\n    if (input.FieldLevelEncryptionConfig !== undefined) {\n        contents = serializeAws_restXmlFieldLevelEncryptionConfig(input.FieldLevelEncryptionConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlUpdateFieldLevelEncryptionConfigCommand = serializeAws_restXmlUpdateFieldLevelEncryptionConfigCommand;\nconst serializeAws_restXmlUpdateFieldLevelEncryptionProfileCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/field-level-encryption-profile/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.FieldLevelEncryptionProfileConfig !== undefined) {\n        body = serializeAws_restXmlFieldLevelEncryptionProfileConfig(input.FieldLevelEncryptionProfileConfig, context);\n    }\n    let contents;\n    if (input.FieldLevelEncryptionProfileConfig !== undefined) {\n        contents = serializeAws_restXmlFieldLevelEncryptionProfileConfig(input.FieldLevelEncryptionProfileConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlUpdateFieldLevelEncryptionProfileCommand = serializeAws_restXmlUpdateFieldLevelEncryptionProfileCommand;\nconst serializeAws_restXmlUpdateFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/function/{Name}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Name\", () => input.Name, \"{Name}\", false);\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"UpdateFunctionRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.FunctionCode !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"FunctionBlob\", context.base64Encoder(input.FunctionCode)).withName(\"FunctionCode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FunctionConfig !== undefined) {\n        const node = serializeAws_restXmlFunctionConfig(input.FunctionConfig, context).withName(\"FunctionConfig\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlUpdateFunctionCommand = serializeAws_restXmlUpdateFunctionCommand;\nconst serializeAws_restXmlUpdateKeyGroupCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/key-group/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.KeyGroupConfig !== undefined) {\n        body = serializeAws_restXmlKeyGroupConfig(input.KeyGroupConfig, context);\n    }\n    let contents;\n    if (input.KeyGroupConfig !== undefined) {\n        contents = serializeAws_restXmlKeyGroupConfig(input.KeyGroupConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlUpdateKeyGroupCommand = serializeAws_restXmlUpdateKeyGroupCommand;\nconst serializeAws_restXmlUpdateOriginRequestPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/origin-request-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.OriginRequestPolicyConfig !== undefined) {\n        body = serializeAws_restXmlOriginRequestPolicyConfig(input.OriginRequestPolicyConfig, context);\n    }\n    let contents;\n    if (input.OriginRequestPolicyConfig !== undefined) {\n        contents = serializeAws_restXmlOriginRequestPolicyConfig(input.OriginRequestPolicyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlUpdateOriginRequestPolicyCommand = serializeAws_restXmlUpdateOriginRequestPolicyCommand;\nconst serializeAws_restXmlUpdatePublicKeyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/public-key/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.PublicKeyConfig !== undefined) {\n        body = serializeAws_restXmlPublicKeyConfig(input.PublicKeyConfig, context);\n    }\n    let contents;\n    if (input.PublicKeyConfig !== undefined) {\n        contents = serializeAws_restXmlPublicKeyConfig(input.PublicKeyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlUpdatePublicKeyCommand = serializeAws_restXmlUpdatePublicKeyCommand;\nconst serializeAws_restXmlUpdateRealtimeLogConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/xml\",\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/realtime-log-config\";\n    let body;\n    body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n    const bodyNode = new xml_builder_1.XmlNode(\"UpdateRealtimeLogConfigRequest\");\n    bodyNode.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n    if (input.ARN !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ARN).withName(\"ARN\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EndPoints !== undefined) {\n        const nodes = serializeAws_restXmlEndPointList(input.EndPoints, context);\n        const containerNode = new xml_builder_1.XmlNode(\"EndPoints\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Fields !== undefined) {\n        const nodes = serializeAws_restXmlFieldList(input.Fields, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Fields\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Name !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SamplingRate !== undefined) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.SamplingRate)).withName(\"SamplingRate\");\n        bodyNode.addChildNode(node);\n    }\n    body += bodyNode.toString();\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlUpdateRealtimeLogConfigCommand = serializeAws_restXmlUpdateRealtimeLogConfigCommand;\nconst serializeAws_restXmlUpdateResponseHeadersPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-05-31/response-headers-policy/{Id}\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.ResponseHeadersPolicyConfig !== undefined) {\n        body = serializeAws_restXmlResponseHeadersPolicyConfig(input.ResponseHeadersPolicyConfig, context);\n    }\n    let contents;\n    if (input.ResponseHeadersPolicyConfig !== undefined) {\n        contents = serializeAws_restXmlResponseHeadersPolicyConfig(input.ResponseHeadersPolicyConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlUpdateResponseHeadersPolicyCommand = serializeAws_restXmlUpdateResponseHeadersPolicyCommand;\nconst serializeAws_restXmlUpdateStreamingDistributionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/xml\",\n        \"if-match\": input.IfMatch,\n    });\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-05-31/streaming-distribution/{Id}/config\";\n    resolvedPath = (0, smithy_client_1.resolvedPath)(resolvedPath, input, \"Id\", () => input.Id, \"{Id}\", false);\n    let body;\n    if (input.StreamingDistributionConfig !== undefined) {\n        body = serializeAws_restXmlStreamingDistributionConfig(input.StreamingDistributionConfig, context);\n    }\n    let contents;\n    if (input.StreamingDistributionConfig !== undefined) {\n        contents = serializeAws_restXmlStreamingDistributionConfig(input.StreamingDistributionConfig, context);\n        body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n        contents.addAttribute(\"xmlns\", \"http://cloudfront.amazonaws.com/doc/2020-05-31/\");\n        body += contents.toString();\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restXmlUpdateStreamingDistributionCommand = serializeAws_restXmlUpdateStreamingDistributionCommand;\nconst deserializeAws_restXmlAssociateAliasCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlAssociateAliasCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlAssociateAliasCommand = deserializeAws_restXmlAssociateAliasCommand;\nconst deserializeAws_restXmlAssociateAliasCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await deserializeAws_restXmlIllegalUpdateResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await deserializeAws_restXmlNoSuchDistributionResponse(parsedOutput, context);\n        case \"TooManyDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionCNAMEs\":\n            throw await deserializeAws_restXmlTooManyDistributionCNAMEsResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreateCachePolicyCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreateCachePolicyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CachePolicy = deserializeAws_restXmlCachePolicy(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlCreateCachePolicyCommand = deserializeAws_restXmlCreateCachePolicyCommand;\nconst deserializeAws_restXmlCreateCachePolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"CachePolicyAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CachePolicyAlreadyExists\":\n            throw await deserializeAws_restXmlCachePolicyAlreadyExistsResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"TooManyCachePolicies\":\n        case \"com.amazonaws.cloudfront#TooManyCachePolicies\":\n            throw await deserializeAws_restXmlTooManyCachePoliciesResponse(parsedOutput, context);\n        case \"TooManyCookiesInCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyCookiesInCachePolicy\":\n            throw await deserializeAws_restXmlTooManyCookiesInCachePolicyResponse(parsedOutput, context);\n        case \"TooManyHeadersInCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInCachePolicy\":\n            throw await deserializeAws_restXmlTooManyHeadersInCachePolicyResponse(parsedOutput, context);\n        case \"TooManyQueryStringsInCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringsInCachePolicy\":\n            throw await deserializeAws_restXmlTooManyQueryStringsInCachePolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreateCloudFrontOriginAccessIdentityCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreateCloudFrontOriginAccessIdentityCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CloudFrontOriginAccessIdentity = deserializeAws_restXmlCloudFrontOriginAccessIdentity(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlCreateCloudFrontOriginAccessIdentityCommand = deserializeAws_restXmlCreateCloudFrontOriginAccessIdentityCommand;\nconst deserializeAws_restXmlCreateCloudFrontOriginAccessIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CloudFrontOriginAccessIdentityAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CloudFrontOriginAccessIdentityAlreadyExists\":\n            throw await deserializeAws_restXmlCloudFrontOriginAccessIdentityAlreadyExistsResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await deserializeAws_restXmlMissingBodyResponse(parsedOutput, context);\n        case \"TooManyCloudFrontOriginAccessIdentities\":\n        case \"com.amazonaws.cloudfront#TooManyCloudFrontOriginAccessIdentities\":\n            throw await deserializeAws_restXmlTooManyCloudFrontOriginAccessIdentitiesResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreateDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreateDistributionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Distribution = deserializeAws_restXmlDistribution(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlCreateDistributionCommand = deserializeAws_restXmlCreateDistributionCommand;\nconst deserializeAws_restXmlCreateDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"CNAMEAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CNAMEAlreadyExists\":\n            throw await deserializeAws_restXmlCNAMEAlreadyExistsResponse(parsedOutput, context);\n        case \"DistributionAlreadyExists\":\n        case \"com.amazonaws.cloudfront#DistributionAlreadyExists\":\n            throw await deserializeAws_restXmlDistributionAlreadyExistsResponse(parsedOutput, context);\n        case \"IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n        case \"com.amazonaws.cloudfront#IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n            throw await deserializeAws_restXmlIllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidDefaultRootObject\":\n        case \"com.amazonaws.cloudfront#InvalidDefaultRootObject\":\n            throw await deserializeAws_restXmlInvalidDefaultRootObjectResponse(parsedOutput, context);\n        case \"InvalidErrorCode\":\n        case \"com.amazonaws.cloudfront#InvalidErrorCode\":\n            throw await deserializeAws_restXmlInvalidErrorCodeResponse(parsedOutput, context);\n        case \"InvalidForwardCookies\":\n        case \"com.amazonaws.cloudfront#InvalidForwardCookies\":\n            throw await deserializeAws_restXmlInvalidForwardCookiesResponse(parsedOutput, context);\n        case \"InvalidFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidFunctionAssociation\":\n            throw await deserializeAws_restXmlInvalidFunctionAssociationResponse(parsedOutput, context);\n        case \"InvalidGeoRestrictionParameter\":\n        case \"com.amazonaws.cloudfront#InvalidGeoRestrictionParameter\":\n            throw await deserializeAws_restXmlInvalidGeoRestrictionParameterResponse(parsedOutput, context);\n        case \"InvalidHeadersForS3Origin\":\n        case \"com.amazonaws.cloudfront#InvalidHeadersForS3Origin\":\n            throw await deserializeAws_restXmlInvalidHeadersForS3OriginResponse(parsedOutput, context);\n        case \"InvalidLambdaFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidLambdaFunctionAssociation\":\n            throw await deserializeAws_restXmlInvalidLambdaFunctionAssociationResponse(parsedOutput, context);\n        case \"InvalidLocationCode\":\n        case \"com.amazonaws.cloudfront#InvalidLocationCode\":\n            throw await deserializeAws_restXmlInvalidLocationCodeResponse(parsedOutput, context);\n        case \"InvalidMinimumProtocolVersion\":\n        case \"com.amazonaws.cloudfront#InvalidMinimumProtocolVersion\":\n            throw await deserializeAws_restXmlInvalidMinimumProtocolVersionResponse(parsedOutput, context);\n        case \"InvalidOrigin\":\n        case \"com.amazonaws.cloudfront#InvalidOrigin\":\n            throw await deserializeAws_restXmlInvalidOriginResponse(parsedOutput, context);\n        case \"InvalidOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessIdentity\":\n            throw await deserializeAws_restXmlInvalidOriginAccessIdentityResponse(parsedOutput, context);\n        case \"InvalidOriginKeepaliveTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginKeepaliveTimeout\":\n            throw await deserializeAws_restXmlInvalidOriginKeepaliveTimeoutResponse(parsedOutput, context);\n        case \"InvalidOriginReadTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginReadTimeout\":\n            throw await deserializeAws_restXmlInvalidOriginReadTimeoutResponse(parsedOutput, context);\n        case \"InvalidProtocolSettings\":\n        case \"com.amazonaws.cloudfront#InvalidProtocolSettings\":\n            throw await deserializeAws_restXmlInvalidProtocolSettingsResponse(parsedOutput, context);\n        case \"InvalidQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#InvalidQueryStringParameters\":\n            throw await deserializeAws_restXmlInvalidQueryStringParametersResponse(parsedOutput, context);\n        case \"InvalidRelativePath\":\n        case \"com.amazonaws.cloudfront#InvalidRelativePath\":\n            throw await deserializeAws_restXmlInvalidRelativePathResponse(parsedOutput, context);\n        case \"InvalidRequiredProtocol\":\n        case \"com.amazonaws.cloudfront#InvalidRequiredProtocol\":\n            throw await deserializeAws_restXmlInvalidRequiredProtocolResponse(parsedOutput, context);\n        case \"InvalidResponseCode\":\n        case \"com.amazonaws.cloudfront#InvalidResponseCode\":\n            throw await deserializeAws_restXmlInvalidResponseCodeResponse(parsedOutput, context);\n        case \"InvalidTTLOrder\":\n        case \"com.amazonaws.cloudfront#InvalidTTLOrder\":\n            throw await deserializeAws_restXmlInvalidTTLOrderResponse(parsedOutput, context);\n        case \"InvalidViewerCertificate\":\n        case \"com.amazonaws.cloudfront#InvalidViewerCertificate\":\n            throw await deserializeAws_restXmlInvalidViewerCertificateResponse(parsedOutput, context);\n        case \"InvalidWebACLId\":\n        case \"com.amazonaws.cloudfront#InvalidWebACLId\":\n            throw await deserializeAws_restXmlInvalidWebACLIdResponse(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await deserializeAws_restXmlMissingBodyResponse(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await deserializeAws_restXmlNoSuchCachePolicyResponse(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await deserializeAws_restXmlNoSuchFieldLevelEncryptionConfigResponse(parsedOutput, context);\n        case \"NoSuchOrigin\":\n        case \"com.amazonaws.cloudfront#NoSuchOrigin\":\n            throw await deserializeAws_restXmlNoSuchOriginResponse(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await deserializeAws_restXmlNoSuchOriginRequestPolicyResponse(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await deserializeAws_restXmlNoSuchRealtimeLogConfigResponse(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlNoSuchResponseHeadersPolicyResponse(parsedOutput, context);\n        case \"RealtimeLogConfigOwnerMismatch\":\n        case \"com.amazonaws.cloudfront#RealtimeLogConfigOwnerMismatch\":\n            throw await deserializeAws_restXmlRealtimeLogConfigOwnerMismatchResponse(parsedOutput, context);\n        case \"TooManyCacheBehaviors\":\n        case \"com.amazonaws.cloudfront#TooManyCacheBehaviors\":\n            throw await deserializeAws_restXmlTooManyCacheBehaviorsResponse(parsedOutput, context);\n        case \"TooManyCertificates\":\n        case \"com.amazonaws.cloudfront#TooManyCertificates\":\n            throw await deserializeAws_restXmlTooManyCertificatesResponse(parsedOutput, context);\n        case \"TooManyCookieNamesInWhiteList\":\n        case \"com.amazonaws.cloudfront#TooManyCookieNamesInWhiteList\":\n            throw await deserializeAws_restXmlTooManyCookieNamesInWhiteListResponse(parsedOutput, context);\n        case \"TooManyDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionCNAMEs\":\n            throw await deserializeAws_restXmlTooManyDistributionCNAMEsResponse(parsedOutput, context);\n        case \"TooManyDistributions\":\n        case \"com.amazonaws.cloudfront#TooManyDistributions\":\n            throw await deserializeAws_restXmlTooManyDistributionsResponse(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToCachePolicy\":\n            throw await deserializeAws_restXmlTooManyDistributionsAssociatedToCachePolicyResponse(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n            throw await deserializeAws_restXmlTooManyDistributionsAssociatedToFieldLevelEncryptionConfigResponse(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToKeyGroup\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToKeyGroup\":\n            throw await deserializeAws_restXmlTooManyDistributionsAssociatedToKeyGroupResponse(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToOriginRequestPolicy\":\n            throw await deserializeAws_restXmlTooManyDistributionsAssociatedToOriginRequestPolicyResponse(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlTooManyDistributionsAssociatedToResponseHeadersPolicyResponse(parsedOutput, context);\n        case \"TooManyDistributionsWithFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithFunctionAssociations\":\n            throw await deserializeAws_restXmlTooManyDistributionsWithFunctionAssociationsResponse(parsedOutput, context);\n        case \"TooManyDistributionsWithLambdaAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithLambdaAssociations\":\n            throw await deserializeAws_restXmlTooManyDistributionsWithLambdaAssociationsResponse(parsedOutput, context);\n        case \"TooManyDistributionsWithSingleFunctionARN\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithSingleFunctionARN\":\n            throw await deserializeAws_restXmlTooManyDistributionsWithSingleFunctionARNResponse(parsedOutput, context);\n        case \"TooManyFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyFunctionAssociations\":\n            throw await deserializeAws_restXmlTooManyFunctionAssociationsResponse(parsedOutput, context);\n        case \"TooManyHeadersInForwardedValues\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInForwardedValues\":\n            throw await deserializeAws_restXmlTooManyHeadersInForwardedValuesResponse(parsedOutput, context);\n        case \"TooManyKeyGroupsAssociatedToDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyKeyGroupsAssociatedToDistribution\":\n            throw await deserializeAws_restXmlTooManyKeyGroupsAssociatedToDistributionResponse(parsedOutput, context);\n        case \"TooManyLambdaFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyLambdaFunctionAssociations\":\n            throw await deserializeAws_restXmlTooManyLambdaFunctionAssociationsResponse(parsedOutput, context);\n        case \"TooManyOriginCustomHeaders\":\n        case \"com.amazonaws.cloudfront#TooManyOriginCustomHeaders\":\n            throw await deserializeAws_restXmlTooManyOriginCustomHeadersResponse(parsedOutput, context);\n        case \"TooManyOriginGroupsPerDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyOriginGroupsPerDistribution\":\n            throw await deserializeAws_restXmlTooManyOriginGroupsPerDistributionResponse(parsedOutput, context);\n        case \"TooManyOrigins\":\n        case \"com.amazonaws.cloudfront#TooManyOrigins\":\n            throw await deserializeAws_restXmlTooManyOriginsResponse(parsedOutput, context);\n        case \"TooManyQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringParameters\":\n            throw await deserializeAws_restXmlTooManyQueryStringParametersResponse(parsedOutput, context);\n        case \"TooManyTrustedSigners\":\n        case \"com.amazonaws.cloudfront#TooManyTrustedSigners\":\n            throw await deserializeAws_restXmlTooManyTrustedSignersResponse(parsedOutput, context);\n        case \"TrustedKeyGroupDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedKeyGroupDoesNotExist\":\n            throw await deserializeAws_restXmlTrustedKeyGroupDoesNotExistResponse(parsedOutput, context);\n        case \"TrustedSignerDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedSignerDoesNotExist\":\n            throw await deserializeAws_restXmlTrustedSignerDoesNotExistResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreateDistributionWithTagsCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreateDistributionWithTagsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Distribution = deserializeAws_restXmlDistribution(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlCreateDistributionWithTagsCommand = deserializeAws_restXmlCreateDistributionWithTagsCommand;\nconst deserializeAws_restXmlCreateDistributionWithTagsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"CNAMEAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CNAMEAlreadyExists\":\n            throw await deserializeAws_restXmlCNAMEAlreadyExistsResponse(parsedOutput, context);\n        case \"DistributionAlreadyExists\":\n        case \"com.amazonaws.cloudfront#DistributionAlreadyExists\":\n            throw await deserializeAws_restXmlDistributionAlreadyExistsResponse(parsedOutput, context);\n        case \"IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n        case \"com.amazonaws.cloudfront#IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n            throw await deserializeAws_restXmlIllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidDefaultRootObject\":\n        case \"com.amazonaws.cloudfront#InvalidDefaultRootObject\":\n            throw await deserializeAws_restXmlInvalidDefaultRootObjectResponse(parsedOutput, context);\n        case \"InvalidErrorCode\":\n        case \"com.amazonaws.cloudfront#InvalidErrorCode\":\n            throw await deserializeAws_restXmlInvalidErrorCodeResponse(parsedOutput, context);\n        case \"InvalidForwardCookies\":\n        case \"com.amazonaws.cloudfront#InvalidForwardCookies\":\n            throw await deserializeAws_restXmlInvalidForwardCookiesResponse(parsedOutput, context);\n        case \"InvalidFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidFunctionAssociation\":\n            throw await deserializeAws_restXmlInvalidFunctionAssociationResponse(parsedOutput, context);\n        case \"InvalidGeoRestrictionParameter\":\n        case \"com.amazonaws.cloudfront#InvalidGeoRestrictionParameter\":\n            throw await deserializeAws_restXmlInvalidGeoRestrictionParameterResponse(parsedOutput, context);\n        case \"InvalidHeadersForS3Origin\":\n        case \"com.amazonaws.cloudfront#InvalidHeadersForS3Origin\":\n            throw await deserializeAws_restXmlInvalidHeadersForS3OriginResponse(parsedOutput, context);\n        case \"InvalidLambdaFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidLambdaFunctionAssociation\":\n            throw await deserializeAws_restXmlInvalidLambdaFunctionAssociationResponse(parsedOutput, context);\n        case \"InvalidLocationCode\":\n        case \"com.amazonaws.cloudfront#InvalidLocationCode\":\n            throw await deserializeAws_restXmlInvalidLocationCodeResponse(parsedOutput, context);\n        case \"InvalidMinimumProtocolVersion\":\n        case \"com.amazonaws.cloudfront#InvalidMinimumProtocolVersion\":\n            throw await deserializeAws_restXmlInvalidMinimumProtocolVersionResponse(parsedOutput, context);\n        case \"InvalidOrigin\":\n        case \"com.amazonaws.cloudfront#InvalidOrigin\":\n            throw await deserializeAws_restXmlInvalidOriginResponse(parsedOutput, context);\n        case \"InvalidOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessIdentity\":\n            throw await deserializeAws_restXmlInvalidOriginAccessIdentityResponse(parsedOutput, context);\n        case \"InvalidOriginKeepaliveTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginKeepaliveTimeout\":\n            throw await deserializeAws_restXmlInvalidOriginKeepaliveTimeoutResponse(parsedOutput, context);\n        case \"InvalidOriginReadTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginReadTimeout\":\n            throw await deserializeAws_restXmlInvalidOriginReadTimeoutResponse(parsedOutput, context);\n        case \"InvalidProtocolSettings\":\n        case \"com.amazonaws.cloudfront#InvalidProtocolSettings\":\n            throw await deserializeAws_restXmlInvalidProtocolSettingsResponse(parsedOutput, context);\n        case \"InvalidQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#InvalidQueryStringParameters\":\n            throw await deserializeAws_restXmlInvalidQueryStringParametersResponse(parsedOutput, context);\n        case \"InvalidRelativePath\":\n        case \"com.amazonaws.cloudfront#InvalidRelativePath\":\n            throw await deserializeAws_restXmlInvalidRelativePathResponse(parsedOutput, context);\n        case \"InvalidRequiredProtocol\":\n        case \"com.amazonaws.cloudfront#InvalidRequiredProtocol\":\n            throw await deserializeAws_restXmlInvalidRequiredProtocolResponse(parsedOutput, context);\n        case \"InvalidResponseCode\":\n        case \"com.amazonaws.cloudfront#InvalidResponseCode\":\n            throw await deserializeAws_restXmlInvalidResponseCodeResponse(parsedOutput, context);\n        case \"InvalidTagging\":\n        case \"com.amazonaws.cloudfront#InvalidTagging\":\n            throw await deserializeAws_restXmlInvalidTaggingResponse(parsedOutput, context);\n        case \"InvalidTTLOrder\":\n        case \"com.amazonaws.cloudfront#InvalidTTLOrder\":\n            throw await deserializeAws_restXmlInvalidTTLOrderResponse(parsedOutput, context);\n        case \"InvalidViewerCertificate\":\n        case \"com.amazonaws.cloudfront#InvalidViewerCertificate\":\n            throw await deserializeAws_restXmlInvalidViewerCertificateResponse(parsedOutput, context);\n        case \"InvalidWebACLId\":\n        case \"com.amazonaws.cloudfront#InvalidWebACLId\":\n            throw await deserializeAws_restXmlInvalidWebACLIdResponse(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await deserializeAws_restXmlMissingBodyResponse(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await deserializeAws_restXmlNoSuchCachePolicyResponse(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await deserializeAws_restXmlNoSuchFieldLevelEncryptionConfigResponse(parsedOutput, context);\n        case \"NoSuchOrigin\":\n        case \"com.amazonaws.cloudfront#NoSuchOrigin\":\n            throw await deserializeAws_restXmlNoSuchOriginResponse(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await deserializeAws_restXmlNoSuchOriginRequestPolicyResponse(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await deserializeAws_restXmlNoSuchRealtimeLogConfigResponse(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlNoSuchResponseHeadersPolicyResponse(parsedOutput, context);\n        case \"RealtimeLogConfigOwnerMismatch\":\n        case \"com.amazonaws.cloudfront#RealtimeLogConfigOwnerMismatch\":\n            throw await deserializeAws_restXmlRealtimeLogConfigOwnerMismatchResponse(parsedOutput, context);\n        case \"TooManyCacheBehaviors\":\n        case \"com.amazonaws.cloudfront#TooManyCacheBehaviors\":\n            throw await deserializeAws_restXmlTooManyCacheBehaviorsResponse(parsedOutput, context);\n        case \"TooManyCertificates\":\n        case \"com.amazonaws.cloudfront#TooManyCertificates\":\n            throw await deserializeAws_restXmlTooManyCertificatesResponse(parsedOutput, context);\n        case \"TooManyCookieNamesInWhiteList\":\n        case \"com.amazonaws.cloudfront#TooManyCookieNamesInWhiteList\":\n            throw await deserializeAws_restXmlTooManyCookieNamesInWhiteListResponse(parsedOutput, context);\n        case \"TooManyDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionCNAMEs\":\n            throw await deserializeAws_restXmlTooManyDistributionCNAMEsResponse(parsedOutput, context);\n        case \"TooManyDistributions\":\n        case \"com.amazonaws.cloudfront#TooManyDistributions\":\n            throw await deserializeAws_restXmlTooManyDistributionsResponse(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToCachePolicy\":\n            throw await deserializeAws_restXmlTooManyDistributionsAssociatedToCachePolicyResponse(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n            throw await deserializeAws_restXmlTooManyDistributionsAssociatedToFieldLevelEncryptionConfigResponse(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToKeyGroup\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToKeyGroup\":\n            throw await deserializeAws_restXmlTooManyDistributionsAssociatedToKeyGroupResponse(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToOriginRequestPolicy\":\n            throw await deserializeAws_restXmlTooManyDistributionsAssociatedToOriginRequestPolicyResponse(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlTooManyDistributionsAssociatedToResponseHeadersPolicyResponse(parsedOutput, context);\n        case \"TooManyDistributionsWithFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithFunctionAssociations\":\n            throw await deserializeAws_restXmlTooManyDistributionsWithFunctionAssociationsResponse(parsedOutput, context);\n        case \"TooManyDistributionsWithLambdaAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithLambdaAssociations\":\n            throw await deserializeAws_restXmlTooManyDistributionsWithLambdaAssociationsResponse(parsedOutput, context);\n        case \"TooManyDistributionsWithSingleFunctionARN\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithSingleFunctionARN\":\n            throw await deserializeAws_restXmlTooManyDistributionsWithSingleFunctionARNResponse(parsedOutput, context);\n        case \"TooManyFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyFunctionAssociations\":\n            throw await deserializeAws_restXmlTooManyFunctionAssociationsResponse(parsedOutput, context);\n        case \"TooManyHeadersInForwardedValues\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInForwardedValues\":\n            throw await deserializeAws_restXmlTooManyHeadersInForwardedValuesResponse(parsedOutput, context);\n        case \"TooManyKeyGroupsAssociatedToDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyKeyGroupsAssociatedToDistribution\":\n            throw await deserializeAws_restXmlTooManyKeyGroupsAssociatedToDistributionResponse(parsedOutput, context);\n        case \"TooManyLambdaFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyLambdaFunctionAssociations\":\n            throw await deserializeAws_restXmlTooManyLambdaFunctionAssociationsResponse(parsedOutput, context);\n        case \"TooManyOriginCustomHeaders\":\n        case \"com.amazonaws.cloudfront#TooManyOriginCustomHeaders\":\n            throw await deserializeAws_restXmlTooManyOriginCustomHeadersResponse(parsedOutput, context);\n        case \"TooManyOriginGroupsPerDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyOriginGroupsPerDistribution\":\n            throw await deserializeAws_restXmlTooManyOriginGroupsPerDistributionResponse(parsedOutput, context);\n        case \"TooManyOrigins\":\n        case \"com.amazonaws.cloudfront#TooManyOrigins\":\n            throw await deserializeAws_restXmlTooManyOriginsResponse(parsedOutput, context);\n        case \"TooManyQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringParameters\":\n            throw await deserializeAws_restXmlTooManyQueryStringParametersResponse(parsedOutput, context);\n        case \"TooManyTrustedSigners\":\n        case \"com.amazonaws.cloudfront#TooManyTrustedSigners\":\n            throw await deserializeAws_restXmlTooManyTrustedSignersResponse(parsedOutput, context);\n        case \"TrustedKeyGroupDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedKeyGroupDoesNotExist\":\n            throw await deserializeAws_restXmlTrustedKeyGroupDoesNotExistResponse(parsedOutput, context);\n        case \"TrustedSignerDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedSignerDoesNotExist\":\n            throw await deserializeAws_restXmlTrustedSignerDoesNotExistResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreateFieldLevelEncryptionConfigCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreateFieldLevelEncryptionConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryption = deserializeAws_restXmlFieldLevelEncryption(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlCreateFieldLevelEncryptionConfigCommand = deserializeAws_restXmlCreateFieldLevelEncryptionConfigCommand;\nconst deserializeAws_restXmlCreateFieldLevelEncryptionConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"FieldLevelEncryptionConfigAlreadyExists\":\n        case \"com.amazonaws.cloudfront#FieldLevelEncryptionConfigAlreadyExists\":\n            throw await deserializeAws_restXmlFieldLevelEncryptionConfigAlreadyExistsResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionProfile\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionProfile\":\n            throw await deserializeAws_restXmlNoSuchFieldLevelEncryptionProfileResponse(parsedOutput, context);\n        case \"QueryArgProfileEmpty\":\n        case \"com.amazonaws.cloudfront#QueryArgProfileEmpty\":\n            throw await deserializeAws_restXmlQueryArgProfileEmptyResponse(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionConfigs\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionConfigs\":\n            throw await deserializeAws_restXmlTooManyFieldLevelEncryptionConfigsResponse(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionContentTypeProfiles\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionContentTypeProfiles\":\n            throw await deserializeAws_restXmlTooManyFieldLevelEncryptionContentTypeProfilesResponse(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionQueryArgProfiles\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionQueryArgProfiles\":\n            throw await deserializeAws_restXmlTooManyFieldLevelEncryptionQueryArgProfilesResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreateFieldLevelEncryptionProfileCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreateFieldLevelEncryptionProfileCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryptionProfile = deserializeAws_restXmlFieldLevelEncryptionProfile(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlCreateFieldLevelEncryptionProfileCommand = deserializeAws_restXmlCreateFieldLevelEncryptionProfileCommand;\nconst deserializeAws_restXmlCreateFieldLevelEncryptionProfileCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"FieldLevelEncryptionProfileAlreadyExists\":\n        case \"com.amazonaws.cloudfront#FieldLevelEncryptionProfileAlreadyExists\":\n            throw await deserializeAws_restXmlFieldLevelEncryptionProfileAlreadyExistsResponse(parsedOutput, context);\n        case \"FieldLevelEncryptionProfileSizeExceeded\":\n        case \"com.amazonaws.cloudfront#FieldLevelEncryptionProfileSizeExceeded\":\n            throw await deserializeAws_restXmlFieldLevelEncryptionProfileSizeExceededResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchPublicKey\":\n        case \"com.amazonaws.cloudfront#NoSuchPublicKey\":\n            throw await deserializeAws_restXmlNoSuchPublicKeyResponse(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionEncryptionEntities\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionEncryptionEntities\":\n            throw await deserializeAws_restXmlTooManyFieldLevelEncryptionEncryptionEntitiesResponse(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionFieldPatterns\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionFieldPatterns\":\n            throw await deserializeAws_restXmlTooManyFieldLevelEncryptionFieldPatternsResponse(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionProfiles\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionProfiles\":\n            throw await deserializeAws_restXmlTooManyFieldLevelEncryptionProfilesResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreateFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreateFunctionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FunctionSummary = deserializeAws_restXmlFunctionSummary(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlCreateFunctionCommand = deserializeAws_restXmlCreateFunctionCommand;\nconst deserializeAws_restXmlCreateFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"FunctionAlreadyExists\":\n        case \"com.amazonaws.cloudfront#FunctionAlreadyExists\":\n            throw await deserializeAws_restXmlFunctionAlreadyExistsResponse(parsedOutput, context);\n        case \"FunctionSizeLimitExceeded\":\n        case \"com.amazonaws.cloudfront#FunctionSizeLimitExceeded\":\n            throw await deserializeAws_restXmlFunctionSizeLimitExceededResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"TooManyFunctions\":\n        case \"com.amazonaws.cloudfront#TooManyFunctions\":\n            throw await deserializeAws_restXmlTooManyFunctionsResponse(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await deserializeAws_restXmlUnsupportedOperationResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreateInvalidationCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreateInvalidationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Invalidation = deserializeAws_restXmlInvalidation(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlCreateInvalidationCommand = deserializeAws_restXmlCreateInvalidationCommand;\nconst deserializeAws_restXmlCreateInvalidationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"BatchTooLarge\":\n        case \"com.amazonaws.cloudfront#BatchTooLarge\":\n            throw await deserializeAws_restXmlBatchTooLargeResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await deserializeAws_restXmlMissingBodyResponse(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await deserializeAws_restXmlNoSuchDistributionResponse(parsedOutput, context);\n        case \"TooManyInvalidationsInProgress\":\n        case \"com.amazonaws.cloudfront#TooManyInvalidationsInProgress\":\n            throw await deserializeAws_restXmlTooManyInvalidationsInProgressResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreateKeyGroupCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreateKeyGroupCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.KeyGroup = deserializeAws_restXmlKeyGroup(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlCreateKeyGroupCommand = deserializeAws_restXmlCreateKeyGroupCommand;\nconst deserializeAws_restXmlCreateKeyGroupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"KeyGroupAlreadyExists\":\n        case \"com.amazonaws.cloudfront#KeyGroupAlreadyExists\":\n            throw await deserializeAws_restXmlKeyGroupAlreadyExistsResponse(parsedOutput, context);\n        case \"TooManyKeyGroups\":\n        case \"com.amazonaws.cloudfront#TooManyKeyGroups\":\n            throw await deserializeAws_restXmlTooManyKeyGroupsResponse(parsedOutput, context);\n        case \"TooManyPublicKeysInKeyGroup\":\n        case \"com.amazonaws.cloudfront#TooManyPublicKeysInKeyGroup\":\n            throw await deserializeAws_restXmlTooManyPublicKeysInKeyGroupResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreateMonitoringSubscriptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreateMonitoringSubscriptionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.MonitoringSubscription = deserializeAws_restXmlMonitoringSubscription(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlCreateMonitoringSubscriptionCommand = deserializeAws_restXmlCreateMonitoringSubscriptionCommand;\nconst deserializeAws_restXmlCreateMonitoringSubscriptionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await deserializeAws_restXmlNoSuchDistributionResponse(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await deserializeAws_restXmlUnsupportedOperationResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreateOriginRequestPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreateOriginRequestPolicyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OriginRequestPolicy = deserializeAws_restXmlOriginRequestPolicy(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlCreateOriginRequestPolicyCommand = deserializeAws_restXmlCreateOriginRequestPolicyCommand;\nconst deserializeAws_restXmlCreateOriginRequestPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"OriginRequestPolicyAlreadyExists\":\n        case \"com.amazonaws.cloudfront#OriginRequestPolicyAlreadyExists\":\n            throw await deserializeAws_restXmlOriginRequestPolicyAlreadyExistsResponse(parsedOutput, context);\n        case \"TooManyCookiesInOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyCookiesInOriginRequestPolicy\":\n            throw await deserializeAws_restXmlTooManyCookiesInOriginRequestPolicyResponse(parsedOutput, context);\n        case \"TooManyHeadersInOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInOriginRequestPolicy\":\n            throw await deserializeAws_restXmlTooManyHeadersInOriginRequestPolicyResponse(parsedOutput, context);\n        case \"TooManyOriginRequestPolicies\":\n        case \"com.amazonaws.cloudfront#TooManyOriginRequestPolicies\":\n            throw await deserializeAws_restXmlTooManyOriginRequestPoliciesResponse(parsedOutput, context);\n        case \"TooManyQueryStringsInOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringsInOriginRequestPolicy\":\n            throw await deserializeAws_restXmlTooManyQueryStringsInOriginRequestPolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreatePublicKeyCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreatePublicKeyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.PublicKey = deserializeAws_restXmlPublicKey(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlCreatePublicKeyCommand = deserializeAws_restXmlCreatePublicKeyCommand;\nconst deserializeAws_restXmlCreatePublicKeyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"PublicKeyAlreadyExists\":\n        case \"com.amazonaws.cloudfront#PublicKeyAlreadyExists\":\n            throw await deserializeAws_restXmlPublicKeyAlreadyExistsResponse(parsedOutput, context);\n        case \"TooManyPublicKeys\":\n        case \"com.amazonaws.cloudfront#TooManyPublicKeys\":\n            throw await deserializeAws_restXmlTooManyPublicKeysResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreateRealtimeLogConfigCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreateRealtimeLogConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"RealtimeLogConfig\"] !== undefined) {\n        contents.RealtimeLogConfig = deserializeAws_restXmlRealtimeLogConfig(data[\"RealtimeLogConfig\"], context);\n    }\n    return contents;\n};\nexports.deserializeAws_restXmlCreateRealtimeLogConfigCommand = deserializeAws_restXmlCreateRealtimeLogConfigCommand;\nconst deserializeAws_restXmlCreateRealtimeLogConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"RealtimeLogConfigAlreadyExists\":\n        case \"com.amazonaws.cloudfront#RealtimeLogConfigAlreadyExists\":\n            throw await deserializeAws_restXmlRealtimeLogConfigAlreadyExistsResponse(parsedOutput, context);\n        case \"TooManyRealtimeLogConfigs\":\n        case \"com.amazonaws.cloudfront#TooManyRealtimeLogConfigs\":\n            throw await deserializeAws_restXmlTooManyRealtimeLogConfigsResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreateResponseHeadersPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreateResponseHeadersPolicyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ResponseHeadersPolicy = deserializeAws_restXmlResponseHeadersPolicy(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlCreateResponseHeadersPolicyCommand = deserializeAws_restXmlCreateResponseHeadersPolicyCommand;\nconst deserializeAws_restXmlCreateResponseHeadersPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"ResponseHeadersPolicyAlreadyExists\":\n        case \"com.amazonaws.cloudfront#ResponseHeadersPolicyAlreadyExists\":\n            throw await deserializeAws_restXmlResponseHeadersPolicyAlreadyExistsResponse(parsedOutput, context);\n        case \"TooLongCSPInResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooLongCSPInResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlTooLongCSPInResponseHeadersPolicyResponse(parsedOutput, context);\n        case \"TooManyCustomHeadersInResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyCustomHeadersInResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlTooManyCustomHeadersInResponseHeadersPolicyResponse(parsedOutput, context);\n        case \"TooManyResponseHeadersPolicies\":\n        case \"com.amazonaws.cloudfront#TooManyResponseHeadersPolicies\":\n            throw await deserializeAws_restXmlTooManyResponseHeadersPoliciesResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreateStreamingDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreateStreamingDistributionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.StreamingDistribution = deserializeAws_restXmlStreamingDistribution(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlCreateStreamingDistributionCommand = deserializeAws_restXmlCreateStreamingDistributionCommand;\nconst deserializeAws_restXmlCreateStreamingDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"CNAMEAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CNAMEAlreadyExists\":\n            throw await deserializeAws_restXmlCNAMEAlreadyExistsResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidOrigin\":\n        case \"com.amazonaws.cloudfront#InvalidOrigin\":\n            throw await deserializeAws_restXmlInvalidOriginResponse(parsedOutput, context);\n        case \"InvalidOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessIdentity\":\n            throw await deserializeAws_restXmlInvalidOriginAccessIdentityResponse(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await deserializeAws_restXmlMissingBodyResponse(parsedOutput, context);\n        case \"StreamingDistributionAlreadyExists\":\n        case \"com.amazonaws.cloudfront#StreamingDistributionAlreadyExists\":\n            throw await deserializeAws_restXmlStreamingDistributionAlreadyExistsResponse(parsedOutput, context);\n        case \"TooManyStreamingDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyStreamingDistributionCNAMEs\":\n            throw await deserializeAws_restXmlTooManyStreamingDistributionCNAMEsResponse(parsedOutput, context);\n        case \"TooManyStreamingDistributions\":\n        case \"com.amazonaws.cloudfront#TooManyStreamingDistributions\":\n            throw await deserializeAws_restXmlTooManyStreamingDistributionsResponse(parsedOutput, context);\n        case \"TooManyTrustedSigners\":\n        case \"com.amazonaws.cloudfront#TooManyTrustedSigners\":\n            throw await deserializeAws_restXmlTooManyTrustedSignersResponse(parsedOutput, context);\n        case \"TrustedSignerDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedSignerDoesNotExist\":\n            throw await deserializeAws_restXmlTrustedSignerDoesNotExistResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlCreateStreamingDistributionWithTagsCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restXmlCreateStreamingDistributionWithTagsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        Location: [, output.headers[\"location\"]],\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.StreamingDistribution = deserializeAws_restXmlStreamingDistribution(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlCreateStreamingDistributionWithTagsCommand = deserializeAws_restXmlCreateStreamingDistributionWithTagsCommand;\nconst deserializeAws_restXmlCreateStreamingDistributionWithTagsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"CNAMEAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CNAMEAlreadyExists\":\n            throw await deserializeAws_restXmlCNAMEAlreadyExistsResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidOrigin\":\n        case \"com.amazonaws.cloudfront#InvalidOrigin\":\n            throw await deserializeAws_restXmlInvalidOriginResponse(parsedOutput, context);\n        case \"InvalidOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessIdentity\":\n            throw await deserializeAws_restXmlInvalidOriginAccessIdentityResponse(parsedOutput, context);\n        case \"InvalidTagging\":\n        case \"com.amazonaws.cloudfront#InvalidTagging\":\n            throw await deserializeAws_restXmlInvalidTaggingResponse(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await deserializeAws_restXmlMissingBodyResponse(parsedOutput, context);\n        case \"StreamingDistributionAlreadyExists\":\n        case \"com.amazonaws.cloudfront#StreamingDistributionAlreadyExists\":\n            throw await deserializeAws_restXmlStreamingDistributionAlreadyExistsResponse(parsedOutput, context);\n        case \"TooManyStreamingDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyStreamingDistributionCNAMEs\":\n            throw await deserializeAws_restXmlTooManyStreamingDistributionCNAMEsResponse(parsedOutput, context);\n        case \"TooManyStreamingDistributions\":\n        case \"com.amazonaws.cloudfront#TooManyStreamingDistributions\":\n            throw await deserializeAws_restXmlTooManyStreamingDistributionsResponse(parsedOutput, context);\n        case \"TooManyTrustedSigners\":\n        case \"com.amazonaws.cloudfront#TooManyTrustedSigners\":\n            throw await deserializeAws_restXmlTooManyTrustedSignersResponse(parsedOutput, context);\n        case \"TrustedSignerDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedSignerDoesNotExist\":\n            throw await deserializeAws_restXmlTrustedSignerDoesNotExistResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlDeleteCachePolicyCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restXmlDeleteCachePolicyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlDeleteCachePolicyCommand = deserializeAws_restXmlDeleteCachePolicyCommand;\nconst deserializeAws_restXmlDeleteCachePolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"CachePolicyInUse\":\n        case \"com.amazonaws.cloudfront#CachePolicyInUse\":\n            throw await deserializeAws_restXmlCachePolicyInUseResponse(parsedOutput, context);\n        case \"IllegalDelete\":\n        case \"com.amazonaws.cloudfront#IllegalDelete\":\n            throw await deserializeAws_restXmlIllegalDeleteResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await deserializeAws_restXmlNoSuchCachePolicyResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlDeleteCloudFrontOriginAccessIdentityCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restXmlDeleteCloudFrontOriginAccessIdentityCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlDeleteCloudFrontOriginAccessIdentityCommand = deserializeAws_restXmlDeleteCloudFrontOriginAccessIdentityCommand;\nconst deserializeAws_restXmlDeleteCloudFrontOriginAccessIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"CloudFrontOriginAccessIdentityInUse\":\n        case \"com.amazonaws.cloudfront#CloudFrontOriginAccessIdentityInUse\":\n            throw await deserializeAws_restXmlCloudFrontOriginAccessIdentityInUseResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchCloudFrontOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#NoSuchCloudFrontOriginAccessIdentity\":\n            throw await deserializeAws_restXmlNoSuchCloudFrontOriginAccessIdentityResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlDeleteDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restXmlDeleteDistributionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlDeleteDistributionCommand = deserializeAws_restXmlDeleteDistributionCommand;\nconst deserializeAws_restXmlDeleteDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"DistributionNotDisabled\":\n        case \"com.amazonaws.cloudfront#DistributionNotDisabled\":\n            throw await deserializeAws_restXmlDistributionNotDisabledResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await deserializeAws_restXmlNoSuchDistributionResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlDeleteFieldLevelEncryptionConfigCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restXmlDeleteFieldLevelEncryptionConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlDeleteFieldLevelEncryptionConfigCommand = deserializeAws_restXmlDeleteFieldLevelEncryptionConfigCommand;\nconst deserializeAws_restXmlDeleteFieldLevelEncryptionConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"FieldLevelEncryptionConfigInUse\":\n        case \"com.amazonaws.cloudfront#FieldLevelEncryptionConfigInUse\":\n            throw await deserializeAws_restXmlFieldLevelEncryptionConfigInUseResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await deserializeAws_restXmlNoSuchFieldLevelEncryptionConfigResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlDeleteFieldLevelEncryptionProfileCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restXmlDeleteFieldLevelEncryptionProfileCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlDeleteFieldLevelEncryptionProfileCommand = deserializeAws_restXmlDeleteFieldLevelEncryptionProfileCommand;\nconst deserializeAws_restXmlDeleteFieldLevelEncryptionProfileCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"FieldLevelEncryptionProfileInUse\":\n        case \"com.amazonaws.cloudfront#FieldLevelEncryptionProfileInUse\":\n            throw await deserializeAws_restXmlFieldLevelEncryptionProfileInUseResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionProfile\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionProfile\":\n            throw await deserializeAws_restXmlNoSuchFieldLevelEncryptionProfileResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlDeleteFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restXmlDeleteFunctionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlDeleteFunctionCommand = deserializeAws_restXmlDeleteFunctionCommand;\nconst deserializeAws_restXmlDeleteFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"FunctionInUse\":\n        case \"com.amazonaws.cloudfront#FunctionInUse\":\n            throw await deserializeAws_restXmlFunctionInUseResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchFunctionExists\":\n        case \"com.amazonaws.cloudfront#NoSuchFunctionExists\":\n            throw await deserializeAws_restXmlNoSuchFunctionExistsResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await deserializeAws_restXmlUnsupportedOperationResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlDeleteKeyGroupCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restXmlDeleteKeyGroupCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlDeleteKeyGroupCommand = deserializeAws_restXmlDeleteKeyGroupCommand;\nconst deserializeAws_restXmlDeleteKeyGroupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await deserializeAws_restXmlNoSuchResourceResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        case \"ResourceInUse\":\n        case \"com.amazonaws.cloudfront#ResourceInUse\":\n            throw await deserializeAws_restXmlResourceInUseResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlDeleteMonitoringSubscriptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlDeleteMonitoringSubscriptionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlDeleteMonitoringSubscriptionCommand = deserializeAws_restXmlDeleteMonitoringSubscriptionCommand;\nconst deserializeAws_restXmlDeleteMonitoringSubscriptionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await deserializeAws_restXmlNoSuchDistributionResponse(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await deserializeAws_restXmlUnsupportedOperationResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlDeleteOriginRequestPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restXmlDeleteOriginRequestPolicyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlDeleteOriginRequestPolicyCommand = deserializeAws_restXmlDeleteOriginRequestPolicyCommand;\nconst deserializeAws_restXmlDeleteOriginRequestPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"IllegalDelete\":\n        case \"com.amazonaws.cloudfront#IllegalDelete\":\n            throw await deserializeAws_restXmlIllegalDeleteResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await deserializeAws_restXmlNoSuchOriginRequestPolicyResponse(parsedOutput, context);\n        case \"OriginRequestPolicyInUse\":\n        case \"com.amazonaws.cloudfront#OriginRequestPolicyInUse\":\n            throw await deserializeAws_restXmlOriginRequestPolicyInUseResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlDeletePublicKeyCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restXmlDeletePublicKeyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlDeletePublicKeyCommand = deserializeAws_restXmlDeletePublicKeyCommand;\nconst deserializeAws_restXmlDeletePublicKeyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchPublicKey\":\n        case \"com.amazonaws.cloudfront#NoSuchPublicKey\":\n            throw await deserializeAws_restXmlNoSuchPublicKeyResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        case \"PublicKeyInUse\":\n        case \"com.amazonaws.cloudfront#PublicKeyInUse\":\n            throw await deserializeAws_restXmlPublicKeyInUseResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlDeleteRealtimeLogConfigCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restXmlDeleteRealtimeLogConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlDeleteRealtimeLogConfigCommand = deserializeAws_restXmlDeleteRealtimeLogConfigCommand;\nconst deserializeAws_restXmlDeleteRealtimeLogConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await deserializeAws_restXmlNoSuchRealtimeLogConfigResponse(parsedOutput, context);\n        case \"RealtimeLogConfigInUse\":\n        case \"com.amazonaws.cloudfront#RealtimeLogConfigInUse\":\n            throw await deserializeAws_restXmlRealtimeLogConfigInUseResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlDeleteResponseHeadersPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restXmlDeleteResponseHeadersPolicyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlDeleteResponseHeadersPolicyCommand = deserializeAws_restXmlDeleteResponseHeadersPolicyCommand;\nconst deserializeAws_restXmlDeleteResponseHeadersPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"IllegalDelete\":\n        case \"com.amazonaws.cloudfront#IllegalDelete\":\n            throw await deserializeAws_restXmlIllegalDeleteResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlNoSuchResponseHeadersPolicyResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        case \"ResponseHeadersPolicyInUse\":\n        case \"com.amazonaws.cloudfront#ResponseHeadersPolicyInUse\":\n            throw await deserializeAws_restXmlResponseHeadersPolicyInUseResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlDeleteStreamingDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restXmlDeleteStreamingDistributionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlDeleteStreamingDistributionCommand = deserializeAws_restXmlDeleteStreamingDistributionCommand;\nconst deserializeAws_restXmlDeleteStreamingDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchStreamingDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchStreamingDistribution\":\n            throw await deserializeAws_restXmlNoSuchStreamingDistributionResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        case \"StreamingDistributionNotDisabled\":\n        case \"com.amazonaws.cloudfront#StreamingDistributionNotDisabled\":\n            throw await deserializeAws_restXmlStreamingDistributionNotDisabledResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlDescribeFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlDescribeFunctionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FunctionSummary = deserializeAws_restXmlFunctionSummary(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlDescribeFunctionCommand = deserializeAws_restXmlDescribeFunctionCommand;\nconst deserializeAws_restXmlDescribeFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchFunctionExists\":\n        case \"com.amazonaws.cloudfront#NoSuchFunctionExists\":\n            throw await deserializeAws_restXmlNoSuchFunctionExistsResponse(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await deserializeAws_restXmlUnsupportedOperationResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetCachePolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetCachePolicyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CachePolicy = deserializeAws_restXmlCachePolicy(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetCachePolicyCommand = deserializeAws_restXmlGetCachePolicyCommand;\nconst deserializeAws_restXmlGetCachePolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await deserializeAws_restXmlNoSuchCachePolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetCachePolicyConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetCachePolicyConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CachePolicyConfig = deserializeAws_restXmlCachePolicyConfig(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetCachePolicyConfigCommand = deserializeAws_restXmlGetCachePolicyConfigCommand;\nconst deserializeAws_restXmlGetCachePolicyConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await deserializeAws_restXmlNoSuchCachePolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetCloudFrontOriginAccessIdentityCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetCloudFrontOriginAccessIdentityCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CloudFrontOriginAccessIdentity = deserializeAws_restXmlCloudFrontOriginAccessIdentity(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetCloudFrontOriginAccessIdentityCommand = deserializeAws_restXmlGetCloudFrontOriginAccessIdentityCommand;\nconst deserializeAws_restXmlGetCloudFrontOriginAccessIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchCloudFrontOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#NoSuchCloudFrontOriginAccessIdentity\":\n            throw await deserializeAws_restXmlNoSuchCloudFrontOriginAccessIdentityResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetCloudFrontOriginAccessIdentityConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetCloudFrontOriginAccessIdentityConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CloudFrontOriginAccessIdentityConfig = deserializeAws_restXmlCloudFrontOriginAccessIdentityConfig(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetCloudFrontOriginAccessIdentityConfigCommand = deserializeAws_restXmlGetCloudFrontOriginAccessIdentityConfigCommand;\nconst deserializeAws_restXmlGetCloudFrontOriginAccessIdentityConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchCloudFrontOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#NoSuchCloudFrontOriginAccessIdentity\":\n            throw await deserializeAws_restXmlNoSuchCloudFrontOriginAccessIdentityResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetDistributionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Distribution = deserializeAws_restXmlDistribution(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetDistributionCommand = deserializeAws_restXmlGetDistributionCommand;\nconst deserializeAws_restXmlGetDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await deserializeAws_restXmlNoSuchDistributionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetDistributionConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetDistributionConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionConfig = deserializeAws_restXmlDistributionConfig(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetDistributionConfigCommand = deserializeAws_restXmlGetDistributionConfigCommand;\nconst deserializeAws_restXmlGetDistributionConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await deserializeAws_restXmlNoSuchDistributionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetFieldLevelEncryptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetFieldLevelEncryptionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryption = deserializeAws_restXmlFieldLevelEncryption(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetFieldLevelEncryptionCommand = deserializeAws_restXmlGetFieldLevelEncryptionCommand;\nconst deserializeAws_restXmlGetFieldLevelEncryptionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await deserializeAws_restXmlNoSuchFieldLevelEncryptionConfigResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetFieldLevelEncryptionConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetFieldLevelEncryptionConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryptionConfig = deserializeAws_restXmlFieldLevelEncryptionConfig(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetFieldLevelEncryptionConfigCommand = deserializeAws_restXmlGetFieldLevelEncryptionConfigCommand;\nconst deserializeAws_restXmlGetFieldLevelEncryptionConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await deserializeAws_restXmlNoSuchFieldLevelEncryptionConfigResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetFieldLevelEncryptionProfileCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetFieldLevelEncryptionProfileCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryptionProfile = deserializeAws_restXmlFieldLevelEncryptionProfile(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetFieldLevelEncryptionProfileCommand = deserializeAws_restXmlGetFieldLevelEncryptionProfileCommand;\nconst deserializeAws_restXmlGetFieldLevelEncryptionProfileCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionProfile\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionProfile\":\n            throw await deserializeAws_restXmlNoSuchFieldLevelEncryptionProfileResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetFieldLevelEncryptionProfileConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetFieldLevelEncryptionProfileConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryptionProfileConfig = deserializeAws_restXmlFieldLevelEncryptionProfileConfig(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetFieldLevelEncryptionProfileConfigCommand = deserializeAws_restXmlGetFieldLevelEncryptionProfileConfigCommand;\nconst deserializeAws_restXmlGetFieldLevelEncryptionProfileConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionProfile\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionProfile\":\n            throw await deserializeAws_restXmlNoSuchFieldLevelEncryptionProfileResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetFunctionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n        ContentType: [, output.headers[\"content-type\"]],\n    });\n    const data = await collectBody(output.body, context);\n    contents.FunctionCode = data;\n    return contents;\n};\nexports.deserializeAws_restXmlGetFunctionCommand = deserializeAws_restXmlGetFunctionCommand;\nconst deserializeAws_restXmlGetFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchFunctionExists\":\n        case \"com.amazonaws.cloudfront#NoSuchFunctionExists\":\n            throw await deserializeAws_restXmlNoSuchFunctionExistsResponse(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await deserializeAws_restXmlUnsupportedOperationResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetInvalidationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetInvalidationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Invalidation = deserializeAws_restXmlInvalidation(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetInvalidationCommand = deserializeAws_restXmlGetInvalidationCommand;\nconst deserializeAws_restXmlGetInvalidationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await deserializeAws_restXmlNoSuchDistributionResponse(parsedOutput, context);\n        case \"NoSuchInvalidation\":\n        case \"com.amazonaws.cloudfront#NoSuchInvalidation\":\n            throw await deserializeAws_restXmlNoSuchInvalidationResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetKeyGroupCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetKeyGroupCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.KeyGroup = deserializeAws_restXmlKeyGroup(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetKeyGroupCommand = deserializeAws_restXmlGetKeyGroupCommand;\nconst deserializeAws_restXmlGetKeyGroupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await deserializeAws_restXmlNoSuchResourceResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetKeyGroupConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetKeyGroupConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.KeyGroupConfig = deserializeAws_restXmlKeyGroupConfig(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetKeyGroupConfigCommand = deserializeAws_restXmlGetKeyGroupConfigCommand;\nconst deserializeAws_restXmlGetKeyGroupConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await deserializeAws_restXmlNoSuchResourceResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetMonitoringSubscriptionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetMonitoringSubscriptionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.MonitoringSubscription = deserializeAws_restXmlMonitoringSubscription(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetMonitoringSubscriptionCommand = deserializeAws_restXmlGetMonitoringSubscriptionCommand;\nconst deserializeAws_restXmlGetMonitoringSubscriptionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await deserializeAws_restXmlNoSuchDistributionResponse(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await deserializeAws_restXmlUnsupportedOperationResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetOriginRequestPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetOriginRequestPolicyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OriginRequestPolicy = deserializeAws_restXmlOriginRequestPolicy(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetOriginRequestPolicyCommand = deserializeAws_restXmlGetOriginRequestPolicyCommand;\nconst deserializeAws_restXmlGetOriginRequestPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await deserializeAws_restXmlNoSuchOriginRequestPolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetOriginRequestPolicyConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetOriginRequestPolicyConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OriginRequestPolicyConfig = deserializeAws_restXmlOriginRequestPolicyConfig(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetOriginRequestPolicyConfigCommand = deserializeAws_restXmlGetOriginRequestPolicyConfigCommand;\nconst deserializeAws_restXmlGetOriginRequestPolicyConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await deserializeAws_restXmlNoSuchOriginRequestPolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetPublicKeyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetPublicKeyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.PublicKey = deserializeAws_restXmlPublicKey(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetPublicKeyCommand = deserializeAws_restXmlGetPublicKeyCommand;\nconst deserializeAws_restXmlGetPublicKeyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchPublicKey\":\n        case \"com.amazonaws.cloudfront#NoSuchPublicKey\":\n            throw await deserializeAws_restXmlNoSuchPublicKeyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetPublicKeyConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetPublicKeyConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.PublicKeyConfig = deserializeAws_restXmlPublicKeyConfig(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetPublicKeyConfigCommand = deserializeAws_restXmlGetPublicKeyConfigCommand;\nconst deserializeAws_restXmlGetPublicKeyConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchPublicKey\":\n        case \"com.amazonaws.cloudfront#NoSuchPublicKey\":\n            throw await deserializeAws_restXmlNoSuchPublicKeyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetRealtimeLogConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetRealtimeLogConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"RealtimeLogConfig\"] !== undefined) {\n        contents.RealtimeLogConfig = deserializeAws_restXmlRealtimeLogConfig(data[\"RealtimeLogConfig\"], context);\n    }\n    return contents;\n};\nexports.deserializeAws_restXmlGetRealtimeLogConfigCommand = deserializeAws_restXmlGetRealtimeLogConfigCommand;\nconst deserializeAws_restXmlGetRealtimeLogConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await deserializeAws_restXmlNoSuchRealtimeLogConfigResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetResponseHeadersPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetResponseHeadersPolicyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ResponseHeadersPolicy = deserializeAws_restXmlResponseHeadersPolicy(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetResponseHeadersPolicyCommand = deserializeAws_restXmlGetResponseHeadersPolicyCommand;\nconst deserializeAws_restXmlGetResponseHeadersPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlNoSuchResponseHeadersPolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetResponseHeadersPolicyConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetResponseHeadersPolicyConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ResponseHeadersPolicyConfig = deserializeAws_restXmlResponseHeadersPolicyConfig(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetResponseHeadersPolicyConfigCommand = deserializeAws_restXmlGetResponseHeadersPolicyConfigCommand;\nconst deserializeAws_restXmlGetResponseHeadersPolicyConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlNoSuchResponseHeadersPolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetStreamingDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetStreamingDistributionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.StreamingDistribution = deserializeAws_restXmlStreamingDistribution(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetStreamingDistributionCommand = deserializeAws_restXmlGetStreamingDistributionCommand;\nconst deserializeAws_restXmlGetStreamingDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchStreamingDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchStreamingDistribution\":\n            throw await deserializeAws_restXmlNoSuchStreamingDistributionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlGetStreamingDistributionConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlGetStreamingDistributionConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.StreamingDistributionConfig = deserializeAws_restXmlStreamingDistributionConfig(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlGetStreamingDistributionConfigCommand = deserializeAws_restXmlGetStreamingDistributionConfigCommand;\nconst deserializeAws_restXmlGetStreamingDistributionConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"NoSuchStreamingDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchStreamingDistribution\":\n            throw await deserializeAws_restXmlNoSuchStreamingDistributionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListCachePoliciesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListCachePoliciesCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CachePolicyList = deserializeAws_restXmlCachePolicyList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListCachePoliciesCommand = deserializeAws_restXmlListCachePoliciesCommand;\nconst deserializeAws_restXmlListCachePoliciesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await deserializeAws_restXmlNoSuchCachePolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListCloudFrontOriginAccessIdentitiesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListCloudFrontOriginAccessIdentitiesCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CloudFrontOriginAccessIdentityList = deserializeAws_restXmlCloudFrontOriginAccessIdentityList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListCloudFrontOriginAccessIdentitiesCommand = deserializeAws_restXmlListCloudFrontOriginAccessIdentitiesCommand;\nconst deserializeAws_restXmlListCloudFrontOriginAccessIdentitiesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListConflictingAliasesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListConflictingAliasesCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ConflictingAliasesList = deserializeAws_restXmlConflictingAliasesList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListConflictingAliasesCommand = deserializeAws_restXmlListConflictingAliasesCommand;\nconst deserializeAws_restXmlListConflictingAliasesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await deserializeAws_restXmlNoSuchDistributionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListDistributionsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListDistributionsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionList = deserializeAws_restXmlDistributionList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListDistributionsCommand = deserializeAws_restXmlListDistributionsCommand;\nconst deserializeAws_restXmlListDistributionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListDistributionsByCachePolicyIdCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListDistributionsByCachePolicyIdCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionIdList = deserializeAws_restXmlDistributionIdList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListDistributionsByCachePolicyIdCommand = deserializeAws_restXmlListDistributionsByCachePolicyIdCommand;\nconst deserializeAws_restXmlListDistributionsByCachePolicyIdCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await deserializeAws_restXmlNoSuchCachePolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListDistributionsByKeyGroupCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListDistributionsByKeyGroupCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionIdList = deserializeAws_restXmlDistributionIdList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListDistributionsByKeyGroupCommand = deserializeAws_restXmlListDistributionsByKeyGroupCommand;\nconst deserializeAws_restXmlListDistributionsByKeyGroupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await deserializeAws_restXmlNoSuchResourceResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListDistributionsByOriginRequestPolicyIdCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListDistributionsByOriginRequestPolicyIdCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionIdList = deserializeAws_restXmlDistributionIdList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListDistributionsByOriginRequestPolicyIdCommand = deserializeAws_restXmlListDistributionsByOriginRequestPolicyIdCommand;\nconst deserializeAws_restXmlListDistributionsByOriginRequestPolicyIdCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await deserializeAws_restXmlNoSuchOriginRequestPolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListDistributionsByRealtimeLogConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListDistributionsByRealtimeLogConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionList = deserializeAws_restXmlDistributionList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListDistributionsByRealtimeLogConfigCommand = deserializeAws_restXmlListDistributionsByRealtimeLogConfigCommand;\nconst deserializeAws_restXmlListDistributionsByRealtimeLogConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListDistributionsByResponseHeadersPolicyIdCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListDistributionsByResponseHeadersPolicyIdCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionIdList = deserializeAws_restXmlDistributionIdList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListDistributionsByResponseHeadersPolicyIdCommand = deserializeAws_restXmlListDistributionsByResponseHeadersPolicyIdCommand;\nconst deserializeAws_restXmlListDistributionsByResponseHeadersPolicyIdCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlNoSuchResponseHeadersPolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListDistributionsByWebACLIdCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListDistributionsByWebACLIdCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.DistributionList = deserializeAws_restXmlDistributionList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListDistributionsByWebACLIdCommand = deserializeAws_restXmlListDistributionsByWebACLIdCommand;\nconst deserializeAws_restXmlListDistributionsByWebACLIdCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidWebACLId\":\n        case \"com.amazonaws.cloudfront#InvalidWebACLId\":\n            throw await deserializeAws_restXmlInvalidWebACLIdResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListFieldLevelEncryptionConfigsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListFieldLevelEncryptionConfigsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryptionList = deserializeAws_restXmlFieldLevelEncryptionList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListFieldLevelEncryptionConfigsCommand = deserializeAws_restXmlListFieldLevelEncryptionConfigsCommand;\nconst deserializeAws_restXmlListFieldLevelEncryptionConfigsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListFieldLevelEncryptionProfilesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListFieldLevelEncryptionProfilesCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryptionProfileList = deserializeAws_restXmlFieldLevelEncryptionProfileList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListFieldLevelEncryptionProfilesCommand = deserializeAws_restXmlListFieldLevelEncryptionProfilesCommand;\nconst deserializeAws_restXmlListFieldLevelEncryptionProfilesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListFunctionsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListFunctionsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FunctionList = deserializeAws_restXmlFunctionList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListFunctionsCommand = deserializeAws_restXmlListFunctionsCommand;\nconst deserializeAws_restXmlListFunctionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await deserializeAws_restXmlUnsupportedOperationResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListInvalidationsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListInvalidationsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.InvalidationList = deserializeAws_restXmlInvalidationList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListInvalidationsCommand = deserializeAws_restXmlListInvalidationsCommand;\nconst deserializeAws_restXmlListInvalidationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await deserializeAws_restXmlNoSuchDistributionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListKeyGroupsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListKeyGroupsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.KeyGroupList = deserializeAws_restXmlKeyGroupList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListKeyGroupsCommand = deserializeAws_restXmlListKeyGroupsCommand;\nconst deserializeAws_restXmlListKeyGroupsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListOriginRequestPoliciesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListOriginRequestPoliciesCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OriginRequestPolicyList = deserializeAws_restXmlOriginRequestPolicyList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListOriginRequestPoliciesCommand = deserializeAws_restXmlListOriginRequestPoliciesCommand;\nconst deserializeAws_restXmlListOriginRequestPoliciesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await deserializeAws_restXmlNoSuchOriginRequestPolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListPublicKeysCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListPublicKeysCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.PublicKeyList = deserializeAws_restXmlPublicKeyList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListPublicKeysCommand = deserializeAws_restXmlListPublicKeysCommand;\nconst deserializeAws_restXmlListPublicKeysCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListRealtimeLogConfigsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListRealtimeLogConfigsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.RealtimeLogConfigs = deserializeAws_restXmlRealtimeLogConfigs(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListRealtimeLogConfigsCommand = deserializeAws_restXmlListRealtimeLogConfigsCommand;\nconst deserializeAws_restXmlListRealtimeLogConfigsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await deserializeAws_restXmlNoSuchRealtimeLogConfigResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListResponseHeadersPoliciesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListResponseHeadersPoliciesCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ResponseHeadersPolicyList = deserializeAws_restXmlResponseHeadersPolicyList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListResponseHeadersPoliciesCommand = deserializeAws_restXmlListResponseHeadersPoliciesCommand;\nconst deserializeAws_restXmlListResponseHeadersPoliciesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlNoSuchResponseHeadersPolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListStreamingDistributionsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListStreamingDistributionsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.StreamingDistributionList = deserializeAws_restXmlStreamingDistributionList(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListStreamingDistributionsCommand = deserializeAws_restXmlListStreamingDistributionsCommand;\nconst deserializeAws_restXmlListStreamingDistributionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlListTagsForResourceCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlListTagsForResourceCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Tags = deserializeAws_restXmlTags(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlListTagsForResourceCommand = deserializeAws_restXmlListTagsForResourceCommand;\nconst deserializeAws_restXmlListTagsForResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidTagging\":\n        case \"com.amazonaws.cloudfront#InvalidTagging\":\n            throw await deserializeAws_restXmlInvalidTaggingResponse(parsedOutput, context);\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await deserializeAws_restXmlNoSuchResourceResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlPublishFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlPublishFunctionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FunctionSummary = deserializeAws_restXmlFunctionSummary(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlPublishFunctionCommand = deserializeAws_restXmlPublishFunctionCommand;\nconst deserializeAws_restXmlPublishFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchFunctionExists\":\n        case \"com.amazonaws.cloudfront#NoSuchFunctionExists\":\n            throw await deserializeAws_restXmlNoSuchFunctionExistsResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await deserializeAws_restXmlUnsupportedOperationResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlTagResourceCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restXmlTagResourceCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlTagResourceCommand = deserializeAws_restXmlTagResourceCommand;\nconst deserializeAws_restXmlTagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidTagging\":\n        case \"com.amazonaws.cloudfront#InvalidTagging\":\n            throw await deserializeAws_restXmlInvalidTaggingResponse(parsedOutput, context);\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await deserializeAws_restXmlNoSuchResourceResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlTestFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlTestFunctionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.TestResult = deserializeAws_restXmlTestResult(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlTestFunctionCommand = deserializeAws_restXmlTestFunctionCommand;\nconst deserializeAws_restXmlTestFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchFunctionExists\":\n        case \"com.amazonaws.cloudfront#NoSuchFunctionExists\":\n            throw await deserializeAws_restXmlNoSuchFunctionExistsResponse(parsedOutput, context);\n        case \"TestFunctionFailed\":\n        case \"com.amazonaws.cloudfront#TestFunctionFailed\":\n            throw await deserializeAws_restXmlTestFunctionFailedResponse(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await deserializeAws_restXmlUnsupportedOperationResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlUntagResourceCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restXmlUntagResourceCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restXmlUntagResourceCommand = deserializeAws_restXmlUntagResourceCommand;\nconst deserializeAws_restXmlUntagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidTagging\":\n        case \"com.amazonaws.cloudfront#InvalidTagging\":\n            throw await deserializeAws_restXmlInvalidTaggingResponse(parsedOutput, context);\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await deserializeAws_restXmlNoSuchResourceResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlUpdateCachePolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlUpdateCachePolicyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CachePolicy = deserializeAws_restXmlCachePolicy(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlUpdateCachePolicyCommand = deserializeAws_restXmlUpdateCachePolicyCommand;\nconst deserializeAws_restXmlUpdateCachePolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"CachePolicyAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CachePolicyAlreadyExists\":\n            throw await deserializeAws_restXmlCachePolicyAlreadyExistsResponse(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await deserializeAws_restXmlIllegalUpdateResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await deserializeAws_restXmlNoSuchCachePolicyResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        case \"TooManyCookiesInCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyCookiesInCachePolicy\":\n            throw await deserializeAws_restXmlTooManyCookiesInCachePolicyResponse(parsedOutput, context);\n        case \"TooManyHeadersInCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInCachePolicy\":\n            throw await deserializeAws_restXmlTooManyHeadersInCachePolicyResponse(parsedOutput, context);\n        case \"TooManyQueryStringsInCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringsInCachePolicy\":\n            throw await deserializeAws_restXmlTooManyQueryStringsInCachePolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlUpdateCloudFrontOriginAccessIdentityCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlUpdateCloudFrontOriginAccessIdentityCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.CloudFrontOriginAccessIdentity = deserializeAws_restXmlCloudFrontOriginAccessIdentity(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlUpdateCloudFrontOriginAccessIdentityCommand = deserializeAws_restXmlUpdateCloudFrontOriginAccessIdentityCommand;\nconst deserializeAws_restXmlUpdateCloudFrontOriginAccessIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await deserializeAws_restXmlIllegalUpdateResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await deserializeAws_restXmlMissingBodyResponse(parsedOutput, context);\n        case \"NoSuchCloudFrontOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#NoSuchCloudFrontOriginAccessIdentity\":\n            throw await deserializeAws_restXmlNoSuchCloudFrontOriginAccessIdentityResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlUpdateDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlUpdateDistributionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.Distribution = deserializeAws_restXmlDistribution(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlUpdateDistributionCommand = deserializeAws_restXmlUpdateDistributionCommand;\nconst deserializeAws_restXmlUpdateDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"CNAMEAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CNAMEAlreadyExists\":\n            throw await deserializeAws_restXmlCNAMEAlreadyExistsResponse(parsedOutput, context);\n        case \"IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n        case \"com.amazonaws.cloudfront#IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior\":\n            throw await deserializeAws_restXmlIllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorResponse(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await deserializeAws_restXmlIllegalUpdateResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidDefaultRootObject\":\n        case \"com.amazonaws.cloudfront#InvalidDefaultRootObject\":\n            throw await deserializeAws_restXmlInvalidDefaultRootObjectResponse(parsedOutput, context);\n        case \"InvalidErrorCode\":\n        case \"com.amazonaws.cloudfront#InvalidErrorCode\":\n            throw await deserializeAws_restXmlInvalidErrorCodeResponse(parsedOutput, context);\n        case \"InvalidForwardCookies\":\n        case \"com.amazonaws.cloudfront#InvalidForwardCookies\":\n            throw await deserializeAws_restXmlInvalidForwardCookiesResponse(parsedOutput, context);\n        case \"InvalidFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidFunctionAssociation\":\n            throw await deserializeAws_restXmlInvalidFunctionAssociationResponse(parsedOutput, context);\n        case \"InvalidGeoRestrictionParameter\":\n        case \"com.amazonaws.cloudfront#InvalidGeoRestrictionParameter\":\n            throw await deserializeAws_restXmlInvalidGeoRestrictionParameterResponse(parsedOutput, context);\n        case \"InvalidHeadersForS3Origin\":\n        case \"com.amazonaws.cloudfront#InvalidHeadersForS3Origin\":\n            throw await deserializeAws_restXmlInvalidHeadersForS3OriginResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"InvalidLambdaFunctionAssociation\":\n        case \"com.amazonaws.cloudfront#InvalidLambdaFunctionAssociation\":\n            throw await deserializeAws_restXmlInvalidLambdaFunctionAssociationResponse(parsedOutput, context);\n        case \"InvalidLocationCode\":\n        case \"com.amazonaws.cloudfront#InvalidLocationCode\":\n            throw await deserializeAws_restXmlInvalidLocationCodeResponse(parsedOutput, context);\n        case \"InvalidMinimumProtocolVersion\":\n        case \"com.amazonaws.cloudfront#InvalidMinimumProtocolVersion\":\n            throw await deserializeAws_restXmlInvalidMinimumProtocolVersionResponse(parsedOutput, context);\n        case \"InvalidOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessIdentity\":\n            throw await deserializeAws_restXmlInvalidOriginAccessIdentityResponse(parsedOutput, context);\n        case \"InvalidOriginKeepaliveTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginKeepaliveTimeout\":\n            throw await deserializeAws_restXmlInvalidOriginKeepaliveTimeoutResponse(parsedOutput, context);\n        case \"InvalidOriginReadTimeout\":\n        case \"com.amazonaws.cloudfront#InvalidOriginReadTimeout\":\n            throw await deserializeAws_restXmlInvalidOriginReadTimeoutResponse(parsedOutput, context);\n        case \"InvalidQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#InvalidQueryStringParameters\":\n            throw await deserializeAws_restXmlInvalidQueryStringParametersResponse(parsedOutput, context);\n        case \"InvalidRelativePath\":\n        case \"com.amazonaws.cloudfront#InvalidRelativePath\":\n            throw await deserializeAws_restXmlInvalidRelativePathResponse(parsedOutput, context);\n        case \"InvalidRequiredProtocol\":\n        case \"com.amazonaws.cloudfront#InvalidRequiredProtocol\":\n            throw await deserializeAws_restXmlInvalidRequiredProtocolResponse(parsedOutput, context);\n        case \"InvalidResponseCode\":\n        case \"com.amazonaws.cloudfront#InvalidResponseCode\":\n            throw await deserializeAws_restXmlInvalidResponseCodeResponse(parsedOutput, context);\n        case \"InvalidTTLOrder\":\n        case \"com.amazonaws.cloudfront#InvalidTTLOrder\":\n            throw await deserializeAws_restXmlInvalidTTLOrderResponse(parsedOutput, context);\n        case \"InvalidViewerCertificate\":\n        case \"com.amazonaws.cloudfront#InvalidViewerCertificate\":\n            throw await deserializeAws_restXmlInvalidViewerCertificateResponse(parsedOutput, context);\n        case \"InvalidWebACLId\":\n        case \"com.amazonaws.cloudfront#InvalidWebACLId\":\n            throw await deserializeAws_restXmlInvalidWebACLIdResponse(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await deserializeAws_restXmlMissingBodyResponse(parsedOutput, context);\n        case \"NoSuchCachePolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchCachePolicy\":\n            throw await deserializeAws_restXmlNoSuchCachePolicyResponse(parsedOutput, context);\n        case \"NoSuchDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchDistribution\":\n            throw await deserializeAws_restXmlNoSuchDistributionResponse(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await deserializeAws_restXmlNoSuchFieldLevelEncryptionConfigResponse(parsedOutput, context);\n        case \"NoSuchOrigin\":\n        case \"com.amazonaws.cloudfront#NoSuchOrigin\":\n            throw await deserializeAws_restXmlNoSuchOriginResponse(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await deserializeAws_restXmlNoSuchOriginRequestPolicyResponse(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await deserializeAws_restXmlNoSuchRealtimeLogConfigResponse(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlNoSuchResponseHeadersPolicyResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        case \"RealtimeLogConfigOwnerMismatch\":\n        case \"com.amazonaws.cloudfront#RealtimeLogConfigOwnerMismatch\":\n            throw await deserializeAws_restXmlRealtimeLogConfigOwnerMismatchResponse(parsedOutput, context);\n        case \"TooManyCacheBehaviors\":\n        case \"com.amazonaws.cloudfront#TooManyCacheBehaviors\":\n            throw await deserializeAws_restXmlTooManyCacheBehaviorsResponse(parsedOutput, context);\n        case \"TooManyCertificates\":\n        case \"com.amazonaws.cloudfront#TooManyCertificates\":\n            throw await deserializeAws_restXmlTooManyCertificatesResponse(parsedOutput, context);\n        case \"TooManyCookieNamesInWhiteList\":\n        case \"com.amazonaws.cloudfront#TooManyCookieNamesInWhiteList\":\n            throw await deserializeAws_restXmlTooManyCookieNamesInWhiteListResponse(parsedOutput, context);\n        case \"TooManyDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionCNAMEs\":\n            throw await deserializeAws_restXmlTooManyDistributionCNAMEsResponse(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToCachePolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToCachePolicy\":\n            throw await deserializeAws_restXmlTooManyDistributionsAssociatedToCachePolicyResponse(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToFieldLevelEncryptionConfig\":\n            throw await deserializeAws_restXmlTooManyDistributionsAssociatedToFieldLevelEncryptionConfigResponse(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToKeyGroup\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToKeyGroup\":\n            throw await deserializeAws_restXmlTooManyDistributionsAssociatedToKeyGroupResponse(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToOriginRequestPolicy\":\n            throw await deserializeAws_restXmlTooManyDistributionsAssociatedToOriginRequestPolicyResponse(parsedOutput, context);\n        case \"TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsAssociatedToResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlTooManyDistributionsAssociatedToResponseHeadersPolicyResponse(parsedOutput, context);\n        case \"TooManyDistributionsWithFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithFunctionAssociations\":\n            throw await deserializeAws_restXmlTooManyDistributionsWithFunctionAssociationsResponse(parsedOutput, context);\n        case \"TooManyDistributionsWithLambdaAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithLambdaAssociations\":\n            throw await deserializeAws_restXmlTooManyDistributionsWithLambdaAssociationsResponse(parsedOutput, context);\n        case \"TooManyDistributionsWithSingleFunctionARN\":\n        case \"com.amazonaws.cloudfront#TooManyDistributionsWithSingleFunctionARN\":\n            throw await deserializeAws_restXmlTooManyDistributionsWithSingleFunctionARNResponse(parsedOutput, context);\n        case \"TooManyFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyFunctionAssociations\":\n            throw await deserializeAws_restXmlTooManyFunctionAssociationsResponse(parsedOutput, context);\n        case \"TooManyHeadersInForwardedValues\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInForwardedValues\":\n            throw await deserializeAws_restXmlTooManyHeadersInForwardedValuesResponse(parsedOutput, context);\n        case \"TooManyKeyGroupsAssociatedToDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyKeyGroupsAssociatedToDistribution\":\n            throw await deserializeAws_restXmlTooManyKeyGroupsAssociatedToDistributionResponse(parsedOutput, context);\n        case \"TooManyLambdaFunctionAssociations\":\n        case \"com.amazonaws.cloudfront#TooManyLambdaFunctionAssociations\":\n            throw await deserializeAws_restXmlTooManyLambdaFunctionAssociationsResponse(parsedOutput, context);\n        case \"TooManyOriginCustomHeaders\":\n        case \"com.amazonaws.cloudfront#TooManyOriginCustomHeaders\":\n            throw await deserializeAws_restXmlTooManyOriginCustomHeadersResponse(parsedOutput, context);\n        case \"TooManyOriginGroupsPerDistribution\":\n        case \"com.amazonaws.cloudfront#TooManyOriginGroupsPerDistribution\":\n            throw await deserializeAws_restXmlTooManyOriginGroupsPerDistributionResponse(parsedOutput, context);\n        case \"TooManyOrigins\":\n        case \"com.amazonaws.cloudfront#TooManyOrigins\":\n            throw await deserializeAws_restXmlTooManyOriginsResponse(parsedOutput, context);\n        case \"TooManyQueryStringParameters\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringParameters\":\n            throw await deserializeAws_restXmlTooManyQueryStringParametersResponse(parsedOutput, context);\n        case \"TooManyTrustedSigners\":\n        case \"com.amazonaws.cloudfront#TooManyTrustedSigners\":\n            throw await deserializeAws_restXmlTooManyTrustedSignersResponse(parsedOutput, context);\n        case \"TrustedKeyGroupDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedKeyGroupDoesNotExist\":\n            throw await deserializeAws_restXmlTrustedKeyGroupDoesNotExistResponse(parsedOutput, context);\n        case \"TrustedSignerDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedSignerDoesNotExist\":\n            throw await deserializeAws_restXmlTrustedSignerDoesNotExistResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlUpdateFieldLevelEncryptionConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlUpdateFieldLevelEncryptionConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryption = deserializeAws_restXmlFieldLevelEncryption(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlUpdateFieldLevelEncryptionConfigCommand = deserializeAws_restXmlUpdateFieldLevelEncryptionConfigCommand;\nconst deserializeAws_restXmlUpdateFieldLevelEncryptionConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await deserializeAws_restXmlIllegalUpdateResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionConfig\":\n            throw await deserializeAws_restXmlNoSuchFieldLevelEncryptionConfigResponse(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionProfile\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionProfile\":\n            throw await deserializeAws_restXmlNoSuchFieldLevelEncryptionProfileResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        case \"QueryArgProfileEmpty\":\n        case \"com.amazonaws.cloudfront#QueryArgProfileEmpty\":\n            throw await deserializeAws_restXmlQueryArgProfileEmptyResponse(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionContentTypeProfiles\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionContentTypeProfiles\":\n            throw await deserializeAws_restXmlTooManyFieldLevelEncryptionContentTypeProfilesResponse(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionQueryArgProfiles\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionQueryArgProfiles\":\n            throw await deserializeAws_restXmlTooManyFieldLevelEncryptionQueryArgProfilesResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlUpdateFieldLevelEncryptionProfileCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlUpdateFieldLevelEncryptionProfileCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FieldLevelEncryptionProfile = deserializeAws_restXmlFieldLevelEncryptionProfile(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlUpdateFieldLevelEncryptionProfileCommand = deserializeAws_restXmlUpdateFieldLevelEncryptionProfileCommand;\nconst deserializeAws_restXmlUpdateFieldLevelEncryptionProfileCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"FieldLevelEncryptionProfileAlreadyExists\":\n        case \"com.amazonaws.cloudfront#FieldLevelEncryptionProfileAlreadyExists\":\n            throw await deserializeAws_restXmlFieldLevelEncryptionProfileAlreadyExistsResponse(parsedOutput, context);\n        case \"FieldLevelEncryptionProfileSizeExceeded\":\n        case \"com.amazonaws.cloudfront#FieldLevelEncryptionProfileSizeExceeded\":\n            throw await deserializeAws_restXmlFieldLevelEncryptionProfileSizeExceededResponse(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await deserializeAws_restXmlIllegalUpdateResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchFieldLevelEncryptionProfile\":\n        case \"com.amazonaws.cloudfront#NoSuchFieldLevelEncryptionProfile\":\n            throw await deserializeAws_restXmlNoSuchFieldLevelEncryptionProfileResponse(parsedOutput, context);\n        case \"NoSuchPublicKey\":\n        case \"com.amazonaws.cloudfront#NoSuchPublicKey\":\n            throw await deserializeAws_restXmlNoSuchPublicKeyResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionEncryptionEntities\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionEncryptionEntities\":\n            throw await deserializeAws_restXmlTooManyFieldLevelEncryptionEncryptionEntitiesResponse(parsedOutput, context);\n        case \"TooManyFieldLevelEncryptionFieldPatterns\":\n        case \"com.amazonaws.cloudfront#TooManyFieldLevelEncryptionFieldPatterns\":\n            throw await deserializeAws_restXmlTooManyFieldLevelEncryptionFieldPatternsResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlUpdateFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlUpdateFunctionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"ettag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.FunctionSummary = deserializeAws_restXmlFunctionSummary(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlUpdateFunctionCommand = deserializeAws_restXmlUpdateFunctionCommand;\nconst deserializeAws_restXmlUpdateFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"FunctionSizeLimitExceeded\":\n        case \"com.amazonaws.cloudfront#FunctionSizeLimitExceeded\":\n            throw await deserializeAws_restXmlFunctionSizeLimitExceededResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchFunctionExists\":\n        case \"com.amazonaws.cloudfront#NoSuchFunctionExists\":\n            throw await deserializeAws_restXmlNoSuchFunctionExistsResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        case \"UnsupportedOperation\":\n        case \"com.amazonaws.cloudfront#UnsupportedOperation\":\n            throw await deserializeAws_restXmlUnsupportedOperationResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlUpdateKeyGroupCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlUpdateKeyGroupCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.KeyGroup = deserializeAws_restXmlKeyGroup(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlUpdateKeyGroupCommand = deserializeAws_restXmlUpdateKeyGroupCommand;\nconst deserializeAws_restXmlUpdateKeyGroupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"KeyGroupAlreadyExists\":\n        case \"com.amazonaws.cloudfront#KeyGroupAlreadyExists\":\n            throw await deserializeAws_restXmlKeyGroupAlreadyExistsResponse(parsedOutput, context);\n        case \"NoSuchResource\":\n        case \"com.amazonaws.cloudfront#NoSuchResource\":\n            throw await deserializeAws_restXmlNoSuchResourceResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        case \"TooManyPublicKeysInKeyGroup\":\n        case \"com.amazonaws.cloudfront#TooManyPublicKeysInKeyGroup\":\n            throw await deserializeAws_restXmlTooManyPublicKeysInKeyGroupResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlUpdateOriginRequestPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlUpdateOriginRequestPolicyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.OriginRequestPolicy = deserializeAws_restXmlOriginRequestPolicy(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlUpdateOriginRequestPolicyCommand = deserializeAws_restXmlUpdateOriginRequestPolicyCommand;\nconst deserializeAws_restXmlUpdateOriginRequestPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await deserializeAws_restXmlIllegalUpdateResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchOriginRequestPolicy\":\n            throw await deserializeAws_restXmlNoSuchOriginRequestPolicyResponse(parsedOutput, context);\n        case \"OriginRequestPolicyAlreadyExists\":\n        case \"com.amazonaws.cloudfront#OriginRequestPolicyAlreadyExists\":\n            throw await deserializeAws_restXmlOriginRequestPolicyAlreadyExistsResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        case \"TooManyCookiesInOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyCookiesInOriginRequestPolicy\":\n            throw await deserializeAws_restXmlTooManyCookiesInOriginRequestPolicyResponse(parsedOutput, context);\n        case \"TooManyHeadersInOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyHeadersInOriginRequestPolicy\":\n            throw await deserializeAws_restXmlTooManyHeadersInOriginRequestPolicyResponse(parsedOutput, context);\n        case \"TooManyQueryStringsInOriginRequestPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyQueryStringsInOriginRequestPolicy\":\n            throw await deserializeAws_restXmlTooManyQueryStringsInOriginRequestPolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlUpdatePublicKeyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlUpdatePublicKeyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.PublicKey = deserializeAws_restXmlPublicKey(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlUpdatePublicKeyCommand = deserializeAws_restXmlUpdatePublicKeyCommand;\nconst deserializeAws_restXmlUpdatePublicKeyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"CannotChangeImmutablePublicKeyFields\":\n        case \"com.amazonaws.cloudfront#CannotChangeImmutablePublicKeyFields\":\n            throw await deserializeAws_restXmlCannotChangeImmutablePublicKeyFieldsResponse(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await deserializeAws_restXmlIllegalUpdateResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchPublicKey\":\n        case \"com.amazonaws.cloudfront#NoSuchPublicKey\":\n            throw await deserializeAws_restXmlNoSuchPublicKeyResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlUpdateRealtimeLogConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlUpdateRealtimeLogConfigCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data[\"RealtimeLogConfig\"] !== undefined) {\n        contents.RealtimeLogConfig = deserializeAws_restXmlRealtimeLogConfig(data[\"RealtimeLogConfig\"], context);\n    }\n    return contents;\n};\nexports.deserializeAws_restXmlUpdateRealtimeLogConfigCommand = deserializeAws_restXmlUpdateRealtimeLogConfigCommand;\nconst deserializeAws_restXmlUpdateRealtimeLogConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"NoSuchRealtimeLogConfig\":\n        case \"com.amazonaws.cloudfront#NoSuchRealtimeLogConfig\":\n            throw await deserializeAws_restXmlNoSuchRealtimeLogConfigResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlUpdateResponseHeadersPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlUpdateResponseHeadersPolicyCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.ResponseHeadersPolicy = deserializeAws_restXmlResponseHeadersPolicy(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlUpdateResponseHeadersPolicyCommand = deserializeAws_restXmlUpdateResponseHeadersPolicyCommand;\nconst deserializeAws_restXmlUpdateResponseHeadersPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await deserializeAws_restXmlIllegalUpdateResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"NoSuchResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#NoSuchResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlNoSuchResponseHeadersPolicyResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        case \"ResponseHeadersPolicyAlreadyExists\":\n        case \"com.amazonaws.cloudfront#ResponseHeadersPolicyAlreadyExists\":\n            throw await deserializeAws_restXmlResponseHeadersPolicyAlreadyExistsResponse(parsedOutput, context);\n        case \"TooLongCSPInResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooLongCSPInResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlTooLongCSPInResponseHeadersPolicyResponse(parsedOutput, context);\n        case \"TooManyCustomHeadersInResponseHeadersPolicy\":\n        case \"com.amazonaws.cloudfront#TooManyCustomHeadersInResponseHeadersPolicy\":\n            throw await deserializeAws_restXmlTooManyCustomHeadersInResponseHeadersPolicyResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restXmlUpdateStreamingDistributionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restXmlUpdateStreamingDistributionCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        ETag: [, output.headers[\"etag\"]],\n    });\n    const data = (0, smithy_client_1.expectObject)(await parseBody(output.body, context));\n    contents.StreamingDistribution = deserializeAws_restXmlStreamingDistribution(data, context);\n    return contents;\n};\nexports.deserializeAws_restXmlUpdateStreamingDistributionCommand = deserializeAws_restXmlUpdateStreamingDistributionCommand;\nconst deserializeAws_restXmlUpdateStreamingDistributionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDenied\":\n        case \"com.amazonaws.cloudfront#AccessDenied\":\n            throw await deserializeAws_restXmlAccessDeniedResponse(parsedOutput, context);\n        case \"CNAMEAlreadyExists\":\n        case \"com.amazonaws.cloudfront#CNAMEAlreadyExists\":\n            throw await deserializeAws_restXmlCNAMEAlreadyExistsResponse(parsedOutput, context);\n        case \"IllegalUpdate\":\n        case \"com.amazonaws.cloudfront#IllegalUpdate\":\n            throw await deserializeAws_restXmlIllegalUpdateResponse(parsedOutput, context);\n        case \"InconsistentQuantities\":\n        case \"com.amazonaws.cloudfront#InconsistentQuantities\":\n            throw await deserializeAws_restXmlInconsistentQuantitiesResponse(parsedOutput, context);\n        case \"InvalidArgument\":\n        case \"com.amazonaws.cloudfront#InvalidArgument\":\n            throw await deserializeAws_restXmlInvalidArgumentResponse(parsedOutput, context);\n        case \"InvalidIfMatchVersion\":\n        case \"com.amazonaws.cloudfront#InvalidIfMatchVersion\":\n            throw await deserializeAws_restXmlInvalidIfMatchVersionResponse(parsedOutput, context);\n        case \"InvalidOriginAccessIdentity\":\n        case \"com.amazonaws.cloudfront#InvalidOriginAccessIdentity\":\n            throw await deserializeAws_restXmlInvalidOriginAccessIdentityResponse(parsedOutput, context);\n        case \"MissingBody\":\n        case \"com.amazonaws.cloudfront#MissingBody\":\n            throw await deserializeAws_restXmlMissingBodyResponse(parsedOutput, context);\n        case \"NoSuchStreamingDistribution\":\n        case \"com.amazonaws.cloudfront#NoSuchStreamingDistribution\":\n            throw await deserializeAws_restXmlNoSuchStreamingDistributionResponse(parsedOutput, context);\n        case \"PreconditionFailed\":\n        case \"com.amazonaws.cloudfront#PreconditionFailed\":\n            throw await deserializeAws_restXmlPreconditionFailedResponse(parsedOutput, context);\n        case \"TooManyStreamingDistributionCNAMEs\":\n        case \"com.amazonaws.cloudfront#TooManyStreamingDistributionCNAMEs\":\n            throw await deserializeAws_restXmlTooManyStreamingDistributionCNAMEsResponse(parsedOutput, context);\n        case \"TooManyTrustedSigners\":\n        case \"com.amazonaws.cloudfront#TooManyTrustedSigners\":\n            throw await deserializeAws_restXmlTooManyTrustedSignersResponse(parsedOutput, context);\n        case \"TrustedSignerDoesNotExist\":\n        case \"com.amazonaws.cloudfront#TrustedSignerDoesNotExist\":\n            throw await deserializeAws_restXmlTrustedSignerDoesNotExistResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: CloudFrontServiceException_1.CloudFrontServiceException,\n                errorCode,\n            });\n    }\n};\nconst map = smithy_client_1.map;\nconst deserializeAws_restXmlAccessDeniedResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.AccessDenied({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlBatchTooLargeResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.BatchTooLarge({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlCachePolicyAlreadyExistsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.CachePolicyAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlCachePolicyInUseResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.CachePolicyInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlCannotChangeImmutablePublicKeyFieldsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.CannotChangeImmutablePublicKeyFields({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlCloudFrontOriginAccessIdentityAlreadyExistsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.CloudFrontOriginAccessIdentityAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlCloudFrontOriginAccessIdentityInUseResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.CloudFrontOriginAccessIdentityInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlCNAMEAlreadyExistsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.CNAMEAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlDistributionAlreadyExistsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.DistributionAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlDistributionNotDisabledResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.DistributionNotDisabled({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlFieldLevelEncryptionConfigAlreadyExistsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.FieldLevelEncryptionConfigAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlFieldLevelEncryptionConfigInUseResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.FieldLevelEncryptionConfigInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlFieldLevelEncryptionProfileAlreadyExistsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.FieldLevelEncryptionProfileAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlFieldLevelEncryptionProfileInUseResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.FieldLevelEncryptionProfileInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlFieldLevelEncryptionProfileSizeExceededResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.FieldLevelEncryptionProfileSizeExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlFunctionAlreadyExistsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.FunctionAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlFunctionInUseResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.FunctionInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlFunctionSizeLimitExceededResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.FunctionSizeLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlIllegalDeleteResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.IllegalDelete({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlIllegalFieldLevelEncryptionConfigAssociationWithCacheBehaviorResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.IllegalFieldLevelEncryptionConfigAssociationWithCacheBehavior({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlIllegalUpdateResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.IllegalUpdate({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInconsistentQuantitiesResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InconsistentQuantities({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidArgumentResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidArgument({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidDefaultRootObjectResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidDefaultRootObject({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidErrorCodeResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidErrorCode({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidForwardCookiesResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidForwardCookies({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidFunctionAssociationResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidFunctionAssociation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidGeoRestrictionParameterResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidGeoRestrictionParameter({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidHeadersForS3OriginResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidHeadersForS3Origin({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidIfMatchVersionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidIfMatchVersion({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidLambdaFunctionAssociationResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidLambdaFunctionAssociation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidLocationCodeResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidLocationCode({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidMinimumProtocolVersionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidMinimumProtocolVersion({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidOriginResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidOrigin({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidOriginAccessIdentityResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidOriginAccessIdentity({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidOriginKeepaliveTimeoutResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidOriginKeepaliveTimeout({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidOriginReadTimeoutResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidOriginReadTimeout({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidProtocolSettingsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidProtocolSettings({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidQueryStringParametersResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidQueryStringParameters({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidRelativePathResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidRelativePath({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidRequiredProtocolResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidRequiredProtocol({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidResponseCodeResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidResponseCode({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidTaggingResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidTagging({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidTTLOrderResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidTTLOrder({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidViewerCertificateResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidViewerCertificate({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlInvalidWebACLIdResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.InvalidWebACLId({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlKeyGroupAlreadyExistsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.KeyGroupAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlMissingBodyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.MissingBody({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlNoSuchCachePolicyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchCachePolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlNoSuchCloudFrontOriginAccessIdentityResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchCloudFrontOriginAccessIdentity({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlNoSuchDistributionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchDistribution({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlNoSuchFieldLevelEncryptionConfigResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchFieldLevelEncryptionConfig({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlNoSuchFieldLevelEncryptionProfileResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchFieldLevelEncryptionProfile({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlNoSuchFunctionExistsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchFunctionExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlNoSuchInvalidationResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.NoSuchInvalidation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlNoSuchOriginResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchOrigin({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlNoSuchOriginRequestPolicyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchOriginRequestPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlNoSuchPublicKeyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchPublicKey({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlNoSuchRealtimeLogConfigResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchRealtimeLogConfig({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlNoSuchResourceResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchResource({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlNoSuchResponseHeadersPolicyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.NoSuchResponseHeadersPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlNoSuchStreamingDistributionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.NoSuchStreamingDistribution({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlOriginRequestPolicyAlreadyExistsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.OriginRequestPolicyAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlOriginRequestPolicyInUseResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.OriginRequestPolicyInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlPreconditionFailedResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.PreconditionFailed({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlPublicKeyAlreadyExistsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.PublicKeyAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlPublicKeyInUseResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.PublicKeyInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlQueryArgProfileEmptyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.QueryArgProfileEmpty({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlRealtimeLogConfigAlreadyExistsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.RealtimeLogConfigAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlRealtimeLogConfigInUseResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.RealtimeLogConfigInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlRealtimeLogConfigOwnerMismatchResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.RealtimeLogConfigOwnerMismatch({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlResourceInUseResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.ResourceInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlResponseHeadersPolicyAlreadyExistsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.ResponseHeadersPolicyAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlResponseHeadersPolicyInUseResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.ResponseHeadersPolicyInUse({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlStreamingDistributionAlreadyExistsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.StreamingDistributionAlreadyExists({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlStreamingDistributionNotDisabledResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.StreamingDistributionNotDisabled({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTestFunctionFailedResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_1_1.TestFunctionFailed({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooLongCSPInResponseHeadersPolicyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooLongCSPInResponseHeadersPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyCacheBehaviorsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyCacheBehaviors({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyCachePoliciesResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyCachePolicies({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyCertificatesResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyCertificates({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyCloudFrontOriginAccessIdentitiesResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyCloudFrontOriginAccessIdentities({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyCookieNamesInWhiteListResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyCookieNamesInWhiteList({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyCookiesInCachePolicyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyCookiesInCachePolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyCookiesInOriginRequestPolicyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyCookiesInOriginRequestPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyCustomHeadersInResponseHeadersPolicyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyCustomHeadersInResponseHeadersPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyDistributionCNAMEsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionCNAMEs({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyDistributionsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributions({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyDistributionsAssociatedToCachePolicyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsAssociatedToCachePolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyDistributionsAssociatedToFieldLevelEncryptionConfigResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsAssociatedToFieldLevelEncryptionConfig({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyDistributionsAssociatedToKeyGroupResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsAssociatedToKeyGroup({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyDistributionsAssociatedToOriginRequestPolicyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsAssociatedToOriginRequestPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyDistributionsAssociatedToResponseHeadersPolicyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsAssociatedToResponseHeadersPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyDistributionsWithFunctionAssociationsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsWithFunctionAssociations({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyDistributionsWithLambdaAssociationsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsWithLambdaAssociations({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyDistributionsWithSingleFunctionARNResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyDistributionsWithSingleFunctionARN({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyFieldLevelEncryptionConfigsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFieldLevelEncryptionConfigs({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyFieldLevelEncryptionContentTypeProfilesResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFieldLevelEncryptionContentTypeProfiles({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyFieldLevelEncryptionEncryptionEntitiesResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFieldLevelEncryptionEncryptionEntities({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyFieldLevelEncryptionFieldPatternsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFieldLevelEncryptionFieldPatterns({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyFieldLevelEncryptionProfilesResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFieldLevelEncryptionProfiles({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyFieldLevelEncryptionQueryArgProfilesResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFieldLevelEncryptionQueryArgProfiles({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyFunctionAssociationsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFunctionAssociations({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyFunctionsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyFunctions({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyHeadersInCachePolicyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyHeadersInCachePolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyHeadersInForwardedValuesResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyHeadersInForwardedValues({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyHeadersInOriginRequestPolicyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyHeadersInOriginRequestPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyInvalidationsInProgressResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyInvalidationsInProgress({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyKeyGroupsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyKeyGroups({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyKeyGroupsAssociatedToDistributionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyKeyGroupsAssociatedToDistribution({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyLambdaFunctionAssociationsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyLambdaFunctionAssociations({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyOriginCustomHeadersResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyOriginCustomHeaders({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyOriginGroupsPerDistributionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyOriginGroupsPerDistribution({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyOriginRequestPoliciesResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyOriginRequestPolicies({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyOriginsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyOrigins({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyPublicKeysResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyPublicKeys({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyPublicKeysInKeyGroupResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyPublicKeysInKeyGroup({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyQueryStringParametersResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyQueryStringParameters({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyQueryStringsInCachePolicyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyQueryStringsInCachePolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyQueryStringsInOriginRequestPolicyResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyQueryStringsInOriginRequestPolicy({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyRealtimeLogConfigsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyRealtimeLogConfigs({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyResponseHeadersPoliciesResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyResponseHeadersPolicies({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyStreamingDistributionCNAMEsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyStreamingDistributionCNAMEs({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyStreamingDistributionsResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyStreamingDistributions({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTooManyTrustedSignersResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TooManyTrustedSigners({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTrustedKeyGroupDoesNotExistResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TrustedKeyGroupDoesNotExist({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlTrustedSignerDoesNotExistResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.TrustedSignerDoesNotExist({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst deserializeAws_restXmlUnsupportedOperationResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body.Error;\n    if (data[\"Message\"] !== undefined) {\n        contents.Message = (0, smithy_client_1.expectString)(data[\"Message\"]);\n    }\n    const exception = new models_0_1.UnsupportedOperation({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body.Error);\n};\nconst serializeAws_restXmlAccessControlAllowHeadersList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Header\");\n    });\n};\nconst serializeAws_restXmlAccessControlAllowMethodsList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"ResponseHeadersPolicyAccessControlAllowMethodsValues\", entry);\n        return node.withName(\"Method\");\n    });\n};\nconst serializeAws_restXmlAccessControlAllowOriginsList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Origin\");\n    });\n};\nconst serializeAws_restXmlAccessControlExposeHeadersList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Header\");\n    });\n};\nconst serializeAws_restXmlAliases = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Aliases\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlAliasList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlAliasList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"CNAME\");\n    });\n};\nconst serializeAws_restXmlAllowedMethods = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"AllowedMethods\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlMethodsList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.CachedMethods != null) {\n        const node = serializeAws_restXmlCachedMethods(input.CachedMethods, context).withName(\"CachedMethods\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlAwsAccountNumberList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"AwsAccountNumber\");\n    });\n};\nconst serializeAws_restXmlCacheBehavior = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CacheBehavior\");\n    if (input.PathPattern != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.PathPattern).withName(\"PathPattern\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TargetOriginId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.TargetOriginId).withName(\"TargetOriginId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TrustedSigners != null) {\n        const node = serializeAws_restXmlTrustedSigners(input.TrustedSigners, context).withName(\"TrustedSigners\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TrustedKeyGroups != null) {\n        const node = serializeAws_restXmlTrustedKeyGroups(input.TrustedKeyGroups, context).withName(\"TrustedKeyGroups\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ViewerProtocolPolicy != null) {\n        const node = xml_builder_1.XmlNode.of(\"ViewerProtocolPolicy\", input.ViewerProtocolPolicy).withName(\"ViewerProtocolPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AllowedMethods != null) {\n        const node = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context).withName(\"AllowedMethods\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SmoothStreaming != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.SmoothStreaming)).withName(\"SmoothStreaming\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Compress != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Compress)).withName(\"Compress\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.LambdaFunctionAssociations != null) {\n        const node = serializeAws_restXmlLambdaFunctionAssociations(input.LambdaFunctionAssociations, context).withName(\"LambdaFunctionAssociations\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FunctionAssociations != null) {\n        const node = serializeAws_restXmlFunctionAssociations(input.FunctionAssociations, context).withName(\"FunctionAssociations\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldLevelEncryptionId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.FieldLevelEncryptionId).withName(\"FieldLevelEncryptionId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RealtimeLogConfigArn != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.RealtimeLogConfigArn).withName(\"RealtimeLogConfigArn\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CachePolicyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CachePolicyId).withName(\"CachePolicyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginRequestPolicyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.OriginRequestPolicyId).withName(\"OriginRequestPolicyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ResponseHeadersPolicyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ResponseHeadersPolicyId).withName(\"ResponseHeadersPolicyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ForwardedValues != null) {\n        const node = serializeAws_restXmlForwardedValues(input.ForwardedValues, context).withName(\"ForwardedValues\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MinTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.MinTTL)).withName(\"MinTTL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DefaultTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.DefaultTTL)).withName(\"DefaultTTL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MaxTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.MaxTTL)).withName(\"MaxTTL\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlCacheBehaviorList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = serializeAws_restXmlCacheBehavior(entry, context);\n        return node.withName(\"CacheBehavior\");\n    });\n};\nconst serializeAws_restXmlCacheBehaviors = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CacheBehaviors\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlCacheBehaviorList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlCachedMethods = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CachedMethods\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlMethodsList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlCachePolicyConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CachePolicyConfig\");\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Name != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DefaultTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.DefaultTTL)).withName(\"DefaultTTL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MaxTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.MaxTTL)).withName(\"MaxTTL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MinTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.MinTTL)).withName(\"MinTTL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ParametersInCacheKeyAndForwardedToOrigin != null) {\n        const node = serializeAws_restXmlParametersInCacheKeyAndForwardedToOrigin(input.ParametersInCacheKeyAndForwardedToOrigin, context).withName(\"ParametersInCacheKeyAndForwardedToOrigin\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlCachePolicyCookiesConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CachePolicyCookiesConfig\");\n    if (input.CookieBehavior != null) {\n        const node = xml_builder_1.XmlNode.of(\"CachePolicyCookieBehavior\", input.CookieBehavior).withName(\"CookieBehavior\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Cookies != null) {\n        const node = serializeAws_restXmlCookieNames(input.Cookies, context).withName(\"Cookies\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlCachePolicyHeadersConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CachePolicyHeadersConfig\");\n    if (input.HeaderBehavior != null) {\n        const node = xml_builder_1.XmlNode.of(\"CachePolicyHeaderBehavior\", input.HeaderBehavior).withName(\"HeaderBehavior\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Headers != null) {\n        const node = serializeAws_restXmlHeaders(input.Headers, context).withName(\"Headers\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlCachePolicyQueryStringsConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CachePolicyQueryStringsConfig\");\n    if (input.QueryStringBehavior != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"CachePolicyQueryStringBehavior\", input.QueryStringBehavior)\n            .withName(\"QueryStringBehavior\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueryStrings != null) {\n        const node = serializeAws_restXmlQueryStringNames(input.QueryStrings, context).withName(\"QueryStrings\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlCloudFrontOriginAccessIdentityConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CloudFrontOriginAccessIdentityConfig\");\n    if (input.CallerReference != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CallerReference).withName(\"CallerReference\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlContentTypeProfile = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ContentTypeProfile\");\n    if (input.Format != null) {\n        const node = xml_builder_1.XmlNode.of(\"Format\", input.Format).withName(\"Format\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ProfileId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ProfileId).withName(\"ProfileId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ContentType != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ContentType).withName(\"ContentType\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlContentTypeProfileConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ContentTypeProfileConfig\");\n    if (input.ForwardWhenContentTypeIsUnknown != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"boolean\", String(input.ForwardWhenContentTypeIsUnknown))\n            .withName(\"ForwardWhenContentTypeIsUnknown\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ContentTypeProfiles != null) {\n        const node = serializeAws_restXmlContentTypeProfiles(input.ContentTypeProfiles, context).withName(\"ContentTypeProfiles\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlContentTypeProfileList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = serializeAws_restXmlContentTypeProfile(entry, context);\n        return node.withName(\"ContentTypeProfile\");\n    });\n};\nconst serializeAws_restXmlContentTypeProfiles = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ContentTypeProfiles\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlContentTypeProfileList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlCookieNameList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Name\");\n    });\n};\nconst serializeAws_restXmlCookieNames = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CookieNames\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlCookieNameList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlCookiePreference = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CookiePreference\");\n    if (input.Forward != null) {\n        const node = xml_builder_1.XmlNode.of(\"ItemSelection\", input.Forward).withName(\"Forward\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.WhitelistedNames != null) {\n        const node = serializeAws_restXmlCookieNames(input.WhitelistedNames, context).withName(\"WhitelistedNames\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlCustomErrorResponse = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CustomErrorResponse\");\n    if (input.ErrorCode != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.ErrorCode)).withName(\"ErrorCode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ResponsePagePath != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ResponsePagePath).withName(\"ResponsePagePath\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ResponseCode != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ResponseCode).withName(\"ResponseCode\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ErrorCachingMinTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.ErrorCachingMinTTL)).withName(\"ErrorCachingMinTTL\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlCustomErrorResponseList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = serializeAws_restXmlCustomErrorResponse(entry, context);\n        return node.withName(\"CustomErrorResponse\");\n    });\n};\nconst serializeAws_restXmlCustomErrorResponses = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CustomErrorResponses\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlCustomErrorResponseList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlCustomHeaders = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CustomHeaders\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlOriginCustomHeadersList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlCustomOriginConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"CustomOriginConfig\");\n    if (input.HTTPPort != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.HTTPPort)).withName(\"HTTPPort\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.HTTPSPort != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.HTTPSPort)).withName(\"HTTPSPort\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginProtocolPolicy != null) {\n        const node = xml_builder_1.XmlNode.of(\"OriginProtocolPolicy\", input.OriginProtocolPolicy).withName(\"OriginProtocolPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginSslProtocols != null) {\n        const node = serializeAws_restXmlOriginSslProtocols(input.OriginSslProtocols, context).withName(\"OriginSslProtocols\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginReadTimeout != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.OriginReadTimeout)).withName(\"OriginReadTimeout\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginKeepaliveTimeout != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.OriginKeepaliveTimeout)).withName(\"OriginKeepaliveTimeout\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlDefaultCacheBehavior = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"DefaultCacheBehavior\");\n    if (input.TargetOriginId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.TargetOriginId).withName(\"TargetOriginId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TrustedSigners != null) {\n        const node = serializeAws_restXmlTrustedSigners(input.TrustedSigners, context).withName(\"TrustedSigners\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TrustedKeyGroups != null) {\n        const node = serializeAws_restXmlTrustedKeyGroups(input.TrustedKeyGroups, context).withName(\"TrustedKeyGroups\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ViewerProtocolPolicy != null) {\n        const node = xml_builder_1.XmlNode.of(\"ViewerProtocolPolicy\", input.ViewerProtocolPolicy).withName(\"ViewerProtocolPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AllowedMethods != null) {\n        const node = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context).withName(\"AllowedMethods\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SmoothStreaming != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.SmoothStreaming)).withName(\"SmoothStreaming\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Compress != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Compress)).withName(\"Compress\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.LambdaFunctionAssociations != null) {\n        const node = serializeAws_restXmlLambdaFunctionAssociations(input.LambdaFunctionAssociations, context).withName(\"LambdaFunctionAssociations\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FunctionAssociations != null) {\n        const node = serializeAws_restXmlFunctionAssociations(input.FunctionAssociations, context).withName(\"FunctionAssociations\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldLevelEncryptionId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.FieldLevelEncryptionId).withName(\"FieldLevelEncryptionId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.RealtimeLogConfigArn != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.RealtimeLogConfigArn).withName(\"RealtimeLogConfigArn\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CachePolicyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CachePolicyId).withName(\"CachePolicyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginRequestPolicyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.OriginRequestPolicyId).withName(\"OriginRequestPolicyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ResponseHeadersPolicyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ResponseHeadersPolicyId).withName(\"ResponseHeadersPolicyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ForwardedValues != null) {\n        const node = serializeAws_restXmlForwardedValues(input.ForwardedValues, context).withName(\"ForwardedValues\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MinTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.MinTTL)).withName(\"MinTTL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DefaultTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.DefaultTTL)).withName(\"DefaultTTL\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MaxTTL != null) {\n        const node = xml_builder_1.XmlNode.of(\"long\", String(input.MaxTTL)).withName(\"MaxTTL\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlDistributionConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"DistributionConfig\");\n    if (input.CallerReference != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CallerReference).withName(\"CallerReference\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Aliases != null) {\n        const node = serializeAws_restXmlAliases(input.Aliases, context).withName(\"Aliases\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DefaultRootObject != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.DefaultRootObject).withName(\"DefaultRootObject\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Origins != null) {\n        const node = serializeAws_restXmlOrigins(input.Origins, context).withName(\"Origins\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginGroups != null) {\n        const node = serializeAws_restXmlOriginGroups(input.OriginGroups, context).withName(\"OriginGroups\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DefaultCacheBehavior != null) {\n        const node = serializeAws_restXmlDefaultCacheBehavior(input.DefaultCacheBehavior, context).withName(\"DefaultCacheBehavior\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CacheBehaviors != null) {\n        const node = serializeAws_restXmlCacheBehaviors(input.CacheBehaviors, context).withName(\"CacheBehaviors\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CustomErrorResponses != null) {\n        const node = serializeAws_restXmlCustomErrorResponses(input.CustomErrorResponses, context).withName(\"CustomErrorResponses\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"CommentType\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Logging != null) {\n        const node = serializeAws_restXmlLoggingConfig(input.Logging, context).withName(\"Logging\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.PriceClass != null) {\n        const node = xml_builder_1.XmlNode.of(\"PriceClass\", input.PriceClass).withName(\"PriceClass\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ViewerCertificate != null) {\n        const node = serializeAws_restXmlViewerCertificate(input.ViewerCertificate, context).withName(\"ViewerCertificate\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Restrictions != null) {\n        const node = serializeAws_restXmlRestrictions(input.Restrictions, context).withName(\"Restrictions\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.WebACLId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.WebACLId).withName(\"WebACLId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.HttpVersion != null) {\n        const node = xml_builder_1.XmlNode.of(\"HttpVersion\", input.HttpVersion).withName(\"HttpVersion\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IsIPV6Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.IsIPV6Enabled)).withName(\"IsIPV6Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlDistributionConfigWithTags = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"DistributionConfigWithTags\");\n    if (input.DistributionConfig != null) {\n        const node = serializeAws_restXmlDistributionConfig(input.DistributionConfig, context).withName(\"DistributionConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags != null) {\n        const node = serializeAws_restXmlTags(input.Tags, context).withName(\"Tags\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlEncryptionEntities = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"EncryptionEntities\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlEncryptionEntityList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlEncryptionEntity = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"EncryptionEntity\");\n    if (input.PublicKeyId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.PublicKeyId).withName(\"PublicKeyId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ProviderId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ProviderId).withName(\"ProviderId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FieldPatterns != null) {\n        const node = serializeAws_restXmlFieldPatterns(input.FieldPatterns, context).withName(\"FieldPatterns\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlEncryptionEntityList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = serializeAws_restXmlEncryptionEntity(entry, context);\n        return node.withName(\"EncryptionEntity\");\n    });\n};\nconst serializeAws_restXmlEndPoint = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"EndPoint\");\n    if (input.StreamType != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.StreamType).withName(\"StreamType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.KinesisStreamConfig != null) {\n        const node = serializeAws_restXmlKinesisStreamConfig(input.KinesisStreamConfig, context).withName(\"KinesisStreamConfig\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlEndPointList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = serializeAws_restXmlEndPoint(entry, context);\n        return node.withName(\"member\");\n    });\n};\nconst serializeAws_restXmlFieldLevelEncryptionConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"FieldLevelEncryptionConfig\");\n    if (input.CallerReference != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CallerReference).withName(\"CallerReference\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueryArgProfileConfig != null) {\n        const node = serializeAws_restXmlQueryArgProfileConfig(input.QueryArgProfileConfig, context).withName(\"QueryArgProfileConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ContentTypeProfileConfig != null) {\n        const node = serializeAws_restXmlContentTypeProfileConfig(input.ContentTypeProfileConfig, context).withName(\"ContentTypeProfileConfig\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlFieldLevelEncryptionProfileConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"FieldLevelEncryptionProfileConfig\");\n    if (input.Name != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CallerReference != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CallerReference).withName(\"CallerReference\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EncryptionEntities != null) {\n        const node = serializeAws_restXmlEncryptionEntities(input.EncryptionEntities, context).withName(\"EncryptionEntities\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlFieldList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Field\");\n    });\n};\nconst serializeAws_restXmlFieldPatternList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"FieldPattern\");\n    });\n};\nconst serializeAws_restXmlFieldPatterns = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"FieldPatterns\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlFieldPatternList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlForwardedValues = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ForwardedValues\");\n    if (input.QueryString != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.QueryString)).withName(\"QueryString\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Cookies != null) {\n        const node = serializeAws_restXmlCookiePreference(input.Cookies, context).withName(\"Cookies\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Headers != null) {\n        const node = serializeAws_restXmlHeaders(input.Headers, context).withName(\"Headers\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueryStringCacheKeys != null) {\n        const node = serializeAws_restXmlQueryStringCacheKeys(input.QueryStringCacheKeys, context).withName(\"QueryStringCacheKeys\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlFunctionAssociation = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"FunctionAssociation\");\n    if (input.FunctionARN != null) {\n        const node = xml_builder_1.XmlNode.of(\"FunctionARN\", input.FunctionARN).withName(\"FunctionARN\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EventType != null) {\n        const node = xml_builder_1.XmlNode.of(\"EventType\", input.EventType).withName(\"EventType\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlFunctionAssociationList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = serializeAws_restXmlFunctionAssociation(entry, context);\n        return node.withName(\"FunctionAssociation\");\n    });\n};\nconst serializeAws_restXmlFunctionAssociations = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"FunctionAssociations\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlFunctionAssociationList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlFunctionConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"FunctionConfig\");\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Runtime != null) {\n        const node = xml_builder_1.XmlNode.of(\"FunctionRuntime\", input.Runtime).withName(\"Runtime\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlGeoRestriction = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"GeoRestriction\");\n    if (input.RestrictionType != null) {\n        const node = xml_builder_1.XmlNode.of(\"GeoRestrictionType\", input.RestrictionType).withName(\"RestrictionType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlLocationList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlHeaderList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Name\");\n    });\n};\nconst serializeAws_restXmlHeaders = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Headers\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlHeaderList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlInvalidationBatch = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"InvalidationBatch\");\n    if (input.Paths != null) {\n        const node = serializeAws_restXmlPaths(input.Paths, context).withName(\"Paths\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CallerReference != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CallerReference).withName(\"CallerReference\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlKeyGroupConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"KeyGroupConfig\");\n    if (input.Name != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlPublicKeyIdList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlKinesisStreamConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"KinesisStreamConfig\");\n    if (input.RoleARN != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.RoleARN).withName(\"RoleARN\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StreamARN != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.StreamARN).withName(\"StreamARN\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlLambdaFunctionAssociation = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"LambdaFunctionAssociation\");\n    if (input.LambdaFunctionARN != null) {\n        const node = xml_builder_1.XmlNode.of(\"LambdaFunctionARN\", input.LambdaFunctionARN).withName(\"LambdaFunctionARN\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EventType != null) {\n        const node = xml_builder_1.XmlNode.of(\"EventType\", input.EventType).withName(\"EventType\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IncludeBody != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.IncludeBody)).withName(\"IncludeBody\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlLambdaFunctionAssociationList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = serializeAws_restXmlLambdaFunctionAssociation(entry, context);\n        return node.withName(\"LambdaFunctionAssociation\");\n    });\n};\nconst serializeAws_restXmlLambdaFunctionAssociations = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"LambdaFunctionAssociations\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlLambdaFunctionAssociationList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlLocationList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Location\");\n    });\n};\nconst serializeAws_restXmlLoggingConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"LoggingConfig\");\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IncludeCookies != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.IncludeCookies)).withName(\"IncludeCookies\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Bucket != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Bucket).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlMethodsList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"Method\", entry);\n        return node.withName(\"Method\");\n    });\n};\nconst serializeAws_restXmlMonitoringSubscription = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"MonitoringSubscription\");\n    if (input.RealtimeMetricsSubscriptionConfig != null) {\n        const node = serializeAws_restXmlRealtimeMetricsSubscriptionConfig(input.RealtimeMetricsSubscriptionConfig, context).withName(\"RealtimeMetricsSubscriptionConfig\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlOrigin = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Origin\");\n    if (input.Id != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.DomainName != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.DomainName).withName(\"DomainName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginPath != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.OriginPath).withName(\"OriginPath\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CustomHeaders != null) {\n        const node = serializeAws_restXmlCustomHeaders(input.CustomHeaders, context).withName(\"CustomHeaders\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.S3OriginConfig != null) {\n        const node = serializeAws_restXmlS3OriginConfig(input.S3OriginConfig, context).withName(\"S3OriginConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CustomOriginConfig != null) {\n        const node = serializeAws_restXmlCustomOriginConfig(input.CustomOriginConfig, context).withName(\"CustomOriginConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ConnectionAttempts != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.ConnectionAttempts)).withName(\"ConnectionAttempts\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ConnectionTimeout != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.ConnectionTimeout)).withName(\"ConnectionTimeout\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginShield != null) {\n        const node = serializeAws_restXmlOriginShield(input.OriginShield, context).withName(\"OriginShield\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlOriginCustomHeader = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginCustomHeader\");\n    if (input.HeaderName != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.HeaderName).withName(\"HeaderName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.HeaderValue != null) {\n        const node = xml_builder_1.XmlNode.of(\"sensitiveStringType\", input.HeaderValue).withName(\"HeaderValue\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlOriginCustomHeadersList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = serializeAws_restXmlOriginCustomHeader(entry, context);\n        return node.withName(\"OriginCustomHeader\");\n    });\n};\nconst serializeAws_restXmlOriginGroup = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginGroup\");\n    if (input.Id != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Id).withName(\"Id\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FailoverCriteria != null) {\n        const node = serializeAws_restXmlOriginGroupFailoverCriteria(input.FailoverCriteria, context).withName(\"FailoverCriteria\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Members != null) {\n        const node = serializeAws_restXmlOriginGroupMembers(input.Members, context).withName(\"Members\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlOriginGroupFailoverCriteria = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginGroupFailoverCriteria\");\n    if (input.StatusCodes != null) {\n        const node = serializeAws_restXmlStatusCodes(input.StatusCodes, context).withName(\"StatusCodes\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlOriginGroupList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = serializeAws_restXmlOriginGroup(entry, context);\n        return node.withName(\"OriginGroup\");\n    });\n};\nconst serializeAws_restXmlOriginGroupMember = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginGroupMember\");\n    if (input.OriginId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.OriginId).withName(\"OriginId\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlOriginGroupMemberList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = serializeAws_restXmlOriginGroupMember(entry, context);\n        return node.withName(\"OriginGroupMember\");\n    });\n};\nconst serializeAws_restXmlOriginGroupMembers = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginGroupMembers\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlOriginGroupMemberList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlOriginGroups = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginGroups\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlOriginGroupList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlOriginList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = serializeAws_restXmlOrigin(entry, context);\n        return node.withName(\"Origin\");\n    });\n};\nconst serializeAws_restXmlOriginRequestPolicyConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginRequestPolicyConfig\");\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Name != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.HeadersConfig != null) {\n        const node = serializeAws_restXmlOriginRequestPolicyHeadersConfig(input.HeadersConfig, context).withName(\"HeadersConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CookiesConfig != null) {\n        const node = serializeAws_restXmlOriginRequestPolicyCookiesConfig(input.CookiesConfig, context).withName(\"CookiesConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueryStringsConfig != null) {\n        const node = serializeAws_restXmlOriginRequestPolicyQueryStringsConfig(input.QueryStringsConfig, context).withName(\"QueryStringsConfig\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlOriginRequestPolicyCookiesConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginRequestPolicyCookiesConfig\");\n    if (input.CookieBehavior != null) {\n        const node = xml_builder_1.XmlNode.of(\"OriginRequestPolicyCookieBehavior\", input.CookieBehavior).withName(\"CookieBehavior\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Cookies != null) {\n        const node = serializeAws_restXmlCookieNames(input.Cookies, context).withName(\"Cookies\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlOriginRequestPolicyHeadersConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginRequestPolicyHeadersConfig\");\n    if (input.HeaderBehavior != null) {\n        const node = xml_builder_1.XmlNode.of(\"OriginRequestPolicyHeaderBehavior\", input.HeaderBehavior).withName(\"HeaderBehavior\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Headers != null) {\n        const node = serializeAws_restXmlHeaders(input.Headers, context).withName(\"Headers\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlOriginRequestPolicyQueryStringsConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginRequestPolicyQueryStringsConfig\");\n    if (input.QueryStringBehavior != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"OriginRequestPolicyQueryStringBehavior\", input.QueryStringBehavior)\n            .withName(\"QueryStringBehavior\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueryStrings != null) {\n        const node = serializeAws_restXmlQueryStringNames(input.QueryStrings, context).withName(\"QueryStrings\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlOrigins = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Origins\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlOriginList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlOriginShield = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginShield\");\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginShieldRegion != null) {\n        const node = xml_builder_1.XmlNode.of(\"OriginShieldRegion\", input.OriginShieldRegion).withName(\"OriginShieldRegion\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlOriginSslProtocols = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"OriginSslProtocols\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlSslProtocolsList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlParametersInCacheKeyAndForwardedToOrigin = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ParametersInCacheKeyAndForwardedToOrigin\");\n    if (input.EnableAcceptEncodingGzip != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.EnableAcceptEncodingGzip)).withName(\"EnableAcceptEncodingGzip\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EnableAcceptEncodingBrotli != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"boolean\", String(input.EnableAcceptEncodingBrotli))\n            .withName(\"EnableAcceptEncodingBrotli\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.HeadersConfig != null) {\n        const node = serializeAws_restXmlCachePolicyHeadersConfig(input.HeadersConfig, context).withName(\"HeadersConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CookiesConfig != null) {\n        const node = serializeAws_restXmlCachePolicyCookiesConfig(input.CookiesConfig, context).withName(\"CookiesConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueryStringsConfig != null) {\n        const node = serializeAws_restXmlCachePolicyQueryStringsConfig(input.QueryStringsConfig, context).withName(\"QueryStringsConfig\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlPathList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Path\");\n    });\n};\nconst serializeAws_restXmlPaths = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Paths\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlPathList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlPublicKeyConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"PublicKeyConfig\");\n    if (input.CallerReference != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CallerReference).withName(\"CallerReference\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Name != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.EncodedKey != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.EncodedKey).withName(\"EncodedKey\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlPublicKeyIdList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"PublicKey\");\n    });\n};\nconst serializeAws_restXmlQueryArgProfile = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"QueryArgProfile\");\n    if (input.QueryArg != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.QueryArg).withName(\"QueryArg\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ProfileId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ProfileId).withName(\"ProfileId\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlQueryArgProfileConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"QueryArgProfileConfig\");\n    if (input.ForwardWhenQueryArgProfileIsUnknown != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"boolean\", String(input.ForwardWhenQueryArgProfileIsUnknown))\n            .withName(\"ForwardWhenQueryArgProfileIsUnknown\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.QueryArgProfiles != null) {\n        const node = serializeAws_restXmlQueryArgProfiles(input.QueryArgProfiles, context).withName(\"QueryArgProfiles\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlQueryArgProfileList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = serializeAws_restXmlQueryArgProfile(entry, context);\n        return node.withName(\"QueryArgProfile\");\n    });\n};\nconst serializeAws_restXmlQueryArgProfiles = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"QueryArgProfiles\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlQueryArgProfileList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlQueryStringCacheKeys = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"QueryStringCacheKeys\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlQueryStringCacheKeysList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlQueryStringCacheKeysList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Name\");\n    });\n};\nconst serializeAws_restXmlQueryStringNames = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"QueryStringNames\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlQueryStringNamesList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlQueryStringNamesList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"Name\");\n    });\n};\nconst serializeAws_restXmlRealtimeMetricsSubscriptionConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"RealtimeMetricsSubscriptionConfig\");\n    if (input.RealtimeMetricsSubscriptionStatus != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"RealtimeMetricsSubscriptionStatus\", input.RealtimeMetricsSubscriptionStatus)\n            .withName(\"RealtimeMetricsSubscriptionStatus\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicyAccessControlAllowHeaders = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyAccessControlAllowHeaders\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlAccessControlAllowHeadersList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicyAccessControlAllowMethods = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyAccessControlAllowMethods\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlAccessControlAllowMethodsList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicyAccessControlAllowOrigins = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyAccessControlAllowOrigins\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlAccessControlAllowOriginsList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicyAccessControlExposeHeaders = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyAccessControlExposeHeaders\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlAccessControlExposeHeadersList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicyConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyConfig\");\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Name != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Name).withName(\"Name\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CorsConfig != null) {\n        const node = serializeAws_restXmlResponseHeadersPolicyCorsConfig(input.CorsConfig, context).withName(\"CorsConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SecurityHeadersConfig != null) {\n        const node = serializeAws_restXmlResponseHeadersPolicySecurityHeadersConfig(input.SecurityHeadersConfig, context).withName(\"SecurityHeadersConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CustomHeadersConfig != null) {\n        const node = serializeAws_restXmlResponseHeadersPolicyCustomHeadersConfig(input.CustomHeadersConfig, context).withName(\"CustomHeadersConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ServerTimingHeadersConfig != null) {\n        const node = serializeAws_restXmlResponseHeadersPolicyServerTimingHeadersConfig(input.ServerTimingHeadersConfig, context).withName(\"ServerTimingHeadersConfig\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicyContentSecurityPolicy = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyContentSecurityPolicy\");\n    if (input.Override != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Override)).withName(\"Override\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ContentSecurityPolicy != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ContentSecurityPolicy).withName(\"ContentSecurityPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicyContentTypeOptions = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyContentTypeOptions\");\n    if (input.Override != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Override)).withName(\"Override\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicyCorsConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyCorsConfig\");\n    if (input.AccessControlAllowOrigins != null) {\n        const node = serializeAws_restXmlResponseHeadersPolicyAccessControlAllowOrigins(input.AccessControlAllowOrigins, context).withName(\"AccessControlAllowOrigins\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlAllowHeaders != null) {\n        const node = serializeAws_restXmlResponseHeadersPolicyAccessControlAllowHeaders(input.AccessControlAllowHeaders, context).withName(\"AccessControlAllowHeaders\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlAllowMethods != null) {\n        const node = serializeAws_restXmlResponseHeadersPolicyAccessControlAllowMethods(input.AccessControlAllowMethods, context).withName(\"AccessControlAllowMethods\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlAllowCredentials != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"boolean\", String(input.AccessControlAllowCredentials))\n            .withName(\"AccessControlAllowCredentials\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlExposeHeaders != null) {\n        const node = serializeAws_restXmlResponseHeadersPolicyAccessControlExposeHeaders(input.AccessControlExposeHeaders, context).withName(\"AccessControlExposeHeaders\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlMaxAgeSec != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.AccessControlMaxAgeSec)).withName(\"AccessControlMaxAgeSec\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginOverride != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.OriginOverride)).withName(\"OriginOverride\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicyCustomHeader = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyCustomHeader\");\n    if (input.Header != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Header).withName(\"Header\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Value).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Override != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Override)).withName(\"Override\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicyCustomHeaderList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = serializeAws_restXmlResponseHeadersPolicyCustomHeader(entry, context);\n        return node.withName(\"ResponseHeadersPolicyCustomHeader\");\n    });\n};\nconst serializeAws_restXmlResponseHeadersPolicyCustomHeadersConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyCustomHeadersConfig\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlResponseHeadersPolicyCustomHeaderList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicyFrameOptions = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyFrameOptions\");\n    if (input.Override != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Override)).withName(\"Override\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FrameOption != null) {\n        const node = xml_builder_1.XmlNode.of(\"FrameOptionsList\", input.FrameOption).withName(\"FrameOption\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicyReferrerPolicy = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyReferrerPolicy\");\n    if (input.Override != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Override)).withName(\"Override\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReferrerPolicy != null) {\n        const node = xml_builder_1.XmlNode.of(\"ReferrerPolicyList\", input.ReferrerPolicy).withName(\"ReferrerPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicySecurityHeadersConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicySecurityHeadersConfig\");\n    if (input.XSSProtection != null) {\n        const node = serializeAws_restXmlResponseHeadersPolicyXSSProtection(input.XSSProtection, context).withName(\"XSSProtection\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.FrameOptions != null) {\n        const node = serializeAws_restXmlResponseHeadersPolicyFrameOptions(input.FrameOptions, context).withName(\"FrameOptions\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReferrerPolicy != null) {\n        const node = serializeAws_restXmlResponseHeadersPolicyReferrerPolicy(input.ReferrerPolicy, context).withName(\"ReferrerPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ContentSecurityPolicy != null) {\n        const node = serializeAws_restXmlResponseHeadersPolicyContentSecurityPolicy(input.ContentSecurityPolicy, context).withName(\"ContentSecurityPolicy\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ContentTypeOptions != null) {\n        const node = serializeAws_restXmlResponseHeadersPolicyContentTypeOptions(input.ContentTypeOptions, context).withName(\"ContentTypeOptions\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.StrictTransportSecurity != null) {\n        const node = serializeAws_restXmlResponseHeadersPolicyStrictTransportSecurity(input.StrictTransportSecurity, context).withName(\"StrictTransportSecurity\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicyServerTimingHeadersConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyServerTimingHeadersConfig\");\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SamplingRate != null) {\n        const node = xml_builder_1.XmlNode.of(\"SamplingRate\", String(input.SamplingRate)).withName(\"SamplingRate\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicyStrictTransportSecurity = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyStrictTransportSecurity\");\n    if (input.Override != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Override)).withName(\"Override\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IncludeSubdomains != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.IncludeSubdomains)).withName(\"IncludeSubdomains\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Preload != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Preload)).withName(\"Preload\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.AccessControlMaxAgeSec != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.AccessControlMaxAgeSec)).withName(\"AccessControlMaxAgeSec\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlResponseHeadersPolicyXSSProtection = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ResponseHeadersPolicyXSSProtection\");\n    if (input.Override != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Override)).withName(\"Override\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Protection != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Protection)).withName(\"Protection\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ModeBlock != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.ModeBlock)).withName(\"ModeBlock\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ReportUri != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ReportUri).withName(\"ReportUri\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlRestrictions = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Restrictions\");\n    if (input.GeoRestriction != null) {\n        const node = serializeAws_restXmlGeoRestriction(input.GeoRestriction, context).withName(\"GeoRestriction\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlS3Origin = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"S3Origin\");\n    if (input.DomainName != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.DomainName).withName(\"DomainName\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.OriginAccessIdentity != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.OriginAccessIdentity).withName(\"OriginAccessIdentity\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlS3OriginConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"S3OriginConfig\");\n    if (input.OriginAccessIdentity != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.OriginAccessIdentity).withName(\"OriginAccessIdentity\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlSslProtocolsList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"SslProtocol\", entry);\n        return node.withName(\"SslProtocol\");\n    });\n};\nconst serializeAws_restXmlStatusCodeList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(entry));\n        return node.withName(\"StatusCode\");\n    });\n};\nconst serializeAws_restXmlStatusCodes = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"StatusCodes\");\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlStatusCodeList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlStreamingDistributionConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"StreamingDistributionConfig\");\n    if (input.CallerReference != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.CallerReference).withName(\"CallerReference\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.S3Origin != null) {\n        const node = serializeAws_restXmlS3Origin(input.S3Origin, context).withName(\"S3Origin\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Aliases != null) {\n        const node = serializeAws_restXmlAliases(input.Aliases, context).withName(\"Aliases\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Comment != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Comment).withName(\"Comment\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Logging != null) {\n        const node = serializeAws_restXmlStreamingLoggingConfig(input.Logging, context).withName(\"Logging\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.TrustedSigners != null) {\n        const node = serializeAws_restXmlTrustedSigners(input.TrustedSigners, context).withName(\"TrustedSigners\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.PriceClass != null) {\n        const node = xml_builder_1.XmlNode.of(\"PriceClass\", input.PriceClass).withName(\"PriceClass\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlStreamingDistributionConfigWithTags = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"StreamingDistributionConfigWithTags\");\n    if (input.StreamingDistributionConfig != null) {\n        const node = serializeAws_restXmlStreamingDistributionConfig(input.StreamingDistributionConfig, context).withName(\"StreamingDistributionConfig\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Tags != null) {\n        const node = serializeAws_restXmlTags(input.Tags, context).withName(\"Tags\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlStreamingLoggingConfig = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"StreamingLoggingConfig\");\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Bucket != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Bucket).withName(\"Bucket\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Prefix != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Prefix).withName(\"Prefix\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlTag = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Tag\");\n    if (input.Key != null) {\n        const node = xml_builder_1.XmlNode.of(\"TagKey\", input.Key).withName(\"Key\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Value != null) {\n        const node = xml_builder_1.XmlNode.of(\"TagValue\", input.Value).withName(\"Value\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlTagKeyList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"TagKey\", entry);\n        return node.withName(\"Key\");\n    });\n};\nconst serializeAws_restXmlTagKeys = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"TagKeys\");\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlTagKeyList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlTagList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = serializeAws_restXmlTag(entry, context);\n        return node.withName(\"Tag\");\n    });\n};\nconst serializeAws_restXmlTags = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"Tags\");\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlTagList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlTrustedKeyGroupIdList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        const node = xml_builder_1.XmlNode.of(\"string\", entry);\n        return node.withName(\"KeyGroup\");\n    });\n};\nconst serializeAws_restXmlTrustedKeyGroups = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"TrustedKeyGroups\");\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlTrustedKeyGroupIdList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlTrustedSigners = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"TrustedSigners\");\n    if (input.Enabled != null) {\n        const node = xml_builder_1.XmlNode.of(\"boolean\", String(input.Enabled)).withName(\"Enabled\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Quantity != null) {\n        const node = xml_builder_1.XmlNode.of(\"integer\", String(input.Quantity)).withName(\"Quantity\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Items != null) {\n        const nodes = serializeAws_restXmlAwsAccountNumberList(input.Items, context);\n        const containerNode = new xml_builder_1.XmlNode(\"Items\");\n        nodes.map((node) => {\n            containerNode.addChildNode(node);\n        });\n        bodyNode.addChildNode(containerNode);\n    }\n    return bodyNode;\n};\nconst serializeAws_restXmlViewerCertificate = (input, context) => {\n    const bodyNode = new xml_builder_1.XmlNode(\"ViewerCertificate\");\n    if (input.CloudFrontDefaultCertificate != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"boolean\", String(input.CloudFrontDefaultCertificate))\n            .withName(\"CloudFrontDefaultCertificate\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.IAMCertificateId != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.IAMCertificateId).withName(\"IAMCertificateId\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.ACMCertificateArn != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.ACMCertificateArn).withName(\"ACMCertificateArn\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.SSLSupportMethod != null) {\n        const node = xml_builder_1.XmlNode.of(\"SSLSupportMethod\", input.SSLSupportMethod).withName(\"SSLSupportMethod\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.MinimumProtocolVersion != null) {\n        const node = xml_builder_1.XmlNode\n            .of(\"MinimumProtocolVersion\", input.MinimumProtocolVersion)\n            .withName(\"MinimumProtocolVersion\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.Certificate != null) {\n        const node = xml_builder_1.XmlNode.of(\"string\", input.Certificate).withName(\"Certificate\");\n        bodyNode.addChildNode(node);\n    }\n    if (input.CertificateSource != null) {\n        const node = xml_builder_1.XmlNode.of(\"CertificateSource\", input.CertificateSource).withName(\"CertificateSource\");\n        bodyNode.addChildNode(node);\n    }\n    return bodyNode;\n};\nconst deserializeAws_restXmlAccessControlAllowHeadersList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlAccessControlAllowMethodsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlAccessControlAllowOriginsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlAccessControlExposeHeadersList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlActiveTrustedKeyGroups = (output, context) => {\n    const contents = {\n        Enabled: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"KeyGroup\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlKGKeyPairIdsList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"KeyGroup\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlActiveTrustedSigners = (output, context) => {\n    const contents = {\n        Enabled: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Signer\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlSignerList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Signer\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlAliases = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"CNAME\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlAliasList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"CNAME\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlAliasICPRecordal = (output, context) => {\n    const contents = {\n        CNAME: undefined,\n        ICPRecordalStatus: undefined,\n    };\n    if (output[\"CNAME\"] !== undefined) {\n        contents.CNAME = (0, smithy_client_1.expectString)(output[\"CNAME\"]);\n    }\n    if (output[\"ICPRecordalStatus\"] !== undefined) {\n        contents.ICPRecordalStatus = (0, smithy_client_1.expectString)(output[\"ICPRecordalStatus\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlAliasICPRecordals = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlAliasICPRecordal(entry, context);\n    });\n};\nconst deserializeAws_restXmlAliasList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlAllowedMethods = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n        CachedMethods: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Method\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlMethodsList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Method\"]), context);\n    }\n    if (output[\"CachedMethods\"] !== undefined) {\n        contents.CachedMethods = deserializeAws_restXmlCachedMethods(output[\"CachedMethods\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlAwsAccountNumberList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlCacheBehavior = (output, context) => {\n    const contents = {\n        PathPattern: undefined,\n        TargetOriginId: undefined,\n        TrustedSigners: undefined,\n        TrustedKeyGroups: undefined,\n        ViewerProtocolPolicy: undefined,\n        AllowedMethods: undefined,\n        SmoothStreaming: undefined,\n        Compress: undefined,\n        LambdaFunctionAssociations: undefined,\n        FunctionAssociations: undefined,\n        FieldLevelEncryptionId: undefined,\n        RealtimeLogConfigArn: undefined,\n        CachePolicyId: undefined,\n        OriginRequestPolicyId: undefined,\n        ResponseHeadersPolicyId: undefined,\n        ForwardedValues: undefined,\n        MinTTL: undefined,\n        DefaultTTL: undefined,\n        MaxTTL: undefined,\n    };\n    if (output[\"PathPattern\"] !== undefined) {\n        contents.PathPattern = (0, smithy_client_1.expectString)(output[\"PathPattern\"]);\n    }\n    if (output[\"TargetOriginId\"] !== undefined) {\n        contents.TargetOriginId = (0, smithy_client_1.expectString)(output[\"TargetOriginId\"]);\n    }\n    if (output[\"TrustedSigners\"] !== undefined) {\n        contents.TrustedSigners = deserializeAws_restXmlTrustedSigners(output[\"TrustedSigners\"], context);\n    }\n    if (output[\"TrustedKeyGroups\"] !== undefined) {\n        contents.TrustedKeyGroups = deserializeAws_restXmlTrustedKeyGroups(output[\"TrustedKeyGroups\"], context);\n    }\n    if (output[\"ViewerProtocolPolicy\"] !== undefined) {\n        contents.ViewerProtocolPolicy = (0, smithy_client_1.expectString)(output[\"ViewerProtocolPolicy\"]);\n    }\n    if (output[\"AllowedMethods\"] !== undefined) {\n        contents.AllowedMethods = deserializeAws_restXmlAllowedMethods(output[\"AllowedMethods\"], context);\n    }\n    if (output[\"SmoothStreaming\"] !== undefined) {\n        contents.SmoothStreaming = (0, smithy_client_1.parseBoolean)(output[\"SmoothStreaming\"]);\n    }\n    if (output[\"Compress\"] !== undefined) {\n        contents.Compress = (0, smithy_client_1.parseBoolean)(output[\"Compress\"]);\n    }\n    if (output[\"LambdaFunctionAssociations\"] !== undefined) {\n        contents.LambdaFunctionAssociations = deserializeAws_restXmlLambdaFunctionAssociations(output[\"LambdaFunctionAssociations\"], context);\n    }\n    if (output[\"FunctionAssociations\"] !== undefined) {\n        contents.FunctionAssociations = deserializeAws_restXmlFunctionAssociations(output[\"FunctionAssociations\"], context);\n    }\n    if (output[\"FieldLevelEncryptionId\"] !== undefined) {\n        contents.FieldLevelEncryptionId = (0, smithy_client_1.expectString)(output[\"FieldLevelEncryptionId\"]);\n    }\n    if (output[\"RealtimeLogConfigArn\"] !== undefined) {\n        contents.RealtimeLogConfigArn = (0, smithy_client_1.expectString)(output[\"RealtimeLogConfigArn\"]);\n    }\n    if (output[\"CachePolicyId\"] !== undefined) {\n        contents.CachePolicyId = (0, smithy_client_1.expectString)(output[\"CachePolicyId\"]);\n    }\n    if (output[\"OriginRequestPolicyId\"] !== undefined) {\n        contents.OriginRequestPolicyId = (0, smithy_client_1.expectString)(output[\"OriginRequestPolicyId\"]);\n    }\n    if (output[\"ResponseHeadersPolicyId\"] !== undefined) {\n        contents.ResponseHeadersPolicyId = (0, smithy_client_1.expectString)(output[\"ResponseHeadersPolicyId\"]);\n    }\n    if (output[\"ForwardedValues\"] !== undefined) {\n        contents.ForwardedValues = deserializeAws_restXmlForwardedValues(output[\"ForwardedValues\"], context);\n    }\n    if (output[\"MinTTL\"] !== undefined) {\n        contents.MinTTL = (0, smithy_client_1.strictParseLong)(output[\"MinTTL\"]);\n    }\n    if (output[\"DefaultTTL\"] !== undefined) {\n        contents.DefaultTTL = (0, smithy_client_1.strictParseLong)(output[\"DefaultTTL\"]);\n    }\n    if (output[\"MaxTTL\"] !== undefined) {\n        contents.MaxTTL = (0, smithy_client_1.strictParseLong)(output[\"MaxTTL\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCacheBehaviorList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlCacheBehavior(entry, context);\n    });\n};\nconst deserializeAws_restXmlCacheBehaviors = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"CacheBehavior\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlCacheBehaviorList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"CacheBehavior\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCachedMethods = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Method\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlMethodsList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Method\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCachePolicy = (output, context) => {\n    const contents = {\n        Id: undefined,\n        LastModifiedTime: undefined,\n        CachePolicyConfig: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"CachePolicyConfig\"] !== undefined) {\n        contents.CachePolicyConfig = deserializeAws_restXmlCachePolicyConfig(output[\"CachePolicyConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCachePolicyConfig = (output, context) => {\n    const contents = {\n        Comment: undefined,\n        Name: undefined,\n        DefaultTTL: undefined,\n        MaxTTL: undefined,\n        MinTTL: undefined,\n        ParametersInCacheKeyAndForwardedToOrigin: undefined,\n    };\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"DefaultTTL\"] !== undefined) {\n        contents.DefaultTTL = (0, smithy_client_1.strictParseLong)(output[\"DefaultTTL\"]);\n    }\n    if (output[\"MaxTTL\"] !== undefined) {\n        contents.MaxTTL = (0, smithy_client_1.strictParseLong)(output[\"MaxTTL\"]);\n    }\n    if (output[\"MinTTL\"] !== undefined) {\n        contents.MinTTL = (0, smithy_client_1.strictParseLong)(output[\"MinTTL\"]);\n    }\n    if (output[\"ParametersInCacheKeyAndForwardedToOrigin\"] !== undefined) {\n        contents.ParametersInCacheKeyAndForwardedToOrigin = deserializeAws_restXmlParametersInCacheKeyAndForwardedToOrigin(output[\"ParametersInCacheKeyAndForwardedToOrigin\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCachePolicyCookiesConfig = (output, context) => {\n    const contents = {\n        CookieBehavior: undefined,\n        Cookies: undefined,\n    };\n    if (output[\"CookieBehavior\"] !== undefined) {\n        contents.CookieBehavior = (0, smithy_client_1.expectString)(output[\"CookieBehavior\"]);\n    }\n    if (output[\"Cookies\"] !== undefined) {\n        contents.Cookies = deserializeAws_restXmlCookieNames(output[\"Cookies\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCachePolicyHeadersConfig = (output, context) => {\n    const contents = {\n        HeaderBehavior: undefined,\n        Headers: undefined,\n    };\n    if (output[\"HeaderBehavior\"] !== undefined) {\n        contents.HeaderBehavior = (0, smithy_client_1.expectString)(output[\"HeaderBehavior\"]);\n    }\n    if (output[\"Headers\"] !== undefined) {\n        contents.Headers = deserializeAws_restXmlHeaders(output[\"Headers\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCachePolicyList = (output, context) => {\n    const contents = {\n        NextMarker: undefined,\n        MaxItems: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"CachePolicySummary\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlCachePolicySummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"CachePolicySummary\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCachePolicyQueryStringsConfig = (output, context) => {\n    const contents = {\n        QueryStringBehavior: undefined,\n        QueryStrings: undefined,\n    };\n    if (output[\"QueryStringBehavior\"] !== undefined) {\n        contents.QueryStringBehavior = (0, smithy_client_1.expectString)(output[\"QueryStringBehavior\"]);\n    }\n    if (output[\"QueryStrings\"] !== undefined) {\n        contents.QueryStrings = deserializeAws_restXmlQueryStringNames(output[\"QueryStrings\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCachePolicySummary = (output, context) => {\n    const contents = {\n        Type: undefined,\n        CachePolicy: undefined,\n    };\n    if (output[\"Type\"] !== undefined) {\n        contents.Type = (0, smithy_client_1.expectString)(output[\"Type\"]);\n    }\n    if (output[\"CachePolicy\"] !== undefined) {\n        contents.CachePolicy = deserializeAws_restXmlCachePolicy(output[\"CachePolicy\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCachePolicySummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlCachePolicySummary(entry, context);\n    });\n};\nconst deserializeAws_restXmlCloudFrontOriginAccessIdentity = (output, context) => {\n    const contents = {\n        Id: undefined,\n        S3CanonicalUserId: undefined,\n        CloudFrontOriginAccessIdentityConfig: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"S3CanonicalUserId\"] !== undefined) {\n        contents.S3CanonicalUserId = (0, smithy_client_1.expectString)(output[\"S3CanonicalUserId\"]);\n    }\n    if (output[\"CloudFrontOriginAccessIdentityConfig\"] !== undefined) {\n        contents.CloudFrontOriginAccessIdentityConfig = deserializeAws_restXmlCloudFrontOriginAccessIdentityConfig(output[\"CloudFrontOriginAccessIdentityConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCloudFrontOriginAccessIdentityConfig = (output, context) => {\n    const contents = {\n        CallerReference: undefined,\n        Comment: undefined,\n    };\n    if (output[\"CallerReference\"] !== undefined) {\n        contents.CallerReference = (0, smithy_client_1.expectString)(output[\"CallerReference\"]);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCloudFrontOriginAccessIdentityList = (output, context) => {\n    const contents = {\n        Marker: undefined,\n        NextMarker: undefined,\n        MaxItems: undefined,\n        IsTruncated: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Marker\"] !== undefined) {\n        contents.Marker = (0, smithy_client_1.expectString)(output[\"Marker\"]);\n    }\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(output[\"IsTruncated\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"CloudFrontOriginAccessIdentitySummary\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlCloudFrontOriginAccessIdentitySummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"CloudFrontOriginAccessIdentitySummary\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCloudFrontOriginAccessIdentitySummary = (output, context) => {\n    const contents = {\n        Id: undefined,\n        S3CanonicalUserId: undefined,\n        Comment: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"S3CanonicalUserId\"] !== undefined) {\n        contents.S3CanonicalUserId = (0, smithy_client_1.expectString)(output[\"S3CanonicalUserId\"]);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCloudFrontOriginAccessIdentitySummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlCloudFrontOriginAccessIdentitySummary(entry, context);\n    });\n};\nconst deserializeAws_restXmlConflictingAlias = (output, context) => {\n    const contents = {\n        Alias: undefined,\n        DistributionId: undefined,\n        AccountId: undefined,\n    };\n    if (output[\"Alias\"] !== undefined) {\n        contents.Alias = (0, smithy_client_1.expectString)(output[\"Alias\"]);\n    }\n    if (output[\"DistributionId\"] !== undefined) {\n        contents.DistributionId = (0, smithy_client_1.expectString)(output[\"DistributionId\"]);\n    }\n    if (output[\"AccountId\"] !== undefined) {\n        contents.AccountId = (0, smithy_client_1.expectString)(output[\"AccountId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlConflictingAliases = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlConflictingAlias(entry, context);\n    });\n};\nconst deserializeAws_restXmlConflictingAliasesList = (output, context) => {\n    const contents = {\n        NextMarker: undefined,\n        MaxItems: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"ConflictingAlias\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlConflictingAliases((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"ConflictingAlias\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlContentTypeProfile = (output, context) => {\n    const contents = {\n        Format: undefined,\n        ProfileId: undefined,\n        ContentType: undefined,\n    };\n    if (output[\"Format\"] !== undefined) {\n        contents.Format = (0, smithy_client_1.expectString)(output[\"Format\"]);\n    }\n    if (output[\"ProfileId\"] !== undefined) {\n        contents.ProfileId = (0, smithy_client_1.expectString)(output[\"ProfileId\"]);\n    }\n    if (output[\"ContentType\"] !== undefined) {\n        contents.ContentType = (0, smithy_client_1.expectString)(output[\"ContentType\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlContentTypeProfileConfig = (output, context) => {\n    const contents = {\n        ForwardWhenContentTypeIsUnknown: undefined,\n        ContentTypeProfiles: undefined,\n    };\n    if (output[\"ForwardWhenContentTypeIsUnknown\"] !== undefined) {\n        contents.ForwardWhenContentTypeIsUnknown = (0, smithy_client_1.parseBoolean)(output[\"ForwardWhenContentTypeIsUnknown\"]);\n    }\n    if (output[\"ContentTypeProfiles\"] !== undefined) {\n        contents.ContentTypeProfiles = deserializeAws_restXmlContentTypeProfiles(output[\"ContentTypeProfiles\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlContentTypeProfileList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlContentTypeProfile(entry, context);\n    });\n};\nconst deserializeAws_restXmlContentTypeProfiles = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"ContentTypeProfile\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlContentTypeProfileList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"ContentTypeProfile\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCookieNameList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlCookieNames = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Name\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlCookieNameList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Name\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCookiePreference = (output, context) => {\n    const contents = {\n        Forward: undefined,\n        WhitelistedNames: undefined,\n    };\n    if (output[\"Forward\"] !== undefined) {\n        contents.Forward = (0, smithy_client_1.expectString)(output[\"Forward\"]);\n    }\n    if (output[\"WhitelistedNames\"] !== undefined) {\n        contents.WhitelistedNames = deserializeAws_restXmlCookieNames(output[\"WhitelistedNames\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCustomErrorResponse = (output, context) => {\n    const contents = {\n        ErrorCode: undefined,\n        ResponsePagePath: undefined,\n        ResponseCode: undefined,\n        ErrorCachingMinTTL: undefined,\n    };\n    if (output[\"ErrorCode\"] !== undefined) {\n        contents.ErrorCode = (0, smithy_client_1.strictParseInt32)(output[\"ErrorCode\"]);\n    }\n    if (output[\"ResponsePagePath\"] !== undefined) {\n        contents.ResponsePagePath = (0, smithy_client_1.expectString)(output[\"ResponsePagePath\"]);\n    }\n    if (output[\"ResponseCode\"] !== undefined) {\n        contents.ResponseCode = (0, smithy_client_1.expectString)(output[\"ResponseCode\"]);\n    }\n    if (output[\"ErrorCachingMinTTL\"] !== undefined) {\n        contents.ErrorCachingMinTTL = (0, smithy_client_1.strictParseLong)(output[\"ErrorCachingMinTTL\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCustomErrorResponseList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlCustomErrorResponse(entry, context);\n    });\n};\nconst deserializeAws_restXmlCustomErrorResponses = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"CustomErrorResponse\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlCustomErrorResponseList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"CustomErrorResponse\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCustomHeaders = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"OriginCustomHeader\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlOriginCustomHeadersList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"OriginCustomHeader\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlCustomOriginConfig = (output, context) => {\n    const contents = {\n        HTTPPort: undefined,\n        HTTPSPort: undefined,\n        OriginProtocolPolicy: undefined,\n        OriginSslProtocols: undefined,\n        OriginReadTimeout: undefined,\n        OriginKeepaliveTimeout: undefined,\n    };\n    if (output[\"HTTPPort\"] !== undefined) {\n        contents.HTTPPort = (0, smithy_client_1.strictParseInt32)(output[\"HTTPPort\"]);\n    }\n    if (output[\"HTTPSPort\"] !== undefined) {\n        contents.HTTPSPort = (0, smithy_client_1.strictParseInt32)(output[\"HTTPSPort\"]);\n    }\n    if (output[\"OriginProtocolPolicy\"] !== undefined) {\n        contents.OriginProtocolPolicy = (0, smithy_client_1.expectString)(output[\"OriginProtocolPolicy\"]);\n    }\n    if (output[\"OriginSslProtocols\"] !== undefined) {\n        contents.OriginSslProtocols = deserializeAws_restXmlOriginSslProtocols(output[\"OriginSslProtocols\"], context);\n    }\n    if (output[\"OriginReadTimeout\"] !== undefined) {\n        contents.OriginReadTimeout = (0, smithy_client_1.strictParseInt32)(output[\"OriginReadTimeout\"]);\n    }\n    if (output[\"OriginKeepaliveTimeout\"] !== undefined) {\n        contents.OriginKeepaliveTimeout = (0, smithy_client_1.strictParseInt32)(output[\"OriginKeepaliveTimeout\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlDefaultCacheBehavior = (output, context) => {\n    const contents = {\n        TargetOriginId: undefined,\n        TrustedSigners: undefined,\n        TrustedKeyGroups: undefined,\n        ViewerProtocolPolicy: undefined,\n        AllowedMethods: undefined,\n        SmoothStreaming: undefined,\n        Compress: undefined,\n        LambdaFunctionAssociations: undefined,\n        FunctionAssociations: undefined,\n        FieldLevelEncryptionId: undefined,\n        RealtimeLogConfigArn: undefined,\n        CachePolicyId: undefined,\n        OriginRequestPolicyId: undefined,\n        ResponseHeadersPolicyId: undefined,\n        ForwardedValues: undefined,\n        MinTTL: undefined,\n        DefaultTTL: undefined,\n        MaxTTL: undefined,\n    };\n    if (output[\"TargetOriginId\"] !== undefined) {\n        contents.TargetOriginId = (0, smithy_client_1.expectString)(output[\"TargetOriginId\"]);\n    }\n    if (output[\"TrustedSigners\"] !== undefined) {\n        contents.TrustedSigners = deserializeAws_restXmlTrustedSigners(output[\"TrustedSigners\"], context);\n    }\n    if (output[\"TrustedKeyGroups\"] !== undefined) {\n        contents.TrustedKeyGroups = deserializeAws_restXmlTrustedKeyGroups(output[\"TrustedKeyGroups\"], context);\n    }\n    if (output[\"ViewerProtocolPolicy\"] !== undefined) {\n        contents.ViewerProtocolPolicy = (0, smithy_client_1.expectString)(output[\"ViewerProtocolPolicy\"]);\n    }\n    if (output[\"AllowedMethods\"] !== undefined) {\n        contents.AllowedMethods = deserializeAws_restXmlAllowedMethods(output[\"AllowedMethods\"], context);\n    }\n    if (output[\"SmoothStreaming\"] !== undefined) {\n        contents.SmoothStreaming = (0, smithy_client_1.parseBoolean)(output[\"SmoothStreaming\"]);\n    }\n    if (output[\"Compress\"] !== undefined) {\n        contents.Compress = (0, smithy_client_1.parseBoolean)(output[\"Compress\"]);\n    }\n    if (output[\"LambdaFunctionAssociations\"] !== undefined) {\n        contents.LambdaFunctionAssociations = deserializeAws_restXmlLambdaFunctionAssociations(output[\"LambdaFunctionAssociations\"], context);\n    }\n    if (output[\"FunctionAssociations\"] !== undefined) {\n        contents.FunctionAssociations = deserializeAws_restXmlFunctionAssociations(output[\"FunctionAssociations\"], context);\n    }\n    if (output[\"FieldLevelEncryptionId\"] !== undefined) {\n        contents.FieldLevelEncryptionId = (0, smithy_client_1.expectString)(output[\"FieldLevelEncryptionId\"]);\n    }\n    if (output[\"RealtimeLogConfigArn\"] !== undefined) {\n        contents.RealtimeLogConfigArn = (0, smithy_client_1.expectString)(output[\"RealtimeLogConfigArn\"]);\n    }\n    if (output[\"CachePolicyId\"] !== undefined) {\n        contents.CachePolicyId = (0, smithy_client_1.expectString)(output[\"CachePolicyId\"]);\n    }\n    if (output[\"OriginRequestPolicyId\"] !== undefined) {\n        contents.OriginRequestPolicyId = (0, smithy_client_1.expectString)(output[\"OriginRequestPolicyId\"]);\n    }\n    if (output[\"ResponseHeadersPolicyId\"] !== undefined) {\n        contents.ResponseHeadersPolicyId = (0, smithy_client_1.expectString)(output[\"ResponseHeadersPolicyId\"]);\n    }\n    if (output[\"ForwardedValues\"] !== undefined) {\n        contents.ForwardedValues = deserializeAws_restXmlForwardedValues(output[\"ForwardedValues\"], context);\n    }\n    if (output[\"MinTTL\"] !== undefined) {\n        contents.MinTTL = (0, smithy_client_1.strictParseLong)(output[\"MinTTL\"]);\n    }\n    if (output[\"DefaultTTL\"] !== undefined) {\n        contents.DefaultTTL = (0, smithy_client_1.strictParseLong)(output[\"DefaultTTL\"]);\n    }\n    if (output[\"MaxTTL\"] !== undefined) {\n        contents.MaxTTL = (0, smithy_client_1.strictParseLong)(output[\"MaxTTL\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlDistribution = (output, context) => {\n    const contents = {\n        Id: undefined,\n        ARN: undefined,\n        Status: undefined,\n        LastModifiedTime: undefined,\n        InProgressInvalidationBatches: undefined,\n        DomainName: undefined,\n        ActiveTrustedSigners: undefined,\n        ActiveTrustedKeyGroups: undefined,\n        DistributionConfig: undefined,\n        AliasICPRecordals: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"ARN\"] !== undefined) {\n        contents.ARN = (0, smithy_client_1.expectString)(output[\"ARN\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"InProgressInvalidationBatches\"] !== undefined) {\n        contents.InProgressInvalidationBatches = (0, smithy_client_1.strictParseInt32)(output[\"InProgressInvalidationBatches\"]);\n    }\n    if (output[\"DomainName\"] !== undefined) {\n        contents.DomainName = (0, smithy_client_1.expectString)(output[\"DomainName\"]);\n    }\n    if (output[\"ActiveTrustedSigners\"] !== undefined) {\n        contents.ActiveTrustedSigners = deserializeAws_restXmlActiveTrustedSigners(output[\"ActiveTrustedSigners\"], context);\n    }\n    if (output[\"ActiveTrustedKeyGroups\"] !== undefined) {\n        contents.ActiveTrustedKeyGroups = deserializeAws_restXmlActiveTrustedKeyGroups(output[\"ActiveTrustedKeyGroups\"], context);\n    }\n    if (output[\"DistributionConfig\"] !== undefined) {\n        contents.DistributionConfig = deserializeAws_restXmlDistributionConfig(output[\"DistributionConfig\"], context);\n    }\n    if (output.AliasICPRecordals === \"\") {\n        contents.AliasICPRecordals = [];\n    }\n    else if (output[\"AliasICPRecordals\"] !== undefined &&\n        output[\"AliasICPRecordals\"][\"AliasICPRecordal\"] !== undefined) {\n        contents.AliasICPRecordals = deserializeAws_restXmlAliasICPRecordals((0, smithy_client_1.getArrayIfSingleItem)(output[\"AliasICPRecordals\"][\"AliasICPRecordal\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlDistributionConfig = (output, context) => {\n    const contents = {\n        CallerReference: undefined,\n        Aliases: undefined,\n        DefaultRootObject: undefined,\n        Origins: undefined,\n        OriginGroups: undefined,\n        DefaultCacheBehavior: undefined,\n        CacheBehaviors: undefined,\n        CustomErrorResponses: undefined,\n        Comment: undefined,\n        Logging: undefined,\n        PriceClass: undefined,\n        Enabled: undefined,\n        ViewerCertificate: undefined,\n        Restrictions: undefined,\n        WebACLId: undefined,\n        HttpVersion: undefined,\n        IsIPV6Enabled: undefined,\n    };\n    if (output[\"CallerReference\"] !== undefined) {\n        contents.CallerReference = (0, smithy_client_1.expectString)(output[\"CallerReference\"]);\n    }\n    if (output[\"Aliases\"] !== undefined) {\n        contents.Aliases = deserializeAws_restXmlAliases(output[\"Aliases\"], context);\n    }\n    if (output[\"DefaultRootObject\"] !== undefined) {\n        contents.DefaultRootObject = (0, smithy_client_1.expectString)(output[\"DefaultRootObject\"]);\n    }\n    if (output[\"Origins\"] !== undefined) {\n        contents.Origins = deserializeAws_restXmlOrigins(output[\"Origins\"], context);\n    }\n    if (output[\"OriginGroups\"] !== undefined) {\n        contents.OriginGroups = deserializeAws_restXmlOriginGroups(output[\"OriginGroups\"], context);\n    }\n    if (output[\"DefaultCacheBehavior\"] !== undefined) {\n        contents.DefaultCacheBehavior = deserializeAws_restXmlDefaultCacheBehavior(output[\"DefaultCacheBehavior\"], context);\n    }\n    if (output[\"CacheBehaviors\"] !== undefined) {\n        contents.CacheBehaviors = deserializeAws_restXmlCacheBehaviors(output[\"CacheBehaviors\"], context);\n    }\n    if (output[\"CustomErrorResponses\"] !== undefined) {\n        contents.CustomErrorResponses = deserializeAws_restXmlCustomErrorResponses(output[\"CustomErrorResponses\"], context);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"Logging\"] !== undefined) {\n        contents.Logging = deserializeAws_restXmlLoggingConfig(output[\"Logging\"], context);\n    }\n    if (output[\"PriceClass\"] !== undefined) {\n        contents.PriceClass = (0, smithy_client_1.expectString)(output[\"PriceClass\"]);\n    }\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"ViewerCertificate\"] !== undefined) {\n        contents.ViewerCertificate = deserializeAws_restXmlViewerCertificate(output[\"ViewerCertificate\"], context);\n    }\n    if (output[\"Restrictions\"] !== undefined) {\n        contents.Restrictions = deserializeAws_restXmlRestrictions(output[\"Restrictions\"], context);\n    }\n    if (output[\"WebACLId\"] !== undefined) {\n        contents.WebACLId = (0, smithy_client_1.expectString)(output[\"WebACLId\"]);\n    }\n    if (output[\"HttpVersion\"] !== undefined) {\n        contents.HttpVersion = (0, smithy_client_1.expectString)(output[\"HttpVersion\"]);\n    }\n    if (output[\"IsIPV6Enabled\"] !== undefined) {\n        contents.IsIPV6Enabled = (0, smithy_client_1.parseBoolean)(output[\"IsIPV6Enabled\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlDistributionIdList = (output, context) => {\n    const contents = {\n        Marker: undefined,\n        NextMarker: undefined,\n        MaxItems: undefined,\n        IsTruncated: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Marker\"] !== undefined) {\n        contents.Marker = (0, smithy_client_1.expectString)(output[\"Marker\"]);\n    }\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(output[\"IsTruncated\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"DistributionId\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlDistributionIdListSummary((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"DistributionId\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlDistributionIdListSummary = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlDistributionList = (output, context) => {\n    const contents = {\n        Marker: undefined,\n        NextMarker: undefined,\n        MaxItems: undefined,\n        IsTruncated: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Marker\"] !== undefined) {\n        contents.Marker = (0, smithy_client_1.expectString)(output[\"Marker\"]);\n    }\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(output[\"IsTruncated\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"DistributionSummary\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlDistributionSummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"DistributionSummary\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlDistributionSummary = (output, context) => {\n    const contents = {\n        Id: undefined,\n        ARN: undefined,\n        Status: undefined,\n        LastModifiedTime: undefined,\n        DomainName: undefined,\n        Aliases: undefined,\n        Origins: undefined,\n        OriginGroups: undefined,\n        DefaultCacheBehavior: undefined,\n        CacheBehaviors: undefined,\n        CustomErrorResponses: undefined,\n        Comment: undefined,\n        PriceClass: undefined,\n        Enabled: undefined,\n        ViewerCertificate: undefined,\n        Restrictions: undefined,\n        WebACLId: undefined,\n        HttpVersion: undefined,\n        IsIPV6Enabled: undefined,\n        AliasICPRecordals: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"ARN\"] !== undefined) {\n        contents.ARN = (0, smithy_client_1.expectString)(output[\"ARN\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"DomainName\"] !== undefined) {\n        contents.DomainName = (0, smithy_client_1.expectString)(output[\"DomainName\"]);\n    }\n    if (output[\"Aliases\"] !== undefined) {\n        contents.Aliases = deserializeAws_restXmlAliases(output[\"Aliases\"], context);\n    }\n    if (output[\"Origins\"] !== undefined) {\n        contents.Origins = deserializeAws_restXmlOrigins(output[\"Origins\"], context);\n    }\n    if (output[\"OriginGroups\"] !== undefined) {\n        contents.OriginGroups = deserializeAws_restXmlOriginGroups(output[\"OriginGroups\"], context);\n    }\n    if (output[\"DefaultCacheBehavior\"] !== undefined) {\n        contents.DefaultCacheBehavior = deserializeAws_restXmlDefaultCacheBehavior(output[\"DefaultCacheBehavior\"], context);\n    }\n    if (output[\"CacheBehaviors\"] !== undefined) {\n        contents.CacheBehaviors = deserializeAws_restXmlCacheBehaviors(output[\"CacheBehaviors\"], context);\n    }\n    if (output[\"CustomErrorResponses\"] !== undefined) {\n        contents.CustomErrorResponses = deserializeAws_restXmlCustomErrorResponses(output[\"CustomErrorResponses\"], context);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"PriceClass\"] !== undefined) {\n        contents.PriceClass = (0, smithy_client_1.expectString)(output[\"PriceClass\"]);\n    }\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"ViewerCertificate\"] !== undefined) {\n        contents.ViewerCertificate = deserializeAws_restXmlViewerCertificate(output[\"ViewerCertificate\"], context);\n    }\n    if (output[\"Restrictions\"] !== undefined) {\n        contents.Restrictions = deserializeAws_restXmlRestrictions(output[\"Restrictions\"], context);\n    }\n    if (output[\"WebACLId\"] !== undefined) {\n        contents.WebACLId = (0, smithy_client_1.expectString)(output[\"WebACLId\"]);\n    }\n    if (output[\"HttpVersion\"] !== undefined) {\n        contents.HttpVersion = (0, smithy_client_1.expectString)(output[\"HttpVersion\"]);\n    }\n    if (output[\"IsIPV6Enabled\"] !== undefined) {\n        contents.IsIPV6Enabled = (0, smithy_client_1.parseBoolean)(output[\"IsIPV6Enabled\"]);\n    }\n    if (output.AliasICPRecordals === \"\") {\n        contents.AliasICPRecordals = [];\n    }\n    else if (output[\"AliasICPRecordals\"] !== undefined &&\n        output[\"AliasICPRecordals\"][\"AliasICPRecordal\"] !== undefined) {\n        contents.AliasICPRecordals = deserializeAws_restXmlAliasICPRecordals((0, smithy_client_1.getArrayIfSingleItem)(output[\"AliasICPRecordals\"][\"AliasICPRecordal\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlDistributionSummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlDistributionSummary(entry, context);\n    });\n};\nconst deserializeAws_restXmlEncryptionEntities = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"EncryptionEntity\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlEncryptionEntityList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"EncryptionEntity\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlEncryptionEntity = (output, context) => {\n    const contents = {\n        PublicKeyId: undefined,\n        ProviderId: undefined,\n        FieldPatterns: undefined,\n    };\n    if (output[\"PublicKeyId\"] !== undefined) {\n        contents.PublicKeyId = (0, smithy_client_1.expectString)(output[\"PublicKeyId\"]);\n    }\n    if (output[\"ProviderId\"] !== undefined) {\n        contents.ProviderId = (0, smithy_client_1.expectString)(output[\"ProviderId\"]);\n    }\n    if (output[\"FieldPatterns\"] !== undefined) {\n        contents.FieldPatterns = deserializeAws_restXmlFieldPatterns(output[\"FieldPatterns\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlEncryptionEntityList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlEncryptionEntity(entry, context);\n    });\n};\nconst deserializeAws_restXmlEndPoint = (output, context) => {\n    const contents = {\n        StreamType: undefined,\n        KinesisStreamConfig: undefined,\n    };\n    if (output[\"StreamType\"] !== undefined) {\n        contents.StreamType = (0, smithy_client_1.expectString)(output[\"StreamType\"]);\n    }\n    if (output[\"KinesisStreamConfig\"] !== undefined) {\n        contents.KinesisStreamConfig = deserializeAws_restXmlKinesisStreamConfig(output[\"KinesisStreamConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlEndPointList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlEndPoint(entry, context);\n    });\n};\nconst deserializeAws_restXmlFieldLevelEncryption = (output, context) => {\n    const contents = {\n        Id: undefined,\n        LastModifiedTime: undefined,\n        FieldLevelEncryptionConfig: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"FieldLevelEncryptionConfig\"] !== undefined) {\n        contents.FieldLevelEncryptionConfig = deserializeAws_restXmlFieldLevelEncryptionConfig(output[\"FieldLevelEncryptionConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlFieldLevelEncryptionConfig = (output, context) => {\n    const contents = {\n        CallerReference: undefined,\n        Comment: undefined,\n        QueryArgProfileConfig: undefined,\n        ContentTypeProfileConfig: undefined,\n    };\n    if (output[\"CallerReference\"] !== undefined) {\n        contents.CallerReference = (0, smithy_client_1.expectString)(output[\"CallerReference\"]);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"QueryArgProfileConfig\"] !== undefined) {\n        contents.QueryArgProfileConfig = deserializeAws_restXmlQueryArgProfileConfig(output[\"QueryArgProfileConfig\"], context);\n    }\n    if (output[\"ContentTypeProfileConfig\"] !== undefined) {\n        contents.ContentTypeProfileConfig = deserializeAws_restXmlContentTypeProfileConfig(output[\"ContentTypeProfileConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlFieldLevelEncryptionList = (output, context) => {\n    const contents = {\n        NextMarker: undefined,\n        MaxItems: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"FieldLevelEncryptionSummary\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlFieldLevelEncryptionSummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"FieldLevelEncryptionSummary\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlFieldLevelEncryptionProfile = (output, context) => {\n    const contents = {\n        Id: undefined,\n        LastModifiedTime: undefined,\n        FieldLevelEncryptionProfileConfig: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"FieldLevelEncryptionProfileConfig\"] !== undefined) {\n        contents.FieldLevelEncryptionProfileConfig = deserializeAws_restXmlFieldLevelEncryptionProfileConfig(output[\"FieldLevelEncryptionProfileConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlFieldLevelEncryptionProfileConfig = (output, context) => {\n    const contents = {\n        Name: undefined,\n        CallerReference: undefined,\n        Comment: undefined,\n        EncryptionEntities: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"CallerReference\"] !== undefined) {\n        contents.CallerReference = (0, smithy_client_1.expectString)(output[\"CallerReference\"]);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"EncryptionEntities\"] !== undefined) {\n        contents.EncryptionEntities = deserializeAws_restXmlEncryptionEntities(output[\"EncryptionEntities\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlFieldLevelEncryptionProfileList = (output, context) => {\n    const contents = {\n        NextMarker: undefined,\n        MaxItems: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"FieldLevelEncryptionProfileSummary\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlFieldLevelEncryptionProfileSummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"FieldLevelEncryptionProfileSummary\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlFieldLevelEncryptionProfileSummary = (output, context) => {\n    const contents = {\n        Id: undefined,\n        LastModifiedTime: undefined,\n        Name: undefined,\n        EncryptionEntities: undefined,\n        Comment: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"EncryptionEntities\"] !== undefined) {\n        contents.EncryptionEntities = deserializeAws_restXmlEncryptionEntities(output[\"EncryptionEntities\"], context);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlFieldLevelEncryptionProfileSummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlFieldLevelEncryptionProfileSummary(entry, context);\n    });\n};\nconst deserializeAws_restXmlFieldLevelEncryptionSummary = (output, context) => {\n    const contents = {\n        Id: undefined,\n        LastModifiedTime: undefined,\n        Comment: undefined,\n        QueryArgProfileConfig: undefined,\n        ContentTypeProfileConfig: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"QueryArgProfileConfig\"] !== undefined) {\n        contents.QueryArgProfileConfig = deserializeAws_restXmlQueryArgProfileConfig(output[\"QueryArgProfileConfig\"], context);\n    }\n    if (output[\"ContentTypeProfileConfig\"] !== undefined) {\n        contents.ContentTypeProfileConfig = deserializeAws_restXmlContentTypeProfileConfig(output[\"ContentTypeProfileConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlFieldLevelEncryptionSummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlFieldLevelEncryptionSummary(entry, context);\n    });\n};\nconst deserializeAws_restXmlFieldList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlFieldPatternList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlFieldPatterns = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"FieldPattern\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlFieldPatternList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"FieldPattern\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlForwardedValues = (output, context) => {\n    const contents = {\n        QueryString: undefined,\n        Cookies: undefined,\n        Headers: undefined,\n        QueryStringCacheKeys: undefined,\n    };\n    if (output[\"QueryString\"] !== undefined) {\n        contents.QueryString = (0, smithy_client_1.parseBoolean)(output[\"QueryString\"]);\n    }\n    if (output[\"Cookies\"] !== undefined) {\n        contents.Cookies = deserializeAws_restXmlCookiePreference(output[\"Cookies\"], context);\n    }\n    if (output[\"Headers\"] !== undefined) {\n        contents.Headers = deserializeAws_restXmlHeaders(output[\"Headers\"], context);\n    }\n    if (output[\"QueryStringCacheKeys\"] !== undefined) {\n        contents.QueryStringCacheKeys = deserializeAws_restXmlQueryStringCacheKeys(output[\"QueryStringCacheKeys\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlFunctionAssociation = (output, context) => {\n    const contents = {\n        FunctionARN: undefined,\n        EventType: undefined,\n    };\n    if (output[\"FunctionARN\"] !== undefined) {\n        contents.FunctionARN = (0, smithy_client_1.expectString)(output[\"FunctionARN\"]);\n    }\n    if (output[\"EventType\"] !== undefined) {\n        contents.EventType = (0, smithy_client_1.expectString)(output[\"EventType\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlFunctionAssociationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlFunctionAssociation(entry, context);\n    });\n};\nconst deserializeAws_restXmlFunctionAssociations = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"FunctionAssociation\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlFunctionAssociationList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"FunctionAssociation\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlFunctionConfig = (output, context) => {\n    const contents = {\n        Comment: undefined,\n        Runtime: undefined,\n    };\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"Runtime\"] !== undefined) {\n        contents.Runtime = (0, smithy_client_1.expectString)(output[\"Runtime\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlFunctionExecutionLogList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlFunctionList = (output, context) => {\n    const contents = {\n        NextMarker: undefined,\n        MaxItems: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"FunctionSummary\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlFunctionSummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"FunctionSummary\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlFunctionMetadata = (output, context) => {\n    const contents = {\n        FunctionARN: undefined,\n        Stage: undefined,\n        CreatedTime: undefined,\n        LastModifiedTime: undefined,\n    };\n    if (output[\"FunctionARN\"] !== undefined) {\n        contents.FunctionARN = (0, smithy_client_1.expectString)(output[\"FunctionARN\"]);\n    }\n    if (output[\"Stage\"] !== undefined) {\n        contents.Stage = (0, smithy_client_1.expectString)(output[\"Stage\"]);\n    }\n    if (output[\"CreatedTime\"] !== undefined) {\n        contents.CreatedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"CreatedTime\"]));\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"LastModifiedTime\"]));\n    }\n    return contents;\n};\nconst deserializeAws_restXmlFunctionSummary = (output, context) => {\n    const contents = {\n        Name: undefined,\n        Status: undefined,\n        FunctionConfig: undefined,\n        FunctionMetadata: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output[\"FunctionConfig\"] !== undefined) {\n        contents.FunctionConfig = deserializeAws_restXmlFunctionConfig(output[\"FunctionConfig\"], context);\n    }\n    if (output[\"FunctionMetadata\"] !== undefined) {\n        contents.FunctionMetadata = deserializeAws_restXmlFunctionMetadata(output[\"FunctionMetadata\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlFunctionSummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlFunctionSummary(entry, context);\n    });\n};\nconst deserializeAws_restXmlGeoRestriction = (output, context) => {\n    const contents = {\n        RestrictionType: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"RestrictionType\"] !== undefined) {\n        contents.RestrictionType = (0, smithy_client_1.expectString)(output[\"RestrictionType\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Location\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlLocationList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Location\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlHeaderList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlHeaders = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Name\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlHeaderList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Name\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlInvalidation = (output, context) => {\n    const contents = {\n        Id: undefined,\n        Status: undefined,\n        CreateTime: undefined,\n        InvalidationBatch: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output[\"CreateTime\"] !== undefined) {\n        contents.CreateTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"CreateTime\"]));\n    }\n    if (output[\"InvalidationBatch\"] !== undefined) {\n        contents.InvalidationBatch = deserializeAws_restXmlInvalidationBatch(output[\"InvalidationBatch\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlInvalidationBatch = (output, context) => {\n    const contents = {\n        Paths: undefined,\n        CallerReference: undefined,\n    };\n    if (output[\"Paths\"] !== undefined) {\n        contents.Paths = deserializeAws_restXmlPaths(output[\"Paths\"], context);\n    }\n    if (output[\"CallerReference\"] !== undefined) {\n        contents.CallerReference = (0, smithy_client_1.expectString)(output[\"CallerReference\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlInvalidationList = (output, context) => {\n    const contents = {\n        Marker: undefined,\n        NextMarker: undefined,\n        MaxItems: undefined,\n        IsTruncated: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Marker\"] !== undefined) {\n        contents.Marker = (0, smithy_client_1.expectString)(output[\"Marker\"]);\n    }\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(output[\"IsTruncated\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"InvalidationSummary\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlInvalidationSummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"InvalidationSummary\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlInvalidationSummary = (output, context) => {\n    const contents = {\n        Id: undefined,\n        CreateTime: undefined,\n        Status: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"CreateTime\"] !== undefined) {\n        contents.CreateTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"CreateTime\"]));\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlInvalidationSummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlInvalidationSummary(entry, context);\n    });\n};\nconst deserializeAws_restXmlKeyGroup = (output, context) => {\n    const contents = {\n        Id: undefined,\n        LastModifiedTime: undefined,\n        KeyGroupConfig: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"KeyGroupConfig\"] !== undefined) {\n        contents.KeyGroupConfig = deserializeAws_restXmlKeyGroupConfig(output[\"KeyGroupConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlKeyGroupConfig = (output, context) => {\n    const contents = {\n        Name: undefined,\n        Items: undefined,\n        Comment: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"PublicKey\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlPublicKeyIdList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"PublicKey\"]), context);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlKeyGroupList = (output, context) => {\n    const contents = {\n        NextMarker: undefined,\n        MaxItems: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"KeyGroupSummary\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlKeyGroupSummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"KeyGroupSummary\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlKeyGroupSummary = (output, context) => {\n    const contents = {\n        KeyGroup: undefined,\n    };\n    if (output[\"KeyGroup\"] !== undefined) {\n        contents.KeyGroup = deserializeAws_restXmlKeyGroup(output[\"KeyGroup\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlKeyGroupSummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlKeyGroupSummary(entry, context);\n    });\n};\nconst deserializeAws_restXmlKeyPairIdList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlKeyPairIds = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"KeyPairId\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlKeyPairIdList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"KeyPairId\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlKGKeyPairIds = (output, context) => {\n    const contents = {\n        KeyGroupId: undefined,\n        KeyPairIds: undefined,\n    };\n    if (output[\"KeyGroupId\"] !== undefined) {\n        contents.KeyGroupId = (0, smithy_client_1.expectString)(output[\"KeyGroupId\"]);\n    }\n    if (output[\"KeyPairIds\"] !== undefined) {\n        contents.KeyPairIds = deserializeAws_restXmlKeyPairIds(output[\"KeyPairIds\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlKGKeyPairIdsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlKGKeyPairIds(entry, context);\n    });\n};\nconst deserializeAws_restXmlKinesisStreamConfig = (output, context) => {\n    const contents = {\n        RoleARN: undefined,\n        StreamARN: undefined,\n    };\n    if (output[\"RoleARN\"] !== undefined) {\n        contents.RoleARN = (0, smithy_client_1.expectString)(output[\"RoleARN\"]);\n    }\n    if (output[\"StreamARN\"] !== undefined) {\n        contents.StreamARN = (0, smithy_client_1.expectString)(output[\"StreamARN\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlLambdaFunctionAssociation = (output, context) => {\n    const contents = {\n        LambdaFunctionARN: undefined,\n        EventType: undefined,\n        IncludeBody: undefined,\n    };\n    if (output[\"LambdaFunctionARN\"] !== undefined) {\n        contents.LambdaFunctionARN = (0, smithy_client_1.expectString)(output[\"LambdaFunctionARN\"]);\n    }\n    if (output[\"EventType\"] !== undefined) {\n        contents.EventType = (0, smithy_client_1.expectString)(output[\"EventType\"]);\n    }\n    if (output[\"IncludeBody\"] !== undefined) {\n        contents.IncludeBody = (0, smithy_client_1.parseBoolean)(output[\"IncludeBody\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlLambdaFunctionAssociationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlLambdaFunctionAssociation(entry, context);\n    });\n};\nconst deserializeAws_restXmlLambdaFunctionAssociations = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"LambdaFunctionAssociation\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlLambdaFunctionAssociationList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"LambdaFunctionAssociation\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlLocationList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlLoggingConfig = (output, context) => {\n    const contents = {\n        Enabled: undefined,\n        IncludeCookies: undefined,\n        Bucket: undefined,\n        Prefix: undefined,\n    };\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"IncludeCookies\"] !== undefined) {\n        contents.IncludeCookies = (0, smithy_client_1.parseBoolean)(output[\"IncludeCookies\"]);\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = (0, smithy_client_1.expectString)(output[\"Bucket\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlMethodsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlMonitoringSubscription = (output, context) => {\n    const contents = {\n        RealtimeMetricsSubscriptionConfig: undefined,\n    };\n    if (output[\"RealtimeMetricsSubscriptionConfig\"] !== undefined) {\n        contents.RealtimeMetricsSubscriptionConfig = deserializeAws_restXmlRealtimeMetricsSubscriptionConfig(output[\"RealtimeMetricsSubscriptionConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOrigin = (output, context) => {\n    const contents = {\n        Id: undefined,\n        DomainName: undefined,\n        OriginPath: undefined,\n        CustomHeaders: undefined,\n        S3OriginConfig: undefined,\n        CustomOriginConfig: undefined,\n        ConnectionAttempts: undefined,\n        ConnectionTimeout: undefined,\n        OriginShield: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"DomainName\"] !== undefined) {\n        contents.DomainName = (0, smithy_client_1.expectString)(output[\"DomainName\"]);\n    }\n    if (output[\"OriginPath\"] !== undefined) {\n        contents.OriginPath = (0, smithy_client_1.expectString)(output[\"OriginPath\"]);\n    }\n    if (output[\"CustomHeaders\"] !== undefined) {\n        contents.CustomHeaders = deserializeAws_restXmlCustomHeaders(output[\"CustomHeaders\"], context);\n    }\n    if (output[\"S3OriginConfig\"] !== undefined) {\n        contents.S3OriginConfig = deserializeAws_restXmlS3OriginConfig(output[\"S3OriginConfig\"], context);\n    }\n    if (output[\"CustomOriginConfig\"] !== undefined) {\n        contents.CustomOriginConfig = deserializeAws_restXmlCustomOriginConfig(output[\"CustomOriginConfig\"], context);\n    }\n    if (output[\"ConnectionAttempts\"] !== undefined) {\n        contents.ConnectionAttempts = (0, smithy_client_1.strictParseInt32)(output[\"ConnectionAttempts\"]);\n    }\n    if (output[\"ConnectionTimeout\"] !== undefined) {\n        contents.ConnectionTimeout = (0, smithy_client_1.strictParseInt32)(output[\"ConnectionTimeout\"]);\n    }\n    if (output[\"OriginShield\"] !== undefined) {\n        contents.OriginShield = deserializeAws_restXmlOriginShield(output[\"OriginShield\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginCustomHeader = (output, context) => {\n    const contents = {\n        HeaderName: undefined,\n        HeaderValue: undefined,\n    };\n    if (output[\"HeaderName\"] !== undefined) {\n        contents.HeaderName = (0, smithy_client_1.expectString)(output[\"HeaderName\"]);\n    }\n    if (output[\"HeaderValue\"] !== undefined) {\n        contents.HeaderValue = (0, smithy_client_1.expectString)(output[\"HeaderValue\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginCustomHeadersList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlOriginCustomHeader(entry, context);\n    });\n};\nconst deserializeAws_restXmlOriginGroup = (output, context) => {\n    const contents = {\n        Id: undefined,\n        FailoverCriteria: undefined,\n        Members: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"FailoverCriteria\"] !== undefined) {\n        contents.FailoverCriteria = deserializeAws_restXmlOriginGroupFailoverCriteria(output[\"FailoverCriteria\"], context);\n    }\n    if (output[\"Members\"] !== undefined) {\n        contents.Members = deserializeAws_restXmlOriginGroupMembers(output[\"Members\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginGroupFailoverCriteria = (output, context) => {\n    const contents = {\n        StatusCodes: undefined,\n    };\n    if (output[\"StatusCodes\"] !== undefined) {\n        contents.StatusCodes = deserializeAws_restXmlStatusCodes(output[\"StatusCodes\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginGroupList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlOriginGroup(entry, context);\n    });\n};\nconst deserializeAws_restXmlOriginGroupMember = (output, context) => {\n    const contents = {\n        OriginId: undefined,\n    };\n    if (output[\"OriginId\"] !== undefined) {\n        contents.OriginId = (0, smithy_client_1.expectString)(output[\"OriginId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginGroupMemberList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlOriginGroupMember(entry, context);\n    });\n};\nconst deserializeAws_restXmlOriginGroupMembers = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"OriginGroupMember\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlOriginGroupMemberList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"OriginGroupMember\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginGroups = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"OriginGroup\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlOriginGroupList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"OriginGroup\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlOrigin(entry, context);\n    });\n};\nconst deserializeAws_restXmlOriginRequestPolicy = (output, context) => {\n    const contents = {\n        Id: undefined,\n        LastModifiedTime: undefined,\n        OriginRequestPolicyConfig: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"OriginRequestPolicyConfig\"] !== undefined) {\n        contents.OriginRequestPolicyConfig = deserializeAws_restXmlOriginRequestPolicyConfig(output[\"OriginRequestPolicyConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginRequestPolicyConfig = (output, context) => {\n    const contents = {\n        Comment: undefined,\n        Name: undefined,\n        HeadersConfig: undefined,\n        CookiesConfig: undefined,\n        QueryStringsConfig: undefined,\n    };\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"HeadersConfig\"] !== undefined) {\n        contents.HeadersConfig = deserializeAws_restXmlOriginRequestPolicyHeadersConfig(output[\"HeadersConfig\"], context);\n    }\n    if (output[\"CookiesConfig\"] !== undefined) {\n        contents.CookiesConfig = deserializeAws_restXmlOriginRequestPolicyCookiesConfig(output[\"CookiesConfig\"], context);\n    }\n    if (output[\"QueryStringsConfig\"] !== undefined) {\n        contents.QueryStringsConfig = deserializeAws_restXmlOriginRequestPolicyQueryStringsConfig(output[\"QueryStringsConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginRequestPolicyCookiesConfig = (output, context) => {\n    const contents = {\n        CookieBehavior: undefined,\n        Cookies: undefined,\n    };\n    if (output[\"CookieBehavior\"] !== undefined) {\n        contents.CookieBehavior = (0, smithy_client_1.expectString)(output[\"CookieBehavior\"]);\n    }\n    if (output[\"Cookies\"] !== undefined) {\n        contents.Cookies = deserializeAws_restXmlCookieNames(output[\"Cookies\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginRequestPolicyHeadersConfig = (output, context) => {\n    const contents = {\n        HeaderBehavior: undefined,\n        Headers: undefined,\n    };\n    if (output[\"HeaderBehavior\"] !== undefined) {\n        contents.HeaderBehavior = (0, smithy_client_1.expectString)(output[\"HeaderBehavior\"]);\n    }\n    if (output[\"Headers\"] !== undefined) {\n        contents.Headers = deserializeAws_restXmlHeaders(output[\"Headers\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginRequestPolicyList = (output, context) => {\n    const contents = {\n        NextMarker: undefined,\n        MaxItems: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"OriginRequestPolicySummary\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlOriginRequestPolicySummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"OriginRequestPolicySummary\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginRequestPolicyQueryStringsConfig = (output, context) => {\n    const contents = {\n        QueryStringBehavior: undefined,\n        QueryStrings: undefined,\n    };\n    if (output[\"QueryStringBehavior\"] !== undefined) {\n        contents.QueryStringBehavior = (0, smithy_client_1.expectString)(output[\"QueryStringBehavior\"]);\n    }\n    if (output[\"QueryStrings\"] !== undefined) {\n        contents.QueryStrings = deserializeAws_restXmlQueryStringNames(output[\"QueryStrings\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginRequestPolicySummary = (output, context) => {\n    const contents = {\n        Type: undefined,\n        OriginRequestPolicy: undefined,\n    };\n    if (output[\"Type\"] !== undefined) {\n        contents.Type = (0, smithy_client_1.expectString)(output[\"Type\"]);\n    }\n    if (output[\"OriginRequestPolicy\"] !== undefined) {\n        contents.OriginRequestPolicy = deserializeAws_restXmlOriginRequestPolicy(output[\"OriginRequestPolicy\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginRequestPolicySummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlOriginRequestPolicySummary(entry, context);\n    });\n};\nconst deserializeAws_restXmlOrigins = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Origin\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlOriginList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Origin\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginShield = (output, context) => {\n    const contents = {\n        Enabled: undefined,\n        OriginShieldRegion: undefined,\n    };\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"OriginShieldRegion\"] !== undefined) {\n        contents.OriginShieldRegion = (0, smithy_client_1.expectString)(output[\"OriginShieldRegion\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlOriginSslProtocols = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"SslProtocol\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlSslProtocolsList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"SslProtocol\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlParametersInCacheKeyAndForwardedToOrigin = (output, context) => {\n    const contents = {\n        EnableAcceptEncodingGzip: undefined,\n        EnableAcceptEncodingBrotli: undefined,\n        HeadersConfig: undefined,\n        CookiesConfig: undefined,\n        QueryStringsConfig: undefined,\n    };\n    if (output[\"EnableAcceptEncodingGzip\"] !== undefined) {\n        contents.EnableAcceptEncodingGzip = (0, smithy_client_1.parseBoolean)(output[\"EnableAcceptEncodingGzip\"]);\n    }\n    if (output[\"EnableAcceptEncodingBrotli\"] !== undefined) {\n        contents.EnableAcceptEncodingBrotli = (0, smithy_client_1.parseBoolean)(output[\"EnableAcceptEncodingBrotli\"]);\n    }\n    if (output[\"HeadersConfig\"] !== undefined) {\n        contents.HeadersConfig = deserializeAws_restXmlCachePolicyHeadersConfig(output[\"HeadersConfig\"], context);\n    }\n    if (output[\"CookiesConfig\"] !== undefined) {\n        contents.CookiesConfig = deserializeAws_restXmlCachePolicyCookiesConfig(output[\"CookiesConfig\"], context);\n    }\n    if (output[\"QueryStringsConfig\"] !== undefined) {\n        contents.QueryStringsConfig = deserializeAws_restXmlCachePolicyQueryStringsConfig(output[\"QueryStringsConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlPathList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlPaths = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Path\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlPathList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Path\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlPublicKey = (output, context) => {\n    const contents = {\n        Id: undefined,\n        CreatedTime: undefined,\n        PublicKeyConfig: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"CreatedTime\"] !== undefined) {\n        contents.CreatedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"CreatedTime\"]));\n    }\n    if (output[\"PublicKeyConfig\"] !== undefined) {\n        contents.PublicKeyConfig = deserializeAws_restXmlPublicKeyConfig(output[\"PublicKeyConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlPublicKeyConfig = (output, context) => {\n    const contents = {\n        CallerReference: undefined,\n        Name: undefined,\n        EncodedKey: undefined,\n        Comment: undefined,\n    };\n    if (output[\"CallerReference\"] !== undefined) {\n        contents.CallerReference = (0, smithy_client_1.expectString)(output[\"CallerReference\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"EncodedKey\"] !== undefined) {\n        contents.EncodedKey = (0, smithy_client_1.expectString)(output[\"EncodedKey\"]);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlPublicKeyIdList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlPublicKeyList = (output, context) => {\n    const contents = {\n        NextMarker: undefined,\n        MaxItems: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"PublicKeySummary\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlPublicKeySummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"PublicKeySummary\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlPublicKeySummary = (output, context) => {\n    const contents = {\n        Id: undefined,\n        Name: undefined,\n        CreatedTime: undefined,\n        EncodedKey: undefined,\n        Comment: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"CreatedTime\"] !== undefined) {\n        contents.CreatedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"CreatedTime\"]));\n    }\n    if (output[\"EncodedKey\"] !== undefined) {\n        contents.EncodedKey = (0, smithy_client_1.expectString)(output[\"EncodedKey\"]);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlPublicKeySummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlPublicKeySummary(entry, context);\n    });\n};\nconst deserializeAws_restXmlQueryArgProfile = (output, context) => {\n    const contents = {\n        QueryArg: undefined,\n        ProfileId: undefined,\n    };\n    if (output[\"QueryArg\"] !== undefined) {\n        contents.QueryArg = (0, smithy_client_1.expectString)(output[\"QueryArg\"]);\n    }\n    if (output[\"ProfileId\"] !== undefined) {\n        contents.ProfileId = (0, smithy_client_1.expectString)(output[\"ProfileId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlQueryArgProfileConfig = (output, context) => {\n    const contents = {\n        ForwardWhenQueryArgProfileIsUnknown: undefined,\n        QueryArgProfiles: undefined,\n    };\n    if (output[\"ForwardWhenQueryArgProfileIsUnknown\"] !== undefined) {\n        contents.ForwardWhenQueryArgProfileIsUnknown = (0, smithy_client_1.parseBoolean)(output[\"ForwardWhenQueryArgProfileIsUnknown\"]);\n    }\n    if (output[\"QueryArgProfiles\"] !== undefined) {\n        contents.QueryArgProfiles = deserializeAws_restXmlQueryArgProfiles(output[\"QueryArgProfiles\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlQueryArgProfileList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlQueryArgProfile(entry, context);\n    });\n};\nconst deserializeAws_restXmlQueryArgProfiles = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"QueryArgProfile\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlQueryArgProfileList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"QueryArgProfile\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlQueryStringCacheKeys = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Name\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlQueryStringCacheKeysList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Name\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlQueryStringCacheKeysList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlQueryStringNames = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Name\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlQueryStringNamesList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Name\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlQueryStringNamesList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlRealtimeLogConfig = (output, context) => {\n    const contents = {\n        ARN: undefined,\n        Name: undefined,\n        SamplingRate: undefined,\n        EndPoints: undefined,\n        Fields: undefined,\n    };\n    if (output[\"ARN\"] !== undefined) {\n        contents.ARN = (0, smithy_client_1.expectString)(output[\"ARN\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"SamplingRate\"] !== undefined) {\n        contents.SamplingRate = (0, smithy_client_1.strictParseLong)(output[\"SamplingRate\"]);\n    }\n    if (output.EndPoints === \"\") {\n        contents.EndPoints = [];\n    }\n    else if (output[\"EndPoints\"] !== undefined && output[\"EndPoints\"][\"member\"] !== undefined) {\n        contents.EndPoints = deserializeAws_restXmlEndPointList((0, smithy_client_1.getArrayIfSingleItem)(output[\"EndPoints\"][\"member\"]), context);\n    }\n    if (output.Fields === \"\") {\n        contents.Fields = [];\n    }\n    else if (output[\"Fields\"] !== undefined && output[\"Fields\"][\"Field\"] !== undefined) {\n        contents.Fields = deserializeAws_restXmlFieldList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Fields\"][\"Field\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlRealtimeLogConfigList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlRealtimeLogConfig(entry, context);\n    });\n};\nconst deserializeAws_restXmlRealtimeLogConfigs = (output, context) => {\n    const contents = {\n        MaxItems: undefined,\n        Items: undefined,\n        IsTruncated: undefined,\n        Marker: undefined,\n        NextMarker: undefined,\n    };\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"member\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlRealtimeLogConfigList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"member\"]), context);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(output[\"IsTruncated\"]);\n    }\n    if (output[\"Marker\"] !== undefined) {\n        contents.Marker = (0, smithy_client_1.expectString)(output[\"Marker\"]);\n    }\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlRealtimeMetricsSubscriptionConfig = (output, context) => {\n    const contents = {\n        RealtimeMetricsSubscriptionStatus: undefined,\n    };\n    if (output[\"RealtimeMetricsSubscriptionStatus\"] !== undefined) {\n        contents.RealtimeMetricsSubscriptionStatus = (0, smithy_client_1.expectString)(output[\"RealtimeMetricsSubscriptionStatus\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicy = (output, context) => {\n    const contents = {\n        Id: undefined,\n        LastModifiedTime: undefined,\n        ResponseHeadersPolicyConfig: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"ResponseHeadersPolicyConfig\"] !== undefined) {\n        contents.ResponseHeadersPolicyConfig = deserializeAws_restXmlResponseHeadersPolicyConfig(output[\"ResponseHeadersPolicyConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicyAccessControlAllowHeaders = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Header\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlAccessControlAllowHeadersList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Header\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicyAccessControlAllowMethods = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Method\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlAccessControlAllowMethodsList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Method\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicyAccessControlAllowOrigins = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Origin\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlAccessControlAllowOriginsList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Origin\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicyAccessControlExposeHeaders = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Header\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlAccessControlExposeHeadersList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Header\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicyConfig = (output, context) => {\n    const contents = {\n        Comment: undefined,\n        Name: undefined,\n        CorsConfig: undefined,\n        SecurityHeadersConfig: undefined,\n        CustomHeadersConfig: undefined,\n        ServerTimingHeadersConfig: undefined,\n    };\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = (0, smithy_client_1.expectString)(output[\"Name\"]);\n    }\n    if (output[\"CorsConfig\"] !== undefined) {\n        contents.CorsConfig = deserializeAws_restXmlResponseHeadersPolicyCorsConfig(output[\"CorsConfig\"], context);\n    }\n    if (output[\"SecurityHeadersConfig\"] !== undefined) {\n        contents.SecurityHeadersConfig = deserializeAws_restXmlResponseHeadersPolicySecurityHeadersConfig(output[\"SecurityHeadersConfig\"], context);\n    }\n    if (output[\"CustomHeadersConfig\"] !== undefined) {\n        contents.CustomHeadersConfig = deserializeAws_restXmlResponseHeadersPolicyCustomHeadersConfig(output[\"CustomHeadersConfig\"], context);\n    }\n    if (output[\"ServerTimingHeadersConfig\"] !== undefined) {\n        contents.ServerTimingHeadersConfig = deserializeAws_restXmlResponseHeadersPolicyServerTimingHeadersConfig(output[\"ServerTimingHeadersConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicyContentSecurityPolicy = (output, context) => {\n    const contents = {\n        Override: undefined,\n        ContentSecurityPolicy: undefined,\n    };\n    if (output[\"Override\"] !== undefined) {\n        contents.Override = (0, smithy_client_1.parseBoolean)(output[\"Override\"]);\n    }\n    if (output[\"ContentSecurityPolicy\"] !== undefined) {\n        contents.ContentSecurityPolicy = (0, smithy_client_1.expectString)(output[\"ContentSecurityPolicy\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicyContentTypeOptions = (output, context) => {\n    const contents = {\n        Override: undefined,\n    };\n    if (output[\"Override\"] !== undefined) {\n        contents.Override = (0, smithy_client_1.parseBoolean)(output[\"Override\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicyCorsConfig = (output, context) => {\n    const contents = {\n        AccessControlAllowOrigins: undefined,\n        AccessControlAllowHeaders: undefined,\n        AccessControlAllowMethods: undefined,\n        AccessControlAllowCredentials: undefined,\n        AccessControlExposeHeaders: undefined,\n        AccessControlMaxAgeSec: undefined,\n        OriginOverride: undefined,\n    };\n    if (output[\"AccessControlAllowOrigins\"] !== undefined) {\n        contents.AccessControlAllowOrigins = deserializeAws_restXmlResponseHeadersPolicyAccessControlAllowOrigins(output[\"AccessControlAllowOrigins\"], context);\n    }\n    if (output[\"AccessControlAllowHeaders\"] !== undefined) {\n        contents.AccessControlAllowHeaders = deserializeAws_restXmlResponseHeadersPolicyAccessControlAllowHeaders(output[\"AccessControlAllowHeaders\"], context);\n    }\n    if (output[\"AccessControlAllowMethods\"] !== undefined) {\n        contents.AccessControlAllowMethods = deserializeAws_restXmlResponseHeadersPolicyAccessControlAllowMethods(output[\"AccessControlAllowMethods\"], context);\n    }\n    if (output[\"AccessControlAllowCredentials\"] !== undefined) {\n        contents.AccessControlAllowCredentials = (0, smithy_client_1.parseBoolean)(output[\"AccessControlAllowCredentials\"]);\n    }\n    if (output[\"AccessControlExposeHeaders\"] !== undefined) {\n        contents.AccessControlExposeHeaders = deserializeAws_restXmlResponseHeadersPolicyAccessControlExposeHeaders(output[\"AccessControlExposeHeaders\"], context);\n    }\n    if (output[\"AccessControlMaxAgeSec\"] !== undefined) {\n        contents.AccessControlMaxAgeSec = (0, smithy_client_1.strictParseInt32)(output[\"AccessControlMaxAgeSec\"]);\n    }\n    if (output[\"OriginOverride\"] !== undefined) {\n        contents.OriginOverride = (0, smithy_client_1.parseBoolean)(output[\"OriginOverride\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicyCustomHeader = (output, context) => {\n    const contents = {\n        Header: undefined,\n        Value: undefined,\n        Override: undefined,\n    };\n    if (output[\"Header\"] !== undefined) {\n        contents.Header = (0, smithy_client_1.expectString)(output[\"Header\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = (0, smithy_client_1.expectString)(output[\"Value\"]);\n    }\n    if (output[\"Override\"] !== undefined) {\n        contents.Override = (0, smithy_client_1.parseBoolean)(output[\"Override\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicyCustomHeaderList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlResponseHeadersPolicyCustomHeader(entry, context);\n    });\n};\nconst deserializeAws_restXmlResponseHeadersPolicyCustomHeadersConfig = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"ResponseHeadersPolicyCustomHeader\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlResponseHeadersPolicyCustomHeaderList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"ResponseHeadersPolicyCustomHeader\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicyFrameOptions = (output, context) => {\n    const contents = {\n        Override: undefined,\n        FrameOption: undefined,\n    };\n    if (output[\"Override\"] !== undefined) {\n        contents.Override = (0, smithy_client_1.parseBoolean)(output[\"Override\"]);\n    }\n    if (output[\"FrameOption\"] !== undefined) {\n        contents.FrameOption = (0, smithy_client_1.expectString)(output[\"FrameOption\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicyList = (output, context) => {\n    const contents = {\n        NextMarker: undefined,\n        MaxItems: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"ResponseHeadersPolicySummary\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlResponseHeadersPolicySummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"ResponseHeadersPolicySummary\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicyReferrerPolicy = (output, context) => {\n    const contents = {\n        Override: undefined,\n        ReferrerPolicy: undefined,\n    };\n    if (output[\"Override\"] !== undefined) {\n        contents.Override = (0, smithy_client_1.parseBoolean)(output[\"Override\"]);\n    }\n    if (output[\"ReferrerPolicy\"] !== undefined) {\n        contents.ReferrerPolicy = (0, smithy_client_1.expectString)(output[\"ReferrerPolicy\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicySecurityHeadersConfig = (output, context) => {\n    const contents = {\n        XSSProtection: undefined,\n        FrameOptions: undefined,\n        ReferrerPolicy: undefined,\n        ContentSecurityPolicy: undefined,\n        ContentTypeOptions: undefined,\n        StrictTransportSecurity: undefined,\n    };\n    if (output[\"XSSProtection\"] !== undefined) {\n        contents.XSSProtection = deserializeAws_restXmlResponseHeadersPolicyXSSProtection(output[\"XSSProtection\"], context);\n    }\n    if (output[\"FrameOptions\"] !== undefined) {\n        contents.FrameOptions = deserializeAws_restXmlResponseHeadersPolicyFrameOptions(output[\"FrameOptions\"], context);\n    }\n    if (output[\"ReferrerPolicy\"] !== undefined) {\n        contents.ReferrerPolicy = deserializeAws_restXmlResponseHeadersPolicyReferrerPolicy(output[\"ReferrerPolicy\"], context);\n    }\n    if (output[\"ContentSecurityPolicy\"] !== undefined) {\n        contents.ContentSecurityPolicy = deserializeAws_restXmlResponseHeadersPolicyContentSecurityPolicy(output[\"ContentSecurityPolicy\"], context);\n    }\n    if (output[\"ContentTypeOptions\"] !== undefined) {\n        contents.ContentTypeOptions = deserializeAws_restXmlResponseHeadersPolicyContentTypeOptions(output[\"ContentTypeOptions\"], context);\n    }\n    if (output[\"StrictTransportSecurity\"] !== undefined) {\n        contents.StrictTransportSecurity = deserializeAws_restXmlResponseHeadersPolicyStrictTransportSecurity(output[\"StrictTransportSecurity\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicyServerTimingHeadersConfig = (output, context) => {\n    const contents = {\n        Enabled: undefined,\n        SamplingRate: undefined,\n    };\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"SamplingRate\"] !== undefined) {\n        contents.SamplingRate = (0, smithy_client_1.strictParseFloat)(output[\"SamplingRate\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicyStrictTransportSecurity = (output, context) => {\n    const contents = {\n        Override: undefined,\n        IncludeSubdomains: undefined,\n        Preload: undefined,\n        AccessControlMaxAgeSec: undefined,\n    };\n    if (output[\"Override\"] !== undefined) {\n        contents.Override = (0, smithy_client_1.parseBoolean)(output[\"Override\"]);\n    }\n    if (output[\"IncludeSubdomains\"] !== undefined) {\n        contents.IncludeSubdomains = (0, smithy_client_1.parseBoolean)(output[\"IncludeSubdomains\"]);\n    }\n    if (output[\"Preload\"] !== undefined) {\n        contents.Preload = (0, smithy_client_1.parseBoolean)(output[\"Preload\"]);\n    }\n    if (output[\"AccessControlMaxAgeSec\"] !== undefined) {\n        contents.AccessControlMaxAgeSec = (0, smithy_client_1.strictParseInt32)(output[\"AccessControlMaxAgeSec\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicySummary = (output, context) => {\n    const contents = {\n        Type: undefined,\n        ResponseHeadersPolicy: undefined,\n    };\n    if (output[\"Type\"] !== undefined) {\n        contents.Type = (0, smithy_client_1.expectString)(output[\"Type\"]);\n    }\n    if (output[\"ResponseHeadersPolicy\"] !== undefined) {\n        contents.ResponseHeadersPolicy = deserializeAws_restXmlResponseHeadersPolicy(output[\"ResponseHeadersPolicy\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlResponseHeadersPolicySummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlResponseHeadersPolicySummary(entry, context);\n    });\n};\nconst deserializeAws_restXmlResponseHeadersPolicyXSSProtection = (output, context) => {\n    const contents = {\n        Override: undefined,\n        Protection: undefined,\n        ModeBlock: undefined,\n        ReportUri: undefined,\n    };\n    if (output[\"Override\"] !== undefined) {\n        contents.Override = (0, smithy_client_1.parseBoolean)(output[\"Override\"]);\n    }\n    if (output[\"Protection\"] !== undefined) {\n        contents.Protection = (0, smithy_client_1.parseBoolean)(output[\"Protection\"]);\n    }\n    if (output[\"ModeBlock\"] !== undefined) {\n        contents.ModeBlock = (0, smithy_client_1.parseBoolean)(output[\"ModeBlock\"]);\n    }\n    if (output[\"ReportUri\"] !== undefined) {\n        contents.ReportUri = (0, smithy_client_1.expectString)(output[\"ReportUri\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlRestrictions = (output, context) => {\n    const contents = {\n        GeoRestriction: undefined,\n    };\n    if (output[\"GeoRestriction\"] !== undefined) {\n        contents.GeoRestriction = deserializeAws_restXmlGeoRestriction(output[\"GeoRestriction\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlS3Origin = (output, context) => {\n    const contents = {\n        DomainName: undefined,\n        OriginAccessIdentity: undefined,\n    };\n    if (output[\"DomainName\"] !== undefined) {\n        contents.DomainName = (0, smithy_client_1.expectString)(output[\"DomainName\"]);\n    }\n    if (output[\"OriginAccessIdentity\"] !== undefined) {\n        contents.OriginAccessIdentity = (0, smithy_client_1.expectString)(output[\"OriginAccessIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlS3OriginConfig = (output, context) => {\n    const contents = {\n        OriginAccessIdentity: undefined,\n    };\n    if (output[\"OriginAccessIdentity\"] !== undefined) {\n        contents.OriginAccessIdentity = (0, smithy_client_1.expectString)(output[\"OriginAccessIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlSigner = (output, context) => {\n    const contents = {\n        AwsAccountNumber: undefined,\n        KeyPairIds: undefined,\n    };\n    if (output[\"AwsAccountNumber\"] !== undefined) {\n        contents.AwsAccountNumber = (0, smithy_client_1.expectString)(output[\"AwsAccountNumber\"]);\n    }\n    if (output[\"KeyPairIds\"] !== undefined) {\n        contents.KeyPairIds = deserializeAws_restXmlKeyPairIds(output[\"KeyPairIds\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlSignerList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlSigner(entry, context);\n    });\n};\nconst deserializeAws_restXmlSslProtocolsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlStatusCodeList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.strictParseInt32)(entry);\n    });\n};\nconst deserializeAws_restXmlStatusCodes = (output, context) => {\n    const contents = {\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"StatusCode\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlStatusCodeList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"StatusCode\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlStreamingDistribution = (output, context) => {\n    const contents = {\n        Id: undefined,\n        ARN: undefined,\n        Status: undefined,\n        LastModifiedTime: undefined,\n        DomainName: undefined,\n        ActiveTrustedSigners: undefined,\n        StreamingDistributionConfig: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"ARN\"] !== undefined) {\n        contents.ARN = (0, smithy_client_1.expectString)(output[\"ARN\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"DomainName\"] !== undefined) {\n        contents.DomainName = (0, smithy_client_1.expectString)(output[\"DomainName\"]);\n    }\n    if (output[\"ActiveTrustedSigners\"] !== undefined) {\n        contents.ActiveTrustedSigners = deserializeAws_restXmlActiveTrustedSigners(output[\"ActiveTrustedSigners\"], context);\n    }\n    if (output[\"StreamingDistributionConfig\"] !== undefined) {\n        contents.StreamingDistributionConfig = deserializeAws_restXmlStreamingDistributionConfig(output[\"StreamingDistributionConfig\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlStreamingDistributionConfig = (output, context) => {\n    const contents = {\n        CallerReference: undefined,\n        S3Origin: undefined,\n        Aliases: undefined,\n        Comment: undefined,\n        Logging: undefined,\n        TrustedSigners: undefined,\n        PriceClass: undefined,\n        Enabled: undefined,\n    };\n    if (output[\"CallerReference\"] !== undefined) {\n        contents.CallerReference = (0, smithy_client_1.expectString)(output[\"CallerReference\"]);\n    }\n    if (output[\"S3Origin\"] !== undefined) {\n        contents.S3Origin = deserializeAws_restXmlS3Origin(output[\"S3Origin\"], context);\n    }\n    if (output[\"Aliases\"] !== undefined) {\n        contents.Aliases = deserializeAws_restXmlAliases(output[\"Aliases\"], context);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"Logging\"] !== undefined) {\n        contents.Logging = deserializeAws_restXmlStreamingLoggingConfig(output[\"Logging\"], context);\n    }\n    if (output[\"TrustedSigners\"] !== undefined) {\n        contents.TrustedSigners = deserializeAws_restXmlTrustedSigners(output[\"TrustedSigners\"], context);\n    }\n    if (output[\"PriceClass\"] !== undefined) {\n        contents.PriceClass = (0, smithy_client_1.expectString)(output[\"PriceClass\"]);\n    }\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlStreamingDistributionList = (output, context) => {\n    const contents = {\n        Marker: undefined,\n        NextMarker: undefined,\n        MaxItems: undefined,\n        IsTruncated: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Marker\"] !== undefined) {\n        contents.Marker = (0, smithy_client_1.expectString)(output[\"Marker\"]);\n    }\n    if (output[\"NextMarker\"] !== undefined) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(output[\"NextMarker\"]);\n    }\n    if (output[\"MaxItems\"] !== undefined) {\n        contents.MaxItems = (0, smithy_client_1.strictParseInt32)(output[\"MaxItems\"]);\n    }\n    if (output[\"IsTruncated\"] !== undefined) {\n        contents.IsTruncated = (0, smithy_client_1.parseBoolean)(output[\"IsTruncated\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"StreamingDistributionSummary\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlStreamingDistributionSummaryList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"StreamingDistributionSummary\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlStreamingDistributionSummary = (output, context) => {\n    const contents = {\n        Id: undefined,\n        ARN: undefined,\n        Status: undefined,\n        LastModifiedTime: undefined,\n        DomainName: undefined,\n        S3Origin: undefined,\n        Aliases: undefined,\n        TrustedSigners: undefined,\n        Comment: undefined,\n        PriceClass: undefined,\n        Enabled: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = (0, smithy_client_1.expectString)(output[\"Id\"]);\n    }\n    if (output[\"ARN\"] !== undefined) {\n        contents.ARN = (0, smithy_client_1.expectString)(output[\"ARN\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = (0, smithy_client_1.expectString)(output[\"Status\"]);\n    }\n    if (output[\"LastModifiedTime\"] !== undefined) {\n        contents.LastModifiedTime = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"LastModifiedTime\"]));\n    }\n    if (output[\"DomainName\"] !== undefined) {\n        contents.DomainName = (0, smithy_client_1.expectString)(output[\"DomainName\"]);\n    }\n    if (output[\"S3Origin\"] !== undefined) {\n        contents.S3Origin = deserializeAws_restXmlS3Origin(output[\"S3Origin\"], context);\n    }\n    if (output[\"Aliases\"] !== undefined) {\n        contents.Aliases = deserializeAws_restXmlAliases(output[\"Aliases\"], context);\n    }\n    if (output[\"TrustedSigners\"] !== undefined) {\n        contents.TrustedSigners = deserializeAws_restXmlTrustedSigners(output[\"TrustedSigners\"], context);\n    }\n    if (output[\"Comment\"] !== undefined) {\n        contents.Comment = (0, smithy_client_1.expectString)(output[\"Comment\"]);\n    }\n    if (output[\"PriceClass\"] !== undefined) {\n        contents.PriceClass = (0, smithy_client_1.expectString)(output[\"PriceClass\"]);\n    }\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlStreamingDistributionSummaryList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlStreamingDistributionSummary(entry, context);\n    });\n};\nconst deserializeAws_restXmlStreamingLoggingConfig = (output, context) => {\n    const contents = {\n        Enabled: undefined,\n        Bucket: undefined,\n        Prefix: undefined,\n    };\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"Bucket\"] !== undefined) {\n        contents.Bucket = (0, smithy_client_1.expectString)(output[\"Bucket\"]);\n    }\n    if (output[\"Prefix\"] !== undefined) {\n        contents.Prefix = (0, smithy_client_1.expectString)(output[\"Prefix\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlTag = (output, context) => {\n    const contents = {\n        Key: undefined,\n        Value: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = (0, smithy_client_1.expectString)(output[\"Key\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = (0, smithy_client_1.expectString)(output[\"Value\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlTagList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return deserializeAws_restXmlTag(entry, context);\n    });\n};\nconst deserializeAws_restXmlTags = (output, context) => {\n    const contents = {\n        Items: undefined,\n    };\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"Tag\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlTagList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"Tag\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlTestResult = (output, context) => {\n    const contents = {\n        FunctionSummary: undefined,\n        ComputeUtilization: undefined,\n        FunctionExecutionLogs: undefined,\n        FunctionErrorMessage: undefined,\n        FunctionOutput: undefined,\n    };\n    if (output[\"FunctionSummary\"] !== undefined) {\n        contents.FunctionSummary = deserializeAws_restXmlFunctionSummary(output[\"FunctionSummary\"], context);\n    }\n    if (output[\"ComputeUtilization\"] !== undefined) {\n        contents.ComputeUtilization = (0, smithy_client_1.expectString)(output[\"ComputeUtilization\"]);\n    }\n    if (output.FunctionExecutionLogs === \"\") {\n        contents.FunctionExecutionLogs = [];\n    }\n    else if (output[\"FunctionExecutionLogs\"] !== undefined && output[\"FunctionExecutionLogs\"][\"member\"] !== undefined) {\n        contents.FunctionExecutionLogs = deserializeAws_restXmlFunctionExecutionLogList((0, smithy_client_1.getArrayIfSingleItem)(output[\"FunctionExecutionLogs\"][\"member\"]), context);\n    }\n    if (output[\"FunctionErrorMessage\"] !== undefined) {\n        contents.FunctionErrorMessage = (0, smithy_client_1.expectString)(output[\"FunctionErrorMessage\"]);\n    }\n    if (output[\"FunctionOutput\"] !== undefined) {\n        contents.FunctionOutput = (0, smithy_client_1.expectString)(output[\"FunctionOutput\"]);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlTrustedKeyGroupIdList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restXmlTrustedKeyGroups = (output, context) => {\n    const contents = {\n        Enabled: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"KeyGroup\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlTrustedKeyGroupIdList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"KeyGroup\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlTrustedSigners = (output, context) => {\n    const contents = {\n        Enabled: undefined,\n        Quantity: undefined,\n        Items: undefined,\n    };\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = (0, smithy_client_1.parseBoolean)(output[\"Enabled\"]);\n    }\n    if (output[\"Quantity\"] !== undefined) {\n        contents.Quantity = (0, smithy_client_1.strictParseInt32)(output[\"Quantity\"]);\n    }\n    if (output.Items === \"\") {\n        contents.Items = [];\n    }\n    else if (output[\"Items\"] !== undefined && output[\"Items\"][\"AwsAccountNumber\"] !== undefined) {\n        contents.Items = deserializeAws_restXmlAwsAccountNumberList((0, smithy_client_1.getArrayIfSingleItem)(output[\"Items\"][\"AwsAccountNumber\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_restXmlViewerCertificate = (output, context) => {\n    const contents = {\n        CloudFrontDefaultCertificate: undefined,\n        IAMCertificateId: undefined,\n        ACMCertificateArn: undefined,\n        SSLSupportMethod: undefined,\n        MinimumProtocolVersion: undefined,\n        Certificate: undefined,\n        CertificateSource: undefined,\n    };\n    if (output[\"CloudFrontDefaultCertificate\"] !== undefined) {\n        contents.CloudFrontDefaultCertificate = (0, smithy_client_1.parseBoolean)(output[\"CloudFrontDefaultCertificate\"]);\n    }\n    if (output[\"IAMCertificateId\"] !== undefined) {\n        contents.IAMCertificateId = (0, smithy_client_1.expectString)(output[\"IAMCertificateId\"]);\n    }\n    if (output[\"ACMCertificateArn\"] !== undefined) {\n        contents.ACMCertificateArn = (0, smithy_client_1.expectString)(output[\"ACMCertificateArn\"]);\n    }\n    if (output[\"SSLSupportMethod\"] !== undefined) {\n        contents.SSLSupportMethod = (0, smithy_client_1.expectString)(output[\"SSLSupportMethod\"]);\n    }\n    if (output[\"MinimumProtocolVersion\"] !== undefined) {\n        contents.MinimumProtocolVersion = (0, smithy_client_1.expectString)(output[\"MinimumProtocolVersion\"]);\n    }\n    if (output[\"Certificate\"] !== undefined) {\n        contents.Certificate = (0, smithy_client_1.expectString)(output[\"Certificate\"]);\n    }\n    if (output[\"CertificateSource\"] !== undefined) {\n        contents.CertificateSource = (0, smithy_client_1.expectString)(output[\"CertificateSource\"]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parsedObj = (0, fast_xml_parser_1.parse)(encoded, {\n            attributeNamePrefix: \"\",\n            ignoreAttributes: false,\n            parseNodeValue: false,\n            trimValues: false,\n            tagValueProcessor: (val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : (0, entities_1.decodeHTML)(val)),\n        });\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return (0, smithy_client_1.getValueFromTextNode)(parsedObjToReturn);\n    }\n    return {};\n});\nconst loadRestXmlErrorCode = (output, data) => {\n    if (data.Error.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst client_sts_1 = require(\"@aws-sdk/client-sts\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst hash_node_1 = require(\"@aws-sdk/hash-node\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst node_http_handler_1 = require(\"@aws-sdk/node-http-handler\");\nconst util_base64_node_1 = require(\"@aws-sdk/util-base64-node\");\nconst util_body_length_node_1 = require(\"@aws-sdk/util-body-length-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst util_utf8_node_1 = require(\"@aws-sdk/util-utf8-node\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@aws-sdk/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@aws-sdk/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        base64Decoder: (_a = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _a !== void 0 ? _a : util_base64_node_1.fromBase64,\n        base64Encoder: (_b = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _b !== void 0 ? _b : util_base64_node_1.toBase64,\n        bodyLengthChecker: (_c = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _c !== void 0 ? _c : util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: (_d = config === null || config === void 0 ? void 0 : config.credentialDefaultProvider) !== null && _d !== void 0 ? _d : (0, client_sts_1.decorateDefaultCredentialProvider)(credential_provider_node_1.defaultProvider),\n        defaultUserAgentProvider: (_e = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _e !== void 0 ? _e : (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: (_f = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _f !== void 0 ? _f : (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: (_g = config === null || config === void 0 ? void 0 : config.region) !== null && _g !== void 0 ? _g : (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: (_h = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _h !== void 0 ? _h : new node_http_handler_1.NodeHttpHandler(defaultConfigProvider),\n        retryMode: (_j = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _j !== void 0 ? _j : (0, node_config_provider_1.loadConfig)({\n            ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async () => (await defaultConfigProvider()).retryMode || middleware_retry_1.DEFAULT_RETRY_MODE,\n        }),\n        sha256: (_k = config === null || config === void 0 ? void 0 : config.sha256) !== null && _k !== void 0 ? _k : hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: (_l = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _l !== void 0 ? _l : node_http_handler_1.streamCollector,\n        useDualstackEndpoint: (_m = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _m !== void 0 ? _m : (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: (_o = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _o !== void 0 ? _o : (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n        utf8Decoder: (_p = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _p !== void 0 ? _p : util_utf8_node_1.fromUtf8,\n        utf8Encoder: (_q = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _q !== void 0 ? _q : util_utf8_node_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\nconst endpoints_1 = require(\"./endpoints\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e;\n    return ({\n        apiVersion: \"2020-05-31\",\n        disableHostPrefix: (_a = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _a !== void 0 ? _a : false,\n        logger: (_b = config === null || config === void 0 ? void 0 : config.logger) !== null && _b !== void 0 ? _b : {},\n        regionInfoProvider: (_c = config === null || config === void 0 ? void 0 : config.regionInfoProvider) !== null && _c !== void 0 ? _c : endpoints_1.defaultRegionInfoProvider,\n        serviceId: (_d = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _d !== void 0 ? _d : \"CloudFront\",\n        urlParser: (_e = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _e !== void 0 ? _e : url_parser_1.parseUrl,\n    });\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./waitForDistributionDeployed\"), exports);\ntslib_1.__exportStar(require(\"./waitForInvalidationCompleted\"), exports);\ntslib_1.__exportStar(require(\"./waitForStreamingDistributionDeployed\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilDistributionDeployed = exports.waitForDistributionDeployed = void 0;\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst GetDistributionCommand_1 = require(\"../commands/GetDistributionCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new GetDistributionCommand_1.GetDistributionCommand(input));\n        reason = result;\n        try {\n            const returnComparator = () => {\n                return result.Distribution.Status;\n            };\n            if (returnComparator() === \"Deployed\") {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForDistributionDeployed = async (params, input) => {\n    const serviceDefaults = { minDelay: 60, maxDelay: 120 };\n    return (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForDistributionDeployed = waitForDistributionDeployed;\nconst waitUntilDistributionDeployed = async (params, input) => {\n    const serviceDefaults = { minDelay: 60, maxDelay: 120 };\n    const result = await (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n    return (0, util_waiter_1.checkExceptions)(result);\n};\nexports.waitUntilDistributionDeployed = waitUntilDistributionDeployed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilInvalidationCompleted = exports.waitForInvalidationCompleted = void 0;\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst GetInvalidationCommand_1 = require(\"../commands/GetInvalidationCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new GetInvalidationCommand_1.GetInvalidationCommand(input));\n        reason = result;\n        try {\n            const returnComparator = () => {\n                return result.Invalidation.Status;\n            };\n            if (returnComparator() === \"Completed\") {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForInvalidationCompleted = async (params, input) => {\n    const serviceDefaults = { minDelay: 20, maxDelay: 120 };\n    return (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForInvalidationCompleted = waitForInvalidationCompleted;\nconst waitUntilInvalidationCompleted = async (params, input) => {\n    const serviceDefaults = { minDelay: 20, maxDelay: 120 };\n    const result = await (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n    return (0, util_waiter_1.checkExceptions)(result);\n};\nexports.waitUntilInvalidationCompleted = waitUntilInvalidationCompleted;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilStreamingDistributionDeployed = exports.waitForStreamingDistributionDeployed = void 0;\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst GetStreamingDistributionCommand_1 = require(\"../commands/GetStreamingDistributionCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new GetStreamingDistributionCommand_1.GetStreamingDistributionCommand(input));\n        reason = result;\n        try {\n            const returnComparator = () => {\n                return result.StreamingDistribution.Status;\n            };\n            if (returnComparator() === \"Deployed\") {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForStreamingDistributionDeployed = async (params, input) => {\n    const serviceDefaults = { minDelay: 60, maxDelay: 120 };\n    return (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForStreamingDistributionDeployed = waitForStreamingDistributionDeployed;\nconst waitUntilStreamingDistributionDeployed = async (params, input) => {\n    const serviceDefaults = { minDelay: 60, maxDelay: 120 };\n    const result = await (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n    return (0, util_waiter_1.checkExceptions)(result);\n};\nexports.waitUntilStreamingDistributionDeployed = waitUntilStreamingDistributionDeployed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSO = void 0;\nconst GetRoleCredentialsCommand_1 = require(\"./commands/GetRoleCredentialsCommand\");\nconst ListAccountRolesCommand_1 = require(\"./commands/ListAccountRolesCommand\");\nconst ListAccountsCommand_1 = require(\"./commands/ListAccountsCommand\");\nconst LogoutCommand_1 = require(\"./commands/LogoutCommand\");\nconst SSOClient_1 = require(\"./SSOClient\");\nclass SSO extends SSOClient_1.SSOClient {\n    getRoleCredentials(args, optionsOrCb, cb) {\n        const command = new GetRoleCredentialsCommand_1.GetRoleCredentialsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listAccountRoles(args, optionsOrCb, cb) {\n        const command = new ListAccountRolesCommand_1.ListAccountRolesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listAccounts(args, optionsOrCb, cb) {\n        const command = new ListAccountsCommand_1.ListAccountsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    logout(args, optionsOrCb, cb) {\n        const command = new LogoutCommand_1.LogoutCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\nexports.SSO = SSO;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSOClient = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst middleware_content_length_1 = require(\"@aws-sdk/middleware-content-length\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_recursion_detection_1 = require(\"@aws-sdk/middleware-recursion-detection\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nclass SSOClient extends smithy_client_1.Client {\n    constructor(configuration) {\n        const _config_0 = (0, runtimeConfig_1.getRuntimeConfig)(configuration);\n        const _config_1 = (0, config_resolver_1.resolveRegionConfig)(_config_0);\n        const _config_2 = (0, config_resolver_1.resolveEndpointsConfig)(_config_1);\n        const _config_3 = (0, middleware_retry_1.resolveRetryConfig)(_config_2);\n        const _config_4 = (0, middleware_host_header_1.resolveHostHeaderConfig)(_config_3);\n        const _config_5 = (0, middleware_user_agent_1.resolveUserAgentConfig)(_config_4);\n        super(_config_5);\n        this.config = _config_5;\n        this.middlewareStack.use((0, middleware_retry_1.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_content_length_1.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_host_header_1.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_logger_1.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_recursion_detection_1.getRecursionDetectionPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_user_agent_1.getUserAgentPlugin)(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\nexports.SSOClient = SSOClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetRoleCredentialsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass GetRoleCredentialsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"GetRoleCredentialsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetRoleCredentialsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetRoleCredentialsResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetRoleCredentialsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetRoleCredentialsCommand)(output, context);\n    }\n}\nexports.GetRoleCredentialsCommand = GetRoleCredentialsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListAccountRolesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass ListAccountRolesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"ListAccountRolesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListAccountRolesRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListAccountRolesResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1ListAccountRolesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1ListAccountRolesCommand)(output, context);\n    }\n}\nexports.ListAccountRolesCommand = ListAccountRolesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListAccountsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass ListAccountsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"ListAccountsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListAccountsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListAccountsResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1ListAccountsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1ListAccountsCommand)(output, context);\n    }\n}\nexports.ListAccountsCommand = ListAccountsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogoutCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass LogoutCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"LogoutCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.LogoutRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1LogoutCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1LogoutCommand)(output, context);\n    }\n}\nexports.LogoutCommand = LogoutCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./GetRoleCredentialsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountRolesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountsCommand\"), exports);\ntslib_1.__exportStar(require(\"./LogoutCommand\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRegionInfoProvider = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst regionHash = {\n    \"ap-east-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-east-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-east-1\",\n    },\n    \"ap-northeast-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-northeast-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-northeast-1\",\n    },\n    \"ap-northeast-2\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-northeast-2.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-northeast-2\",\n    },\n    \"ap-northeast-3\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-northeast-3.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-northeast-3\",\n    },\n    \"ap-south-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-south-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-south-1\",\n    },\n    \"ap-southeast-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-southeast-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-southeast-1\",\n    },\n    \"ap-southeast-2\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-southeast-2.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-southeast-2\",\n    },\n    \"ca-central-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ca-central-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ca-central-1\",\n    },\n    \"eu-central-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-central-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-central-1\",\n    },\n    \"eu-north-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-north-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-north-1\",\n    },\n    \"eu-south-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-south-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-south-1\",\n    },\n    \"eu-west-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-west-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-west-1\",\n    },\n    \"eu-west-2\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-west-2.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-west-2\",\n    },\n    \"eu-west-3\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-west-3.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-west-3\",\n    },\n    \"me-south-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.me-south-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"me-south-1\",\n    },\n    \"sa-east-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.sa-east-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"sa-east-1\",\n    },\n    \"us-east-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.us-east-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-east-1\",\n    },\n    \"us-east-2\": {\n        variants: [\n            {\n                hostname: \"portal.sso.us-east-2.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-east-2\",\n    },\n    \"us-gov-east-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.us-gov-east-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-gov-east-1\",\n    },\n    \"us-gov-west-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.us-gov-west-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-gov-west-1\",\n    },\n    \"us-west-2\": {\n        variants: [\n            {\n                hostname: \"portal.sso.us-west-2.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-west-2\",\n    },\n};\nconst partitionHash = {\n    aws: {\n        regions: [\n            \"af-south-1\",\n            \"ap-east-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-south-1\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-southeast-3\",\n            \"ca-central-1\",\n            \"eu-central-1\",\n            \"eu-north-1\",\n            \"eu-south-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"me-south-1\",\n            \"sa-east-1\",\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n        ],\n        regionRegex: \"^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"portal.sso.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"portal.sso.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-cn\": {\n        regions: [\"cn-north-1\", \"cn-northwest-1\"],\n        regionRegex: \"^cn\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"portal.sso.{region}.amazonaws.com.cn\",\n                tags: [],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.amazonaws.com.cn\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"portal.sso.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-iso\": {\n        regions: [\"us-iso-east-1\", \"us-iso-west-1\"],\n        regionRegex: \"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"portal.sso.{region}.c2s.ic.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.c2s.ic.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-iso-b\": {\n        regions: [\"us-isob-east-1\"],\n        regionRegex: \"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"portal.sso.{region}.sc2s.sgov.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.sc2s.sgov.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-us-gov\": {\n        regions: [\"us-gov-east-1\", \"us-gov-west-1\"],\n        regionRegex: \"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"portal.sso.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"portal.sso.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n};\nconst defaultRegionInfoProvider = async (region, options) => (0, config_resolver_1.getRegionInfo)(region, {\n    ...options,\n    signingService: \"awsssoportal\",\n    regionHash,\n    partitionHash,\n});\nexports.defaultRegionInfoProvider = defaultRegionInfoProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSOServiceException = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./SSO\"), exports);\ntslib_1.__exportStar(require(\"./SSOClient\"), exports);\ntslib_1.__exportStar(require(\"./commands\"), exports);\ntslib_1.__exportStar(require(\"./models\"), exports);\ntslib_1.__exportStar(require(\"./pagination\"), exports);\nvar SSOServiceException_1 = require(\"./models/SSOServiceException\");\nObject.defineProperty(exports, \"SSOServiceException\", { enumerable: true, get: function () { return SSOServiceException_1.SSOServiceException; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSOServiceException = void 0;\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nclass SSOServiceException extends smithy_client_1.ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSOServiceException.prototype);\n    }\n}\nexports.SSOServiceException = SSOServiceException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogoutRequestFilterSensitiveLog = exports.ListAccountsResponseFilterSensitiveLog = exports.ListAccountsRequestFilterSensitiveLog = exports.ListAccountRolesResponseFilterSensitiveLog = exports.RoleInfoFilterSensitiveLog = exports.ListAccountRolesRequestFilterSensitiveLog = exports.GetRoleCredentialsResponseFilterSensitiveLog = exports.RoleCredentialsFilterSensitiveLog = exports.GetRoleCredentialsRequestFilterSensitiveLog = exports.AccountInfoFilterSensitiveLog = exports.UnauthorizedException = exports.TooManyRequestsException = exports.ResourceNotFoundException = exports.InvalidRequestException = void 0;\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst SSOServiceException_1 = require(\"./SSOServiceException\");\nclass InvalidRequestException extends SSOServiceException_1.SSOServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n    }\n}\nexports.InvalidRequestException = InvalidRequestException;\nclass ResourceNotFoundException extends SSOServiceException_1.SSOServiceException {\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n    }\n}\nexports.ResourceNotFoundException = ResourceNotFoundException;\nclass TooManyRequestsException extends SSOServiceException_1.SSOServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyRequestsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyRequestsException.prototype);\n    }\n}\nexports.TooManyRequestsException = TooManyRequestsException;\nclass UnauthorizedException extends SSOServiceException_1.SSOServiceException {\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnauthorizedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnauthorizedException.prototype);\n    }\n}\nexports.UnauthorizedException = UnauthorizedException;\nconst AccountInfoFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.AccountInfoFilterSensitiveLog = AccountInfoFilterSensitiveLog;\nconst GetRoleCredentialsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.GetRoleCredentialsRequestFilterSensitiveLog = GetRoleCredentialsRequestFilterSensitiveLog;\nconst RoleCredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.secretAccessKey && { secretAccessKey: smithy_client_1.SENSITIVE_STRING }),\n    ...(obj.sessionToken && { sessionToken: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.RoleCredentialsFilterSensitiveLog = RoleCredentialsFilterSensitiveLog;\nconst GetRoleCredentialsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.roleCredentials && { roleCredentials: (0, exports.RoleCredentialsFilterSensitiveLog)(obj.roleCredentials) }),\n});\nexports.GetRoleCredentialsResponseFilterSensitiveLog = GetRoleCredentialsResponseFilterSensitiveLog;\nconst ListAccountRolesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.ListAccountRolesRequestFilterSensitiveLog = ListAccountRolesRequestFilterSensitiveLog;\nconst RoleInfoFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.RoleInfoFilterSensitiveLog = RoleInfoFilterSensitiveLog;\nconst ListAccountRolesResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListAccountRolesResponseFilterSensitiveLog = ListAccountRolesResponseFilterSensitiveLog;\nconst ListAccountsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.ListAccountsRequestFilterSensitiveLog = ListAccountsRequestFilterSensitiveLog;\nconst ListAccountsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.ListAccountsResponseFilterSensitiveLog = ListAccountsResponseFilterSensitiveLog;\nconst LogoutRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n});\nexports.LogoutRequestFilterSensitiveLog = LogoutRequestFilterSensitiveLog;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListAccountRoles = void 0;\nconst ListAccountRolesCommand_1 = require(\"../commands/ListAccountRolesCommand\");\nconst SSO_1 = require(\"../SSO\");\nconst SSOClient_1 = require(\"../SSOClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListAccountRolesCommand_1.ListAccountRolesCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listAccountRoles(input, ...args);\n};\nasync function* paginateListAccountRoles(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof SSO_1.SSO) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SSOClient_1.SSOClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SSO | SSOClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.nextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\nexports.paginateListAccountRoles = paginateListAccountRoles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListAccounts = void 0;\nconst ListAccountsCommand_1 = require(\"../commands/ListAccountsCommand\");\nconst SSO_1 = require(\"../SSO\");\nconst SSOClient_1 = require(\"../SSOClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListAccountsCommand_1.ListAccountsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listAccounts(input, ...args);\n};\nasync function* paginateListAccounts(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof SSO_1.SSO) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SSOClient_1.SSOClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SSO | SSOClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.nextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\nexports.paginateListAccounts = paginateListAccounts;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./Interfaces\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountRolesPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountsPaginator\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeAws_restJson1LogoutCommand = exports.deserializeAws_restJson1ListAccountsCommand = exports.deserializeAws_restJson1ListAccountRolesCommand = exports.deserializeAws_restJson1GetRoleCredentialsCommand = exports.serializeAws_restJson1LogoutCommand = exports.serializeAws_restJson1ListAccountsCommand = exports.serializeAws_restJson1ListAccountRolesCommand = exports.serializeAws_restJson1GetRoleCredentialsCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst SSOServiceException_1 = require(\"../models/SSOServiceException\");\nconst serializeAws_restJson1GetRoleCredentialsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/federation/credentials\";\n    const query = map({\n        role_name: [, input.roleName],\n        account_id: [, input.accountId],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetRoleCredentialsCommand = serializeAws_restJson1GetRoleCredentialsCommand;\nconst serializeAws_restJson1ListAccountRolesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/roles\";\n    const query = map({\n        next_token: [, input.nextToken],\n        max_result: [() => input.maxResults !== void 0, () => input.maxResults.toString()],\n        account_id: [, input.accountId],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListAccountRolesCommand = serializeAws_restJson1ListAccountRolesCommand;\nconst serializeAws_restJson1ListAccountsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/accounts\";\n    const query = map({\n        next_token: [, input.nextToken],\n        max_result: [() => input.maxResults !== void 0, () => input.maxResults.toString()],\n    });\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListAccountsCommand = serializeAws_restJson1ListAccountsCommand;\nconst serializeAws_restJson1LogoutCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/logout\";\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1LogoutCommand = serializeAws_restJson1LogoutCommand;\nconst deserializeAws_restJson1GetRoleCredentialsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetRoleCredentialsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.roleCredentials != null) {\n        contents.roleCredentials = deserializeAws_restJson1RoleCredentials(data.roleCredentials, context);\n    }\n    return contents;\n};\nexports.deserializeAws_restJson1GetRoleCredentialsCommand = deserializeAws_restJson1GetRoleCredentialsCommand;\nconst deserializeAws_restJson1GetRoleCredentialsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody,\n                exceptionCtor: SSOServiceException_1.SSOServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restJson1ListAccountRolesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListAccountRolesCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.nextToken != null) {\n        contents.nextToken = (0, smithy_client_1.expectString)(data.nextToken);\n    }\n    if (data.roleList != null) {\n        contents.roleList = deserializeAws_restJson1RoleListType(data.roleList, context);\n    }\n    return contents;\n};\nexports.deserializeAws_restJson1ListAccountRolesCommand = deserializeAws_restJson1ListAccountRolesCommand;\nconst deserializeAws_restJson1ListAccountRolesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody,\n                exceptionCtor: SSOServiceException_1.SSOServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restJson1ListAccountsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListAccountsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.accountList != null) {\n        contents.accountList = deserializeAws_restJson1AccountListType(data.accountList, context);\n    }\n    if (data.nextToken != null) {\n        contents.nextToken = (0, smithy_client_1.expectString)(data.nextToken);\n    }\n    return contents;\n};\nexports.deserializeAws_restJson1ListAccountsCommand = deserializeAws_restJson1ListAccountsCommand;\nconst deserializeAws_restJson1ListAccountsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody,\n                exceptionCtor: SSOServiceException_1.SSOServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_restJson1LogoutCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1LogoutCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nexports.deserializeAws_restJson1LogoutCommand = deserializeAws_restJson1LogoutCommand;\nconst deserializeAws_restJson1LogoutCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody,\n                exceptionCtor: SSOServiceException_1.SSOServiceException,\n                errorCode,\n            });\n    }\n};\nconst map = smithy_client_1.map;\nconst deserializeAws_restJson1InvalidRequestExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.message != null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    const exception = new models_0_1.InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1ResourceNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.message != null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    const exception = new models_0_1.ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1TooManyRequestsExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.message != null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    const exception = new models_0_1.TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1UnauthorizedExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.message != null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    const exception = new models_0_1.UnauthorizedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1AccountInfo = (output, context) => {\n    return {\n        accountId: (0, smithy_client_1.expectString)(output.accountId),\n        accountName: (0, smithy_client_1.expectString)(output.accountName),\n        emailAddress: (0, smithy_client_1.expectString)(output.emailAddress),\n    };\n};\nconst deserializeAws_restJson1AccountListType = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1AccountInfo(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1RoleCredentials = (output, context) => {\n    return {\n        accessKeyId: (0, smithy_client_1.expectString)(output.accessKeyId),\n        expiration: (0, smithy_client_1.expectLong)(output.expiration),\n        secretAccessKey: (0, smithy_client_1.expectString)(output.secretAccessKey),\n        sessionToken: (0, smithy_client_1.expectString)(output.sessionToken),\n    };\n};\nconst deserializeAws_restJson1RoleInfo = (output, context) => {\n    return {\n        accountId: (0, smithy_client_1.expectString)(output.accountId),\n        roleName: (0, smithy_client_1.expectString)(output.roleName),\n    };\n};\nconst deserializeAws_restJson1RoleListType = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1RoleInfo(entry, context);\n    });\n    return retVal;\n};\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst hash_node_1 = require(\"@aws-sdk/hash-node\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst node_http_handler_1 = require(\"@aws-sdk/node-http-handler\");\nconst util_base64_node_1 = require(\"@aws-sdk/util-base64-node\");\nconst util_body_length_node_1 = require(\"@aws-sdk/util-body-length-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst util_utf8_node_1 = require(\"@aws-sdk/util-utf8-node\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@aws-sdk/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@aws-sdk/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        base64Decoder: (_a = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _a !== void 0 ? _a : util_base64_node_1.fromBase64,\n        base64Encoder: (_b = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _b !== void 0 ? _b : util_base64_node_1.toBase64,\n        bodyLengthChecker: (_c = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _c !== void 0 ? _c : util_body_length_node_1.calculateBodyLength,\n        defaultUserAgentProvider: (_d = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _d !== void 0 ? _d : (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: (_e = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _e !== void 0 ? _e : (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: (_f = config === null || config === void 0 ? void 0 : config.region) !== null && _f !== void 0 ? _f : (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: (_g = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _g !== void 0 ? _g : new node_http_handler_1.NodeHttpHandler(defaultConfigProvider),\n        retryMode: (_h = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _h !== void 0 ? _h : (0, node_config_provider_1.loadConfig)({\n            ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async () => (await defaultConfigProvider()).retryMode || middleware_retry_1.DEFAULT_RETRY_MODE,\n        }),\n        sha256: (_j = config === null || config === void 0 ? void 0 : config.sha256) !== null && _j !== void 0 ? _j : hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: (_k = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _k !== void 0 ? _k : node_http_handler_1.streamCollector,\n        useDualstackEndpoint: (_l = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _l !== void 0 ? _l : (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: (_m = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _m !== void 0 ? _m : (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n        utf8Decoder: (_o = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _o !== void 0 ? _o : util_utf8_node_1.fromUtf8,\n        utf8Encoder: (_p = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _p !== void 0 ? _p : util_utf8_node_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\nconst endpoints_1 = require(\"./endpoints\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e;\n    return ({\n        apiVersion: \"2019-06-10\",\n        disableHostPrefix: (_a = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _a !== void 0 ? _a : false,\n        logger: (_b = config === null || config === void 0 ? void 0 : config.logger) !== null && _b !== void 0 ? _b : {},\n        regionInfoProvider: (_c = config === null || config === void 0 ? void 0 : config.regionInfoProvider) !== null && _c !== void 0 ? _c : endpoints_1.defaultRegionInfoProvider,\n        serviceId: (_d = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _d !== void 0 ? _d : \"SSO\",\n        urlParser: (_e = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _e !== void 0 ? _e : url_parser_1.parseUrl,\n    });\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STS = void 0;\nconst AssumeRoleCommand_1 = require(\"./commands/AssumeRoleCommand\");\nconst AssumeRoleWithSAMLCommand_1 = require(\"./commands/AssumeRoleWithSAMLCommand\");\nconst AssumeRoleWithWebIdentityCommand_1 = require(\"./commands/AssumeRoleWithWebIdentityCommand\");\nconst DecodeAuthorizationMessageCommand_1 = require(\"./commands/DecodeAuthorizationMessageCommand\");\nconst GetAccessKeyInfoCommand_1 = require(\"./commands/GetAccessKeyInfoCommand\");\nconst GetCallerIdentityCommand_1 = require(\"./commands/GetCallerIdentityCommand\");\nconst GetFederationTokenCommand_1 = require(\"./commands/GetFederationTokenCommand\");\nconst GetSessionTokenCommand_1 = require(\"./commands/GetSessionTokenCommand\");\nconst STSClient_1 = require(\"./STSClient\");\nclass STS extends STSClient_1.STSClient {\n    assumeRole(args, optionsOrCb, cb) {\n        const command = new AssumeRoleCommand_1.AssumeRoleCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    assumeRoleWithSAML(args, optionsOrCb, cb) {\n        const command = new AssumeRoleWithSAMLCommand_1.AssumeRoleWithSAMLCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    assumeRoleWithWebIdentity(args, optionsOrCb, cb) {\n        const command = new AssumeRoleWithWebIdentityCommand_1.AssumeRoleWithWebIdentityCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    decodeAuthorizationMessage(args, optionsOrCb, cb) {\n        const command = new DecodeAuthorizationMessageCommand_1.DecodeAuthorizationMessageCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getAccessKeyInfo(args, optionsOrCb, cb) {\n        const command = new GetAccessKeyInfoCommand_1.GetAccessKeyInfoCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getCallerIdentity(args, optionsOrCb, cb) {\n        const command = new GetCallerIdentityCommand_1.GetCallerIdentityCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getFederationToken(args, optionsOrCb, cb) {\n        const command = new GetFederationTokenCommand_1.GetFederationTokenCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getSessionToken(args, optionsOrCb, cb) {\n        const command = new GetSessionTokenCommand_1.GetSessionTokenCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\nexports.STS = STS;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STSClient = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst middleware_content_length_1 = require(\"@aws-sdk/middleware-content-length\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_recursion_detection_1 = require(\"@aws-sdk/middleware-recursion-detection\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst middleware_sdk_sts_1 = require(\"@aws-sdk/middleware-sdk-sts\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nclass STSClient extends smithy_client_1.Client {\n    constructor(configuration) {\n        const _config_0 = (0, runtimeConfig_1.getRuntimeConfig)(configuration);\n        const _config_1 = (0, config_resolver_1.resolveRegionConfig)(_config_0);\n        const _config_2 = (0, config_resolver_1.resolveEndpointsConfig)(_config_1);\n        const _config_3 = (0, middleware_retry_1.resolveRetryConfig)(_config_2);\n        const _config_4 = (0, middleware_host_header_1.resolveHostHeaderConfig)(_config_3);\n        const _config_5 = (0, middleware_sdk_sts_1.resolveStsAuthConfig)(_config_4, { stsClientCtor: STSClient });\n        const _config_6 = (0, middleware_user_agent_1.resolveUserAgentConfig)(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use((0, middleware_retry_1.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_content_length_1.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_host_header_1.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_logger_1.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_recursion_detection_1.getRecursionDetectionPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_user_agent_1.getUserAgentPlugin)(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\nexports.STSClient = STSClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass AssumeRoleCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryAssumeRoleCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryAssumeRoleCommand)(output, context);\n    }\n}\nexports.AssumeRoleCommand = AssumeRoleCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleWithSAMLCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass AssumeRoleWithSAMLCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleWithSAMLCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleWithSAMLRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleWithSAMLResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryAssumeRoleWithSAMLCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryAssumeRoleWithSAMLCommand)(output, context);\n    }\n}\nexports.AssumeRoleWithSAMLCommand = AssumeRoleWithSAMLCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleWithWebIdentityCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass AssumeRoleWithWebIdentityCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleWithWebIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleWithWebIdentityRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleWithWebIdentityResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryAssumeRoleWithWebIdentityCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryAssumeRoleWithWebIdentityCommand)(output, context);\n    }\n}\nexports.AssumeRoleWithWebIdentityCommand = AssumeRoleWithWebIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DecodeAuthorizationMessageCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DecodeAuthorizationMessageCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"DecodeAuthorizationMessageCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DecodeAuthorizationMessageRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DecodeAuthorizationMessageResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryDecodeAuthorizationMessageCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryDecodeAuthorizationMessageCommand)(output, context);\n    }\n}\nexports.DecodeAuthorizationMessageCommand = DecodeAuthorizationMessageCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetAccessKeyInfoCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetAccessKeyInfoCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetAccessKeyInfoCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetAccessKeyInfoRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetAccessKeyInfoResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryGetAccessKeyInfoCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryGetAccessKeyInfoCommand)(output, context);\n    }\n}\nexports.GetAccessKeyInfoCommand = GetAccessKeyInfoCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetCallerIdentityCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetCallerIdentityCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetCallerIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetCallerIdentityRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetCallerIdentityResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryGetCallerIdentityCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryGetCallerIdentityCommand)(output, context);\n    }\n}\nexports.GetCallerIdentityCommand = GetCallerIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFederationTokenCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetFederationTokenCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetFederationTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetFederationTokenRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetFederationTokenResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryGetFederationTokenCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryGetFederationTokenCommand)(output, context);\n    }\n}\nexports.GetFederationTokenCommand = GetFederationTokenCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetSessionTokenCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetSessionTokenCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetSessionTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetSessionTokenRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetSessionTokenResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryGetSessionTokenCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryGetSessionTokenCommand)(output, context);\n    }\n}\nexports.GetSessionTokenCommand = GetSessionTokenCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./AssumeRoleCommand\"), exports);\ntslib_1.__exportStar(require(\"./AssumeRoleWithSAMLCommand\"), exports);\ntslib_1.__exportStar(require(\"./AssumeRoleWithWebIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./DecodeAuthorizationMessageCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetAccessKeyInfoCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetCallerIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetFederationTokenCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetSessionTokenCommand\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decorateDefaultCredentialProvider = exports.getDefaultRoleAssumerWithWebIdentity = exports.getDefaultRoleAssumer = void 0;\nconst defaultStsRoleAssumers_1 = require(\"./defaultStsRoleAssumers\");\nconst STSClient_1 = require(\"./STSClient\");\nconst getDefaultRoleAssumer = (stsOptions = {}) => (0, defaultStsRoleAssumers_1.getDefaultRoleAssumer)(stsOptions, STSClient_1.STSClient);\nexports.getDefaultRoleAssumer = getDefaultRoleAssumer;\nconst getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}) => (0, defaultStsRoleAssumers_1.getDefaultRoleAssumerWithWebIdentity)(stsOptions, STSClient_1.STSClient);\nexports.getDefaultRoleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity;\nconst decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: (0, exports.getDefaultRoleAssumer)(input),\n    roleAssumerWithWebIdentity: (0, exports.getDefaultRoleAssumerWithWebIdentity)(input),\n    ...input,\n});\nexports.decorateDefaultCredentialProvider = decorateDefaultCredentialProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decorateDefaultCredentialProvider = exports.getDefaultRoleAssumerWithWebIdentity = exports.getDefaultRoleAssumer = void 0;\nconst AssumeRoleCommand_1 = require(\"./commands/AssumeRoleCommand\");\nconst AssumeRoleWithWebIdentityCommand_1 = require(\"./commands/AssumeRoleWithWebIdentityCommand\");\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst decorateDefaultRegion = (region) => {\n    if (typeof region !== \"function\") {\n        return region === undefined ? ASSUME_ROLE_DEFAULT_REGION : region;\n    }\n    return async () => {\n        try {\n            return await region();\n        }\n        catch (e) {\n            return ASSUME_ROLE_DEFAULT_REGION;\n        }\n    };\n};\nconst getDefaultRoleAssumer = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleCommand_1.AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexports.getDefaultRoleAssumer = getDefaultRoleAssumer;\nconst getDefaultRoleAssumerWithWebIdentity = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleWithWebIdentityCommand_1.AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexports.getDefaultRoleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity;\nconst decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: (0, exports.getDefaultRoleAssumer)(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: (0, exports.getDefaultRoleAssumerWithWebIdentity)(input, input.stsClientCtor),\n    ...input,\n});\nexports.decorateDefaultCredentialProvider = decorateDefaultCredentialProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRegionInfoProvider = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst regionHash = {\n    \"aws-global\": {\n        variants: [\n            {\n                hostname: \"sts.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-east-1\",\n    },\n    \"us-east-1\": {\n        variants: [\n            {\n                hostname: \"sts-fips.us-east-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-east-2\": {\n        variants: [\n            {\n                hostname: \"sts-fips.us-east-2.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-gov-east-1\": {\n        variants: [\n            {\n                hostname: \"sts.us-gov-east-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-gov-west-1\": {\n        variants: [\n            {\n                hostname: \"sts.us-gov-west-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-west-1\": {\n        variants: [\n            {\n                hostname: \"sts-fips.us-west-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-west-2\": {\n        variants: [\n            {\n                hostname: \"sts-fips.us-west-2.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n};\nconst partitionHash = {\n    aws: {\n        regions: [\n            \"af-south-1\",\n            \"ap-east-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-south-1\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-southeast-3\",\n            \"aws-global\",\n            \"ca-central-1\",\n            \"eu-central-1\",\n            \"eu-north-1\",\n            \"eu-south-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"me-south-1\",\n            \"sa-east-1\",\n            \"us-east-1\",\n            \"us-east-1-fips\",\n            \"us-east-2\",\n            \"us-east-2-fips\",\n            \"us-west-1\",\n            \"us-west-1-fips\",\n            \"us-west-2\",\n            \"us-west-2-fips\",\n        ],\n        regionRegex: \"^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sts.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"sts-fips.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"sts-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"sts.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-cn\": {\n        regions: [\"cn-north-1\", \"cn-northwest-1\"],\n        regionRegex: \"^cn\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sts.{region}.amazonaws.com.cn\",\n                tags: [],\n            },\n            {\n                hostname: \"sts-fips.{region}.amazonaws.com.cn\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"sts-fips.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"sts.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-iso\": {\n        regions: [\"us-iso-east-1\", \"us-iso-west-1\"],\n        regionRegex: \"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sts.{region}.c2s.ic.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"sts-fips.{region}.c2s.ic.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-iso-b\": {\n        regions: [\"us-isob-east-1\"],\n        regionRegex: \"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sts.{region}.sc2s.sgov.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"sts-fips.{region}.sc2s.sgov.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-us-gov\": {\n        regions: [\"us-gov-east-1\", \"us-gov-east-1-fips\", \"us-gov-west-1\", \"us-gov-west-1-fips\"],\n        regionRegex: \"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sts.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"sts.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"sts-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"sts.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n};\nconst defaultRegionInfoProvider = async (region, options) => (0, config_resolver_1.getRegionInfo)(region, {\n    ...options,\n    signingService: \"sts\",\n    regionHash,\n    partitionHash,\n});\nexports.defaultRegionInfoProvider = defaultRegionInfoProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STSServiceException = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./STS\"), exports);\ntslib_1.__exportStar(require(\"./STSClient\"), exports);\ntslib_1.__exportStar(require(\"./commands\"), exports);\ntslib_1.__exportStar(require(\"./defaultRoleAssumers\"), exports);\ntslib_1.__exportStar(require(\"./models\"), exports);\nvar STSServiceException_1 = require(\"./models/STSServiceException\");\nObject.defineProperty(exports, \"STSServiceException\", { enumerable: true, get: function () { return STSServiceException_1.STSServiceException; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STSServiceException = void 0;\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nclass STSServiceException extends smithy_client_1.ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\nexports.STSServiceException = STSServiceException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetSessionTokenResponseFilterSensitiveLog = exports.GetSessionTokenRequestFilterSensitiveLog = exports.GetFederationTokenResponseFilterSensitiveLog = exports.FederatedUserFilterSensitiveLog = exports.GetFederationTokenRequestFilterSensitiveLog = exports.GetCallerIdentityResponseFilterSensitiveLog = exports.GetCallerIdentityRequestFilterSensitiveLog = exports.GetAccessKeyInfoResponseFilterSensitiveLog = exports.GetAccessKeyInfoRequestFilterSensitiveLog = exports.DecodeAuthorizationMessageResponseFilterSensitiveLog = exports.DecodeAuthorizationMessageRequestFilterSensitiveLog = exports.AssumeRoleWithWebIdentityResponseFilterSensitiveLog = exports.AssumeRoleWithWebIdentityRequestFilterSensitiveLog = exports.AssumeRoleWithSAMLResponseFilterSensitiveLog = exports.AssumeRoleWithSAMLRequestFilterSensitiveLog = exports.AssumeRoleResponseFilterSensitiveLog = exports.CredentialsFilterSensitiveLog = exports.AssumeRoleRequestFilterSensitiveLog = exports.TagFilterSensitiveLog = exports.PolicyDescriptorTypeFilterSensitiveLog = exports.AssumedRoleUserFilterSensitiveLog = exports.InvalidAuthorizationMessageException = exports.IDPCommunicationErrorException = exports.InvalidIdentityTokenException = exports.IDPRejectedClaimException = exports.RegionDisabledException = exports.PackedPolicyTooLargeException = exports.MalformedPolicyDocumentException = exports.ExpiredTokenException = void 0;\nconst STSServiceException_1 = require(\"./STSServiceException\");\nclass ExpiredTokenException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexports.ExpiredTokenException = ExpiredTokenException;\nclass MalformedPolicyDocumentException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MalformedPolicyDocumentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexports.MalformedPolicyDocumentException = MalformedPolicyDocumentException;\nclass PackedPolicyTooLargeException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PackedPolicyTooLargeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexports.PackedPolicyTooLargeException = PackedPolicyTooLargeException;\nclass RegionDisabledException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RegionDisabledException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexports.RegionDisabledException = RegionDisabledException;\nclass IDPRejectedClaimException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPRejectedClaimException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexports.IDPRejectedClaimException = IDPRejectedClaimException;\nclass InvalidIdentityTokenException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidIdentityTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexports.InvalidIdentityTokenException = InvalidIdentityTokenException;\nclass IDPCommunicationErrorException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPCommunicationErrorException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\nexports.IDPCommunicationErrorException = IDPCommunicationErrorException;\nclass InvalidAuthorizationMessageException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAuthorizationMessageException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAuthorizationMessageException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAuthorizationMessageException.prototype);\n    }\n}\nexports.InvalidAuthorizationMessageException = InvalidAuthorizationMessageException;\nconst AssumedRoleUserFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.AssumedRoleUserFilterSensitiveLog = AssumedRoleUserFilterSensitiveLog;\nconst PolicyDescriptorTypeFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.PolicyDescriptorTypeFilterSensitiveLog = PolicyDescriptorTypeFilterSensitiveLog;\nconst TagFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.TagFilterSensitiveLog = TagFilterSensitiveLog;\nconst AssumeRoleRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.AssumeRoleRequestFilterSensitiveLog = AssumeRoleRequestFilterSensitiveLog;\nconst CredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.CredentialsFilterSensitiveLog = CredentialsFilterSensitiveLog;\nconst AssumeRoleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.AssumeRoleResponseFilterSensitiveLog = AssumeRoleResponseFilterSensitiveLog;\nconst AssumeRoleWithSAMLRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.AssumeRoleWithSAMLRequestFilterSensitiveLog = AssumeRoleWithSAMLRequestFilterSensitiveLog;\nconst AssumeRoleWithSAMLResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.AssumeRoleWithSAMLResponseFilterSensitiveLog = AssumeRoleWithSAMLResponseFilterSensitiveLog;\nconst AssumeRoleWithWebIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.AssumeRoleWithWebIdentityRequestFilterSensitiveLog = AssumeRoleWithWebIdentityRequestFilterSensitiveLog;\nconst AssumeRoleWithWebIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.AssumeRoleWithWebIdentityResponseFilterSensitiveLog = AssumeRoleWithWebIdentityResponseFilterSensitiveLog;\nconst DecodeAuthorizationMessageRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DecodeAuthorizationMessageRequestFilterSensitiveLog = DecodeAuthorizationMessageRequestFilterSensitiveLog;\nconst DecodeAuthorizationMessageResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.DecodeAuthorizationMessageResponseFilterSensitiveLog = DecodeAuthorizationMessageResponseFilterSensitiveLog;\nconst GetAccessKeyInfoRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetAccessKeyInfoRequestFilterSensitiveLog = GetAccessKeyInfoRequestFilterSensitiveLog;\nconst GetAccessKeyInfoResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetAccessKeyInfoResponseFilterSensitiveLog = GetAccessKeyInfoResponseFilterSensitiveLog;\nconst GetCallerIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetCallerIdentityRequestFilterSensitiveLog = GetCallerIdentityRequestFilterSensitiveLog;\nconst GetCallerIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetCallerIdentityResponseFilterSensitiveLog = GetCallerIdentityResponseFilterSensitiveLog;\nconst GetFederationTokenRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetFederationTokenRequestFilterSensitiveLog = GetFederationTokenRequestFilterSensitiveLog;\nconst FederatedUserFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.FederatedUserFilterSensitiveLog = FederatedUserFilterSensitiveLog;\nconst GetFederationTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetFederationTokenResponseFilterSensitiveLog = GetFederationTokenResponseFilterSensitiveLog;\nconst GetSessionTokenRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetSessionTokenRequestFilterSensitiveLog = GetSessionTokenRequestFilterSensitiveLog;\nconst GetSessionTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexports.GetSessionTokenResponseFilterSensitiveLog = GetSessionTokenResponseFilterSensitiveLog;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeAws_queryGetSessionTokenCommand = exports.deserializeAws_queryGetFederationTokenCommand = exports.deserializeAws_queryGetCallerIdentityCommand = exports.deserializeAws_queryGetAccessKeyInfoCommand = exports.deserializeAws_queryDecodeAuthorizationMessageCommand = exports.deserializeAws_queryAssumeRoleWithWebIdentityCommand = exports.deserializeAws_queryAssumeRoleWithSAMLCommand = exports.deserializeAws_queryAssumeRoleCommand = exports.serializeAws_queryGetSessionTokenCommand = exports.serializeAws_queryGetFederationTokenCommand = exports.serializeAws_queryGetCallerIdentityCommand = exports.serializeAws_queryGetAccessKeyInfoCommand = exports.serializeAws_queryDecodeAuthorizationMessageCommand = exports.serializeAws_queryAssumeRoleWithWebIdentityCommand = exports.serializeAws_queryAssumeRoleWithSAMLCommand = exports.serializeAws_queryAssumeRoleCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst entities_1 = require(\"entities\");\nconst fast_xml_parser_1 = require(\"fast-xml-parser\");\nconst models_0_1 = require(\"../models/models_0\");\nconst STSServiceException_1 = require(\"../models/STSServiceException\");\nconst serializeAws_queryAssumeRoleCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleRequest(input, context),\n        Action: \"AssumeRole\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAssumeRoleCommand = serializeAws_queryAssumeRoleCommand;\nconst serializeAws_queryAssumeRoleWithSAMLCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleWithSAMLRequest(input, context),\n        Action: \"AssumeRoleWithSAML\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAssumeRoleWithSAMLCommand = serializeAws_queryAssumeRoleWithSAMLCommand;\nconst serializeAws_queryAssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleWithWebIdentityRequest(input, context),\n        Action: \"AssumeRoleWithWebIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAssumeRoleWithWebIdentityCommand = serializeAws_queryAssumeRoleWithWebIdentityCommand;\nconst serializeAws_queryDecodeAuthorizationMessageCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDecodeAuthorizationMessageRequest(input, context),\n        Action: \"DecodeAuthorizationMessage\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDecodeAuthorizationMessageCommand = serializeAws_queryDecodeAuthorizationMessageCommand;\nconst serializeAws_queryGetAccessKeyInfoCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetAccessKeyInfoRequest(input, context),\n        Action: \"GetAccessKeyInfo\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetAccessKeyInfoCommand = serializeAws_queryGetAccessKeyInfoCommand;\nconst serializeAws_queryGetCallerIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetCallerIdentityRequest(input, context),\n        Action: \"GetCallerIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetCallerIdentityCommand = serializeAws_queryGetCallerIdentityCommand;\nconst serializeAws_queryGetFederationTokenCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetFederationTokenRequest(input, context),\n        Action: \"GetFederationToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetFederationTokenCommand = serializeAws_queryGetFederationTokenCommand;\nconst serializeAws_queryGetSessionTokenCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetSessionTokenRequest(input, context),\n        Action: \"GetSessionToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetSessionTokenCommand = serializeAws_queryGetSessionTokenCommand;\nconst deserializeAws_queryAssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAssumeRoleCommand = deserializeAws_queryAssumeRoleCommand;\nconst deserializeAws_queryAssumeRoleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context);\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context);\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: STSServiceException_1.STSServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_queryAssumeRoleWithSAMLCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleWithSAMLCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleWithSAMLResponse(data.AssumeRoleWithSAMLResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAssumeRoleWithSAMLCommand = deserializeAws_queryAssumeRoleWithSAMLCommand;\nconst deserializeAws_queryAssumeRoleWithSAMLCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context);\n        case \"IDPRejectedClaimException\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await deserializeAws_queryIDPRejectedClaimExceptionResponse(parsedOutput, context);\n        case \"InvalidIdentityTokenException\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await deserializeAws_queryInvalidIdentityTokenExceptionResponse(parsedOutput, context);\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context);\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: STSServiceException_1.STSServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_queryAssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleWithWebIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAssumeRoleWithWebIdentityCommand = deserializeAws_queryAssumeRoleWithWebIdentityCommand;\nconst deserializeAws_queryAssumeRoleWithWebIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context);\n        case \"IDPCommunicationErrorException\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await deserializeAws_queryIDPCommunicationErrorExceptionResponse(parsedOutput, context);\n        case \"IDPRejectedClaimException\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await deserializeAws_queryIDPRejectedClaimExceptionResponse(parsedOutput, context);\n        case \"InvalidIdentityTokenException\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await deserializeAws_queryInvalidIdentityTokenExceptionResponse(parsedOutput, context);\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context);\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: STSServiceException_1.STSServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_queryDecodeAuthorizationMessageCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDecodeAuthorizationMessageCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDecodeAuthorizationMessageResponse(data.DecodeAuthorizationMessageResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDecodeAuthorizationMessageCommand = deserializeAws_queryDecodeAuthorizationMessageCommand;\nconst deserializeAws_queryDecodeAuthorizationMessageCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidAuthorizationMessageException\":\n        case \"com.amazonaws.sts#InvalidAuthorizationMessageException\":\n            throw await deserializeAws_queryInvalidAuthorizationMessageExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: STSServiceException_1.STSServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_queryGetAccessKeyInfoCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetAccessKeyInfoCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetAccessKeyInfoResponse(data.GetAccessKeyInfoResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetAccessKeyInfoCommand = deserializeAws_queryGetAccessKeyInfoCommand;\nconst deserializeAws_queryGetAccessKeyInfoCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    (0, smithy_client_1.throwDefaultError)({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: STSServiceException_1.STSServiceException,\n        errorCode,\n    });\n};\nconst deserializeAws_queryGetCallerIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetCallerIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetCallerIdentityResponse(data.GetCallerIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetCallerIdentityCommand = deserializeAws_queryGetCallerIdentityCommand;\nconst deserializeAws_queryGetCallerIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    (0, smithy_client_1.throwDefaultError)({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: STSServiceException_1.STSServiceException,\n        errorCode,\n    });\n};\nconst deserializeAws_queryGetFederationTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetFederationTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetFederationTokenResponse(data.GetFederationTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetFederationTokenCommand = deserializeAws_queryGetFederationTokenCommand;\nconst deserializeAws_queryGetFederationTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context);\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: STSServiceException_1.STSServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_queryGetSessionTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetSessionTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetSessionTokenResponse(data.GetSessionTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetSessionTokenCommand = deserializeAws_queryGetSessionTokenCommand;\nconst deserializeAws_queryGetSessionTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            (0, smithy_client_1.throwDefaultError)({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: STSServiceException_1.STSServiceException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_queryExpiredTokenExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryExpiredTokenException(body.Error, context);\n    const exception = new models_0_1.ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst deserializeAws_queryIDPCommunicationErrorExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryIDPCommunicationErrorException(body.Error, context);\n    const exception = new models_0_1.IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst deserializeAws_queryIDPRejectedClaimExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryIDPRejectedClaimException(body.Error, context);\n    const exception = new models_0_1.IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst deserializeAws_queryInvalidAuthorizationMessageExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidAuthorizationMessageException(body.Error, context);\n    const exception = new models_0_1.InvalidAuthorizationMessageException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst deserializeAws_queryInvalidIdentityTokenExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidIdentityTokenException(body.Error, context);\n    const exception = new models_0_1.InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst deserializeAws_queryMalformedPolicyDocumentExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryMalformedPolicyDocumentException(body.Error, context);\n    const exception = new models_0_1.MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst deserializeAws_queryPackedPolicyTooLargeExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryPackedPolicyTooLargeException(body.Error, context);\n    const exception = new models_0_1.PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst deserializeAws_queryRegionDisabledExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryRegionDisabledException(body.Error, context);\n    const exception = new models_0_1.RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return (0, smithy_client_1.decorateServiceException)(exception, body);\n};\nconst serializeAws_queryAssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn != null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName != null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags != null) {\n        const memberEntries = serializeAws_querytagListType(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.TransitiveTagKeys != null) {\n        const memberEntries = serializeAws_querytagKeyListType(input.TransitiveTagKeys, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ExternalId != null) {\n        entries[\"ExternalId\"] = input.ExternalId;\n    }\n    if (input.SerialNumber != null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode != null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    if (input.SourceIdentity != null) {\n        entries[\"SourceIdentity\"] = input.SourceIdentity;\n    }\n    return entries;\n};\nconst serializeAws_queryAssumeRoleWithSAMLRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn != null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.PrincipalArn != null) {\n        entries[\"PrincipalArn\"] = input.PrincipalArn;\n    }\n    if (input.SAMLAssertion != null) {\n        entries[\"SAMLAssertion\"] = input.SAMLAssertion;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst serializeAws_queryAssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn != null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName != null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.WebIdentityToken != null) {\n        entries[\"WebIdentityToken\"] = input.WebIdentityToken;\n    }\n    if (input.ProviderId != null) {\n        entries[\"ProviderId\"] = input.ProviderId;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst serializeAws_queryDecodeAuthorizationMessageRequest = (input, context) => {\n    const entries = {};\n    if (input.EncodedMessage != null) {\n        entries[\"EncodedMessage\"] = input.EncodedMessage;\n    }\n    return entries;\n};\nconst serializeAws_queryGetAccessKeyInfoRequest = (input, context) => {\n    const entries = {};\n    if (input.AccessKeyId != null) {\n        entries[\"AccessKeyId\"] = input.AccessKeyId;\n    }\n    return entries;\n};\nconst serializeAws_queryGetCallerIdentityRequest = (input, context) => {\n    const entries = {};\n    return entries;\n};\nconst serializeAws_queryGetFederationTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.Name != null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags != null) {\n        const memberEntries = serializeAws_querytagListType(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryGetSessionTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.SerialNumber != null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode != null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    return entries;\n};\nconst serializeAws_querypolicyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryPolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryPolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input.arn != null) {\n        entries[\"arn\"] = input.arn;\n    }\n    return entries;\n};\nconst serializeAws_queryTag = (input, context) => {\n    const entries = {};\n    if (input.Key != null) {\n        entries[\"Key\"] = input.Key;\n    }\n    if (input.Value != null) {\n        entries[\"Value\"] = input.Value;\n    }\n    return entries;\n};\nconst serializeAws_querytagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_querytagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryTag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst deserializeAws_queryAssumedRoleUser = (output, context) => {\n    const contents = {\n        AssumedRoleId: undefined,\n        Arn: undefined,\n    };\n    if (output[\"AssumedRoleId\"] !== undefined) {\n        contents.AssumedRoleId = (0, smithy_client_1.expectString)(output[\"AssumedRoleId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = (0, smithy_client_1.expectString)(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = (0, smithy_client_1.strictParseInt32)(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = (0, smithy_client_1.expectString)(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleWithSAMLResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        Subject: undefined,\n        SubjectType: undefined,\n        Issuer: undefined,\n        Audience: undefined,\n        NameQualifier: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = (0, smithy_client_1.strictParseInt32)(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Subject\"] !== undefined) {\n        contents.Subject = (0, smithy_client_1.expectString)(output[\"Subject\"]);\n    }\n    if (output[\"SubjectType\"] !== undefined) {\n        contents.SubjectType = (0, smithy_client_1.expectString)(output[\"SubjectType\"]);\n    }\n    if (output[\"Issuer\"] !== undefined) {\n        contents.Issuer = (0, smithy_client_1.expectString)(output[\"Issuer\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = (0, smithy_client_1.expectString)(output[\"Audience\"]);\n    }\n    if (output[\"NameQualifier\"] !== undefined) {\n        contents.NameQualifier = (0, smithy_client_1.expectString)(output[\"NameQualifier\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = (0, smithy_client_1.expectString)(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        SubjectFromWebIdentityToken: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        Provider: undefined,\n        Audience: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"SubjectFromWebIdentityToken\"] !== undefined) {\n        contents.SubjectFromWebIdentityToken = (0, smithy_client_1.expectString)(output[\"SubjectFromWebIdentityToken\"]);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = (0, smithy_client_1.strictParseInt32)(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Provider\"] !== undefined) {\n        contents.Provider = (0, smithy_client_1.expectString)(output[\"Provider\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = (0, smithy_client_1.expectString)(output[\"Audience\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = (0, smithy_client_1.expectString)(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCredentials = (output, context) => {\n    const contents = {\n        AccessKeyId: undefined,\n        SecretAccessKey: undefined,\n        SessionToken: undefined,\n        Expiration: undefined,\n    };\n    if (output[\"AccessKeyId\"] !== undefined) {\n        contents.AccessKeyId = (0, smithy_client_1.expectString)(output[\"AccessKeyId\"]);\n    }\n    if (output[\"SecretAccessKey\"] !== undefined) {\n        contents.SecretAccessKey = (0, smithy_client_1.expectString)(output[\"SecretAccessKey\"]);\n    }\n    if (output[\"SessionToken\"] !== undefined) {\n        contents.SessionToken = (0, smithy_client_1.expectString)(output[\"SessionToken\"]);\n    }\n    if (output[\"Expiration\"] !== undefined) {\n        contents.Expiration = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.parseRfc3339DateTime)(output[\"Expiration\"]));\n    }\n    return contents;\n};\nconst deserializeAws_queryDecodeAuthorizationMessageResponse = (output, context) => {\n    const contents = {\n        DecodedMessage: undefined,\n    };\n    if (output[\"DecodedMessage\"] !== undefined) {\n        contents.DecodedMessage = (0, smithy_client_1.expectString)(output[\"DecodedMessage\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryExpiredTokenException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryFederatedUser = (output, context) => {\n    const contents = {\n        FederatedUserId: undefined,\n        Arn: undefined,\n    };\n    if (output[\"FederatedUserId\"] !== undefined) {\n        contents.FederatedUserId = (0, smithy_client_1.expectString)(output[\"FederatedUserId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = (0, smithy_client_1.expectString)(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetAccessKeyInfoResponse = (output, context) => {\n    const contents = {\n        Account: undefined,\n    };\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = (0, smithy_client_1.expectString)(output[\"Account\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetCallerIdentityResponse = (output, context) => {\n    const contents = {\n        UserId: undefined,\n        Account: undefined,\n        Arn: undefined,\n    };\n    if (output[\"UserId\"] !== undefined) {\n        contents.UserId = (0, smithy_client_1.expectString)(output[\"UserId\"]);\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = (0, smithy_client_1.expectString)(output[\"Account\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = (0, smithy_client_1.expectString)(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetFederationTokenResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        FederatedUser: undefined,\n        PackedPolicySize: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"FederatedUser\"] !== undefined) {\n        contents.FederatedUser = deserializeAws_queryFederatedUser(output[\"FederatedUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = (0, smithy_client_1.strictParseInt32)(output[\"PackedPolicySize\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetSessionTokenResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryIDPCommunicationErrorException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryIDPRejectedClaimException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidAuthorizationMessageException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidIdentityTokenException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryMalformedPolicyDocumentException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryPackedPolicyTooLargeException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryRegionDisabledException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new protocol_http_1.HttpRequest(contents);\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parsedObj = (0, fast_xml_parser_1.parse)(encoded, {\n            attributeNamePrefix: \"\",\n            ignoreAttributes: false,\n            parseNodeValue: false,\n            trimValues: false,\n            tagValueProcessor: (val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : (0, entities_1.decodeHTML)(val)),\n        });\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return (0, smithy_client_1.getValueFromTextNode)(parsedObjToReturn);\n    }\n    return {};\n});\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => (0, smithy_client_1.extendedEncodeURIComponent)(key) + \"=\" + (0, smithy_client_1.extendedEncodeURIComponent)(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst defaultStsRoleAssumers_1 = require(\"./defaultStsRoleAssumers\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst hash_node_1 = require(\"@aws-sdk/hash-node\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst node_http_handler_1 = require(\"@aws-sdk/node-http-handler\");\nconst util_base64_node_1 = require(\"@aws-sdk/util-base64-node\");\nconst util_body_length_node_1 = require(\"@aws-sdk/util-body-length-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst util_utf8_node_1 = require(\"@aws-sdk/util-utf8-node\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@aws-sdk/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@aws-sdk/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        base64Decoder: (_a = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _a !== void 0 ? _a : util_base64_node_1.fromBase64,\n        base64Encoder: (_b = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _b !== void 0 ? _b : util_base64_node_1.toBase64,\n        bodyLengthChecker: (_c = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _c !== void 0 ? _c : util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: (_d = config === null || config === void 0 ? void 0 : config.credentialDefaultProvider) !== null && _d !== void 0 ? _d : (0, defaultStsRoleAssumers_1.decorateDefaultCredentialProvider)(credential_provider_node_1.defaultProvider),\n        defaultUserAgentProvider: (_e = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _e !== void 0 ? _e : (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: (_f = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _f !== void 0 ? _f : (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: (_g = config === null || config === void 0 ? void 0 : config.region) !== null && _g !== void 0 ? _g : (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: (_h = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _h !== void 0 ? _h : new node_http_handler_1.NodeHttpHandler(defaultConfigProvider),\n        retryMode: (_j = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _j !== void 0 ? _j : (0, node_config_provider_1.loadConfig)({\n            ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async () => (await defaultConfigProvider()).retryMode || middleware_retry_1.DEFAULT_RETRY_MODE,\n        }),\n        sha256: (_k = config === null || config === void 0 ? void 0 : config.sha256) !== null && _k !== void 0 ? _k : hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: (_l = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _l !== void 0 ? _l : node_http_handler_1.streamCollector,\n        useDualstackEndpoint: (_m = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _m !== void 0 ? _m : (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: (_o = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _o !== void 0 ? _o : (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n        utf8Decoder: (_p = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _p !== void 0 ? _p : util_utf8_node_1.fromUtf8,\n        utf8Encoder: (_q = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _q !== void 0 ? _q : util_utf8_node_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\nconst endpoints_1 = require(\"./endpoints\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e;\n    return ({\n        apiVersion: \"2011-06-15\",\n        disableHostPrefix: (_a = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _a !== void 0 ? _a : false,\n        logger: (_b = config === null || config === void 0 ? void 0 : config.logger) !== null && _b !== void 0 ? _b : {},\n        regionInfoProvider: (_c = config === null || config === void 0 ? void 0 : config.regionInfoProvider) !== null && _c !== void 0 ? _c : endpoints_1.defaultRegionInfoProvider,\n        serviceId: (_d = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _d !== void 0 ? _d : \"STS\",\n        urlParser: (_e = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _e !== void 0 ? _e : url_parser_1.parseUrl,\n    });\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = exports.DEFAULT_USE_DUALSTACK_ENDPOINT = exports.CONFIG_USE_DUALSTACK_ENDPOINT = exports.ENV_USE_DUALSTACK_ENDPOINT = void 0;\nconst util_config_provider_1 = require(\"@aws-sdk/util-config-provider\");\nexports.ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nexports.CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nexports.DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nexports.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => (0, util_config_provider_1.booleanSelector)(env, exports.ENV_USE_DUALSTACK_ENDPOINT, util_config_provider_1.SelectorType.ENV),\n    configFileSelector: (profile) => (0, util_config_provider_1.booleanSelector)(profile, exports.CONFIG_USE_DUALSTACK_ENDPOINT, util_config_provider_1.SelectorType.CONFIG),\n    default: false,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = exports.DEFAULT_USE_FIPS_ENDPOINT = exports.CONFIG_USE_FIPS_ENDPOINT = exports.ENV_USE_FIPS_ENDPOINT = void 0;\nconst util_config_provider_1 = require(\"@aws-sdk/util-config-provider\");\nexports.ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nexports.CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nexports.DEFAULT_USE_FIPS_ENDPOINT = false;\nexports.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => (0, util_config_provider_1.booleanSelector)(env, exports.ENV_USE_FIPS_ENDPOINT, util_config_provider_1.SelectorType.ENV),\n    configFileSelector: (profile) => (0, util_config_provider_1.booleanSelector)(profile, exports.CONFIG_USE_FIPS_ENDPOINT, util_config_provider_1.SelectorType.CONFIG),\n    default: false,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./NodeUseDualstackEndpointConfigOptions\"), exports);\ntslib_1.__exportStar(require(\"./NodeUseFipsEndpointConfigOptions\"), exports);\ntslib_1.__exportStar(require(\"./resolveCustomEndpointsConfig\"), exports);\ntslib_1.__exportStar(require(\"./resolveEndpointsConfig\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveCustomEndpointsConfig = void 0;\nconst util_middleware_1 = require(\"@aws-sdk/util-middleware\");\nconst resolveCustomEndpointsConfig = (input) => {\n    var _a;\n    const { endpoint, urlParser } = input;\n    return {\n        ...input,\n        tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true,\n        endpoint: (0, util_middleware_1.normalizeProvider)(typeof endpoint === \"string\" ? urlParser(endpoint) : endpoint),\n        isCustomEndpoint: true,\n        useDualstackEndpoint: (0, util_middleware_1.normalizeProvider)(input.useDualstackEndpoint),\n    };\n};\nexports.resolveCustomEndpointsConfig = resolveCustomEndpointsConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveEndpointsConfig = void 0;\nconst util_middleware_1 = require(\"@aws-sdk/util-middleware\");\nconst getEndpointFromRegion_1 = require(\"./utils/getEndpointFromRegion\");\nconst resolveEndpointsConfig = (input) => {\n    var _a;\n    const useDualstackEndpoint = (0, util_middleware_1.normalizeProvider)(input.useDualstackEndpoint);\n    const { endpoint, useFipsEndpoint, urlParser } = input;\n    return {\n        ...input,\n        tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true,\n        endpoint: endpoint\n            ? (0, util_middleware_1.normalizeProvider)(typeof endpoint === \"string\" ? urlParser(endpoint) : endpoint)\n            : () => (0, getEndpointFromRegion_1.getEndpointFromRegion)({ ...input, useDualstackEndpoint, useFipsEndpoint }),\n        isCustomEndpoint: endpoint ? true : false,\n        useDualstackEndpoint,\n    };\n};\nexports.resolveEndpointsConfig = resolveEndpointsConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndpointFromRegion = void 0;\nconst getEndpointFromRegion = async (input) => {\n    var _a;\n    const { tls = true } = input;\n    const region = await input.region();\n    const dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n    if (!dnsHostRegex.test(region)) {\n        throw new Error(\"Invalid region in client config\");\n    }\n    const useDualstackEndpoint = await input.useDualstackEndpoint();\n    const useFipsEndpoint = await input.useFipsEndpoint();\n    const { hostname } = (_a = (await input.regionInfoProvider(region, { useDualstackEndpoint, useFipsEndpoint }))) !== null && _a !== void 0 ? _a : {};\n    if (!hostname) {\n        throw new Error(\"Cannot resolve hostname from client config\");\n    }\n    return input.urlParser(`${tls ? \"https:\" : \"http:\"}//${hostname}`);\n};\nexports.getEndpointFromRegion = getEndpointFromRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./endpointsConfig\"), exports);\ntslib_1.__exportStar(require(\"./regionConfig\"), exports);\ntslib_1.__exportStar(require(\"./regionInfo\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_REGION_CONFIG_FILE_OPTIONS = exports.NODE_REGION_CONFIG_OPTIONS = exports.REGION_INI_NAME = exports.REGION_ENV_NAME = void 0;\nexports.REGION_ENV_NAME = \"AWS_REGION\";\nexports.REGION_INI_NAME = \"region\";\nexports.NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.REGION_ENV_NAME],\n    configFileSelector: (profile) => profile[exports.REGION_INI_NAME],\n    default: () => {\n        throw new Error(\"Region is missing\");\n    },\n};\nexports.NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\",\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRealRegion = void 0;\nconst isFipsRegion_1 = require(\"./isFipsRegion\");\nconst getRealRegion = (region) => (0, isFipsRegion_1.isFipsRegion)(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\nexports.getRealRegion = getRealRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./config\"), exports);\ntslib_1.__exportStar(require(\"./resolveRegionConfig\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFipsRegion = void 0;\nconst isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\nexports.isFipsRegion = isFipsRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveRegionConfig = void 0;\nconst getRealRegion_1 = require(\"./getRealRegion\");\nconst isFipsRegion_1 = require(\"./isFipsRegion\");\nconst resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: async () => {\n            if (typeof region === \"string\") {\n                return (0, getRealRegion_1.getRealRegion)(region);\n            }\n            const providedRegion = await region();\n            return (0, getRealRegion_1.getRealRegion)(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if ((0, isFipsRegion_1.isFipsRegion)(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint === \"boolean\" ? Promise.resolve(useFipsEndpoint) : useFipsEndpoint();\n        },\n    };\n};\nexports.resolveRegionConfig = resolveRegionConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHostnameFromVariants = void 0;\nconst getHostnameFromVariants = (variants = [], { useFipsEndpoint, useDualstackEndpoint }) => {\n    var _a;\n    return (_a = variants.find(({ tags }) => useFipsEndpoint === tags.includes(\"fips\") && useDualstackEndpoint === tags.includes(\"dualstack\"))) === null || _a === void 0 ? void 0 : _a.hostname;\n};\nexports.getHostnameFromVariants = getHostnameFromVariants;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRegionInfo = void 0;\nconst getHostnameFromVariants_1 = require(\"./getHostnameFromVariants\");\nconst getResolvedHostname_1 = require(\"./getResolvedHostname\");\nconst getResolvedPartition_1 = require(\"./getResolvedPartition\");\nconst getResolvedSigningRegion_1 = require(\"./getResolvedSigningRegion\");\nconst getRegionInfo = (region, { useFipsEndpoint = false, useDualstackEndpoint = false, signingService, regionHash, partitionHash, }) => {\n    var _a, _b, _c, _d, _e, _f;\n    const partition = (0, getResolvedPartition_1.getResolvedPartition)(region, { partitionHash });\n    const resolvedRegion = region in regionHash ? region : (_b = (_a = partitionHash[partition]) === null || _a === void 0 ? void 0 : _a.endpoint) !== null && _b !== void 0 ? _b : region;\n    const hostnameOptions = { useFipsEndpoint, useDualstackEndpoint };\n    const regionHostname = (0, getHostnameFromVariants_1.getHostnameFromVariants)((_c = regionHash[resolvedRegion]) === null || _c === void 0 ? void 0 : _c.variants, hostnameOptions);\n    const partitionHostname = (0, getHostnameFromVariants_1.getHostnameFromVariants)((_d = partitionHash[partition]) === null || _d === void 0 ? void 0 : _d.variants, hostnameOptions);\n    const hostname = (0, getResolvedHostname_1.getResolvedHostname)(resolvedRegion, { regionHostname, partitionHostname });\n    if (hostname === undefined) {\n        throw new Error(`Endpoint resolution failed for: ${{ resolvedRegion, useFipsEndpoint, useDualstackEndpoint }}`);\n    }\n    const signingRegion = (0, getResolvedSigningRegion_1.getResolvedSigningRegion)(hostname, {\n        signingRegion: (_e = regionHash[resolvedRegion]) === null || _e === void 0 ? void 0 : _e.signingRegion,\n        regionRegex: partitionHash[partition].regionRegex,\n        useFipsEndpoint,\n    });\n    return {\n        partition,\n        signingService,\n        hostname,\n        ...(signingRegion && { signingRegion }),\n        ...(((_f = regionHash[resolvedRegion]) === null || _f === void 0 ? void 0 : _f.signingService) && {\n            signingService: regionHash[resolvedRegion].signingService,\n        }),\n    };\n};\nexports.getRegionInfo = getRegionInfo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolvedHostname = void 0;\nconst getResolvedHostname = (resolvedRegion, { regionHostname, partitionHostname }) => regionHostname\n    ? regionHostname\n    : partitionHostname\n        ? partitionHostname.replace(\"{region}\", resolvedRegion)\n        : undefined;\nexports.getResolvedHostname = getResolvedHostname;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolvedPartition = void 0;\nconst getResolvedPartition = (region, { partitionHash }) => { var _a; return (_a = Object.keys(partitionHash || {}).find((key) => partitionHash[key].regions.includes(region))) !== null && _a !== void 0 ? _a : \"aws\"; };\nexports.getResolvedPartition = getResolvedPartition;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolvedSigningRegion = void 0;\nconst getResolvedSigningRegion = (hostname, { signingRegion, regionRegex, useFipsEndpoint }) => {\n    if (signingRegion) {\n        return signingRegion;\n    }\n    else if (useFipsEndpoint) {\n        const regionRegexJs = regionRegex.replace(\"\\\\\\\\\", \"\\\\\").replace(/^\\^/g, \"\\\\.\").replace(/\\$$/g, \"\\\\.\");\n        const regionRegexmatchArray = hostname.match(regionRegexJs);\n        if (regionRegexmatchArray) {\n            return regionRegexmatchArray[0].slice(1, -1);\n        }\n    }\n};\nexports.getResolvedSigningRegion = getResolvedSigningRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./PartitionHash\"), exports);\ntslib_1.__exportStar(require(\"./RegionHash\"), exports);\ntslib_1.__exportStar(require(\"./getRegionInfo\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromEnv = exports.ENV_EXPIRATION = exports.ENV_SESSION = exports.ENV_SECRET = exports.ENV_KEY = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nexports.ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nexports.ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nexports.ENV_SESSION = \"AWS_SESSION_TOKEN\";\nexports.ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\nconst fromEnv = () => async () => {\n    const accessKeyId = process.env[exports.ENV_KEY];\n    const secretAccessKey = process.env[exports.ENV_SECRET];\n    const sessionToken = process.env[exports.ENV_SESSION];\n    const expiry = process.env[exports.ENV_EXPIRATION];\n    if (accessKeyId && secretAccessKey) {\n        return {\n            accessKeyId,\n            secretAccessKey,\n            ...(sessionToken && { sessionToken }),\n            ...(expiry && { expiration: new Date(expiry) }),\n        };\n    }\n    throw new property_provider_1.CredentialsProviderError(\"Unable to find environment variable credentials.\");\n};\nexports.fromEnv = fromEnv;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromEnv\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Endpoint = void 0;\nvar Endpoint;\n(function (Endpoint) {\n    Endpoint[\"IPv4\"] = \"http://169.254.169.254\";\n    Endpoint[\"IPv6\"] = \"http://[fd00:ec2::254]\";\n})(Endpoint = exports.Endpoint || (exports.Endpoint = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ENDPOINT_CONFIG_OPTIONS = exports.CONFIG_ENDPOINT_NAME = exports.ENV_ENDPOINT_NAME = void 0;\nexports.ENV_ENDPOINT_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT\";\nexports.CONFIG_ENDPOINT_NAME = \"ec2_metadata_service_endpoint\";\nexports.ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_ENDPOINT_NAME],\n    configFileSelector: (profile) => profile[exports.CONFIG_ENDPOINT_NAME],\n    default: undefined,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EndpointMode = void 0;\nvar EndpointMode;\n(function (EndpointMode) {\n    EndpointMode[\"IPv4\"] = \"IPv4\";\n    EndpointMode[\"IPv6\"] = \"IPv6\";\n})(EndpointMode = exports.EndpointMode || (exports.EndpointMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ENDPOINT_MODE_CONFIG_OPTIONS = exports.CONFIG_ENDPOINT_MODE_NAME = exports.ENV_ENDPOINT_MODE_NAME = void 0;\nconst EndpointMode_1 = require(\"./EndpointMode\");\nexports.ENV_ENDPOINT_MODE_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT_MODE\";\nexports.CONFIG_ENDPOINT_MODE_NAME = \"ec2_metadata_service_endpoint_mode\";\nexports.ENDPOINT_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_ENDPOINT_MODE_NAME],\n    configFileSelector: (profile) => profile[exports.CONFIG_ENDPOINT_MODE_NAME],\n    default: EndpointMode_1.EndpointMode.IPv4,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromContainerMetadata = exports.ENV_CMDS_AUTH_TOKEN = exports.ENV_CMDS_RELATIVE_URI = exports.ENV_CMDS_FULL_URI = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst url_1 = require(\"url\");\nconst httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nconst ImdsCredentials_1 = require(\"./remoteProvider/ImdsCredentials\");\nconst RemoteProviderInit_1 = require(\"./remoteProvider/RemoteProviderInit\");\nconst retry_1 = require(\"./remoteProvider/retry\");\nexports.ENV_CMDS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nexports.ENV_CMDS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nexports.ENV_CMDS_AUTH_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\nconst fromContainerMetadata = (init = {}) => {\n    const { timeout, maxRetries } = (0, RemoteProviderInit_1.providerConfigFromInit)(init);\n    return () => (0, retry_1.retry)(async () => {\n        const requestOptions = await getCmdsUri();\n        const credsResponse = JSON.parse(await requestFromEcsImds(timeout, requestOptions));\n        if (!(0, ImdsCredentials_1.isImdsCredentials)(credsResponse)) {\n            throw new property_provider_1.CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n        }\n        return (0, ImdsCredentials_1.fromImdsCredentials)(credsResponse);\n    }, maxRetries);\n};\nexports.fromContainerMetadata = fromContainerMetadata;\nconst requestFromEcsImds = async (timeout, options) => {\n    if (process.env[exports.ENV_CMDS_AUTH_TOKEN]) {\n        options.headers = {\n            ...options.headers,\n            Authorization: process.env[exports.ENV_CMDS_AUTH_TOKEN],\n        };\n    }\n    const buffer = await (0, httpRequest_1.httpRequest)({\n        ...options,\n        timeout,\n    });\n    return buffer.toString();\n};\nconst CMDS_IP = \"169.254.170.2\";\nconst GREENGRASS_HOSTS = {\n    localhost: true,\n    \"127.0.0.1\": true,\n};\nconst GREENGRASS_PROTOCOLS = {\n    \"http:\": true,\n    \"https:\": true,\n};\nconst getCmdsUri = async () => {\n    if (process.env[exports.ENV_CMDS_RELATIVE_URI]) {\n        return {\n            hostname: CMDS_IP,\n            path: process.env[exports.ENV_CMDS_RELATIVE_URI],\n        };\n    }\n    if (process.env[exports.ENV_CMDS_FULL_URI]) {\n        const parsed = (0, url_1.parse)(process.env[exports.ENV_CMDS_FULL_URI]);\n        if (!parsed.hostname || !(parsed.hostname in GREENGRASS_HOSTS)) {\n            throw new property_provider_1.CredentialsProviderError(`${parsed.hostname} is not a valid container metadata service hostname`, false);\n        }\n        if (!parsed.protocol || !(parsed.protocol in GREENGRASS_PROTOCOLS)) {\n            throw new property_provider_1.CredentialsProviderError(`${parsed.protocol} is not a valid container metadata service protocol`, false);\n        }\n        return {\n            ...parsed,\n            port: parsed.port ? parseInt(parsed.port, 10) : undefined,\n        };\n    }\n    throw new property_provider_1.CredentialsProviderError(\"The container metadata credential provider cannot be used unless\" +\n        ` the ${exports.ENV_CMDS_RELATIVE_URI} or ${exports.ENV_CMDS_FULL_URI} environment` +\n        \" variable is set\", false);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromInstanceMetadata = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nconst ImdsCredentials_1 = require(\"./remoteProvider/ImdsCredentials\");\nconst RemoteProviderInit_1 = require(\"./remoteProvider/RemoteProviderInit\");\nconst retry_1 = require(\"./remoteProvider/retry\");\nconst getInstanceMetadataEndpoint_1 = require(\"./utils/getInstanceMetadataEndpoint\");\nconst staticStabilityProvider_1 = require(\"./utils/staticStabilityProvider\");\nconst IMDS_PATH = \"/latest/meta-data/iam/security-credentials/\";\nconst IMDS_TOKEN_PATH = \"/latest/api/token\";\nconst fromInstanceMetadata = (init = {}) => (0, staticStabilityProvider_1.staticStabilityProvider)(getInstanceImdsProvider(init), { logger: init.logger });\nexports.fromInstanceMetadata = fromInstanceMetadata;\nconst getInstanceImdsProvider = (init) => {\n    let disableFetchToken = false;\n    const { timeout, maxRetries } = (0, RemoteProviderInit_1.providerConfigFromInit)(init);\n    const getCredentials = async (maxRetries, options) => {\n        const profile = (await (0, retry_1.retry)(async () => {\n            let profile;\n            try {\n                profile = await getProfile(options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return profile;\n        }, maxRetries)).trim();\n        return (0, retry_1.retry)(async () => {\n            let creds;\n            try {\n                creds = await getCredentialsFromProfile(profile, options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return creds;\n        }, maxRetries);\n    };\n    return async () => {\n        const endpoint = await (0, getInstanceMetadataEndpoint_1.getInstanceMetadataEndpoint)();\n        if (disableFetchToken) {\n            return getCredentials(maxRetries, { ...endpoint, timeout });\n        }\n        else {\n            let token;\n            try {\n                token = (await getMetadataToken({ ...endpoint, timeout })).toString();\n            }\n            catch (error) {\n                if ((error === null || error === void 0 ? void 0 : error.statusCode) === 400) {\n                    throw Object.assign(error, {\n                        message: \"EC2 Metadata token request returned error\",\n                    });\n                }\n                else if (error.message === \"TimeoutError\" || [403, 404, 405].includes(error.statusCode)) {\n                    disableFetchToken = true;\n                }\n                return getCredentials(maxRetries, { ...endpoint, timeout });\n            }\n            return getCredentials(maxRetries, {\n                ...endpoint,\n                headers: {\n                    \"x-aws-ec2-metadata-token\": token,\n                },\n                timeout,\n            });\n        }\n    };\n};\nconst getMetadataToken = async (options) => (0, httpRequest_1.httpRequest)({\n    ...options,\n    path: IMDS_TOKEN_PATH,\n    method: \"PUT\",\n    headers: {\n        \"x-aws-ec2-metadata-token-ttl-seconds\": \"21600\",\n    },\n});\nconst getProfile = async (options) => (await (0, httpRequest_1.httpRequest)({ ...options, path: IMDS_PATH })).toString();\nconst getCredentialsFromProfile = async (profile, options) => {\n    const credsResponse = JSON.parse((await (0, httpRequest_1.httpRequest)({\n        ...options,\n        path: IMDS_PATH + profile,\n    })).toString());\n    if (!(0, ImdsCredentials_1.isImdsCredentials)(credsResponse)) {\n        throw new property_provider_1.CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n    }\n    return (0, ImdsCredentials_1.fromImdsCredentials)(credsResponse);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInstanceMetadataEndpoint = exports.httpRequest = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromContainerMetadata\"), exports);\ntslib_1.__exportStar(require(\"./fromInstanceMetadata\"), exports);\ntslib_1.__exportStar(require(\"./remoteProvider/RemoteProviderInit\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\nvar httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nObject.defineProperty(exports, \"httpRequest\", { enumerable: true, get: function () { return httpRequest_1.httpRequest; } });\nvar getInstanceMetadataEndpoint_1 = require(\"./utils/getInstanceMetadataEndpoint\");\nObject.defineProperty(exports, \"getInstanceMetadataEndpoint\", { enumerable: true, get: function () { return getInstanceMetadataEndpoint_1.getInstanceMetadataEndpoint; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromImdsCredentials = exports.isImdsCredentials = void 0;\nconst isImdsCredentials = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.AccessKeyId === \"string\" &&\n    typeof arg.SecretAccessKey === \"string\" &&\n    typeof arg.Token === \"string\" &&\n    typeof arg.Expiration === \"string\";\nexports.isImdsCredentials = isImdsCredentials;\nconst fromImdsCredentials = (creds) => ({\n    accessKeyId: creds.AccessKeyId,\n    secretAccessKey: creds.SecretAccessKey,\n    sessionToken: creds.Token,\n    expiration: new Date(creds.Expiration),\n});\nexports.fromImdsCredentials = fromImdsCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.providerConfigFromInit = exports.DEFAULT_MAX_RETRIES = exports.DEFAULT_TIMEOUT = void 0;\nexports.DEFAULT_TIMEOUT = 1000;\nexports.DEFAULT_MAX_RETRIES = 0;\nconst providerConfigFromInit = ({ maxRetries = exports.DEFAULT_MAX_RETRIES, timeout = exports.DEFAULT_TIMEOUT, }) => ({ maxRetries, timeout });\nexports.providerConfigFromInit = providerConfigFromInit;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.httpRequest = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst buffer_1 = require(\"buffer\");\nconst http_1 = require(\"http\");\nfunction httpRequest(options) {\n    return new Promise((resolve, reject) => {\n        var _a;\n        const req = (0, http_1.request)({\n            method: \"GET\",\n            ...options,\n            hostname: (_a = options.hostname) === null || _a === void 0 ? void 0 : _a.replace(/^\\[(.+)\\]$/, \"$1\"),\n        });\n        req.on(\"error\", (err) => {\n            reject(Object.assign(new property_provider_1.ProviderError(\"Unable to connect to instance metadata service\"), err));\n            req.destroy();\n        });\n        req.on(\"timeout\", () => {\n            reject(new property_provider_1.ProviderError(\"TimeoutError from instance metadata service\"));\n            req.destroy();\n        });\n        req.on(\"response\", (res) => {\n            const { statusCode = 400 } = res;\n            if (statusCode < 200 || 300 <= statusCode) {\n                reject(Object.assign(new property_provider_1.ProviderError(\"Error response received from instance metadata service\"), { statusCode }));\n                req.destroy();\n            }\n            const chunks = [];\n            res.on(\"data\", (chunk) => {\n                chunks.push(chunk);\n            });\n            res.on(\"end\", () => {\n                resolve(buffer_1.Buffer.concat(chunks));\n                req.destroy();\n            });\n        });\n        req.end();\n    });\n}\nexports.httpRequest = httpRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retry = void 0;\nconst retry = (toRetry, maxRetries) => {\n    let promise = toRetry();\n    for (let i = 0; i < maxRetries; i++) {\n        promise = promise.catch(toRetry);\n    }\n    return promise;\n};\nexports.retry = retry;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getExtendedInstanceMetadataCredentials = void 0;\nconst STATIC_STABILITY_REFRESH_INTERVAL_SECONDS = 5 * 60;\nconst STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS = 5 * 60;\nconst STATIC_STABILITY_DOC_URL = \"https://docs.aws.amazon.com/sdkref/latest/guide/feature-static-credentials.html\";\nconst getExtendedInstanceMetadataCredentials = (credentials, logger) => {\n    var _a;\n    const refreshInterval = STATIC_STABILITY_REFRESH_INTERVAL_SECONDS +\n        Math.floor(Math.random() * STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS);\n    const newExpiration = new Date(Date.now() + refreshInterval * 1000);\n    logger.warn(\"Attempting credential expiration extension due to a credential service availability issue. A refresh of these \" +\n        \"credentials will be attempted after ${new Date(newExpiration)}.\\nFor more information, please visit: \" +\n        STATIC_STABILITY_DOC_URL);\n    const originalExpiration = (_a = credentials.originalExpiration) !== null && _a !== void 0 ? _a : credentials.expiration;\n    return {\n        ...credentials,\n        ...(originalExpiration ? { originalExpiration } : {}),\n        expiration: newExpiration,\n    };\n};\nexports.getExtendedInstanceMetadataCredentials = getExtendedInstanceMetadataCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInstanceMetadataEndpoint = void 0;\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\nconst Endpoint_1 = require(\"../config/Endpoint\");\nconst EndpointConfigOptions_1 = require(\"../config/EndpointConfigOptions\");\nconst EndpointMode_1 = require(\"../config/EndpointMode\");\nconst EndpointModeConfigOptions_1 = require(\"../config/EndpointModeConfigOptions\");\nconst getInstanceMetadataEndpoint = async () => (0, url_parser_1.parseUrl)((await getFromEndpointConfig()) || (await getFromEndpointModeConfig()));\nexports.getInstanceMetadataEndpoint = getInstanceMetadataEndpoint;\nconst getFromEndpointConfig = async () => (0, node_config_provider_1.loadConfig)(EndpointConfigOptions_1.ENDPOINT_CONFIG_OPTIONS)();\nconst getFromEndpointModeConfig = async () => {\n    const endpointMode = await (0, node_config_provider_1.loadConfig)(EndpointModeConfigOptions_1.ENDPOINT_MODE_CONFIG_OPTIONS)();\n    switch (endpointMode) {\n        case EndpointMode_1.EndpointMode.IPv4:\n            return Endpoint_1.Endpoint.IPv4;\n        case EndpointMode_1.EndpointMode.IPv6:\n            return Endpoint_1.Endpoint.IPv6;\n        default:\n            throw new Error(`Unsupported endpoint mode: ${endpointMode}.` + ` Select from ${Object.values(EndpointMode_1.EndpointMode)}`);\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.staticStabilityProvider = void 0;\nconst getExtendedInstanceMetadataCredentials_1 = require(\"./getExtendedInstanceMetadataCredentials\");\nconst staticStabilityProvider = (provider, options = {}) => {\n    const logger = (options === null || options === void 0 ? void 0 : options.logger) || console;\n    let pastCredentials;\n    return async () => {\n        let credentials;\n        try {\n            credentials = await provider();\n            if (credentials.expiration && credentials.expiration.getTime() < Date.now()) {\n                credentials = (0, getExtendedInstanceMetadataCredentials_1.getExtendedInstanceMetadataCredentials)(credentials, logger);\n            }\n        }\n        catch (e) {\n            if (pastCredentials) {\n                logger.warn(\"Credential renew failed: \", e);\n                credentials = (0, getExtendedInstanceMetadataCredentials_1.getExtendedInstanceMetadataCredentials)(pastCredentials, logger);\n            }\n            else {\n                throw e;\n            }\n        }\n        pastCredentials = credentials;\n        return credentials;\n    };\n};\nexports.staticStabilityProvider = staticStabilityProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromIni = void 0;\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst resolveProfileData_1 = require(\"./resolveProfileData\");\nconst fromIni = (init = {}) => async () => {\n    const profiles = await (0, shared_ini_file_loader_1.parseKnownFiles)(init);\n    return (0, resolveProfileData_1.resolveProfileData)((0, shared_ini_file_loader_1.getProfileName)(init), profiles, init);\n};\nexports.fromIni = fromIni;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromIni\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveAssumeRoleCredentials = exports.isAssumeRoleProfile = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst resolveCredentialSource_1 = require(\"./resolveCredentialSource\");\nconst resolveProfileData_1 = require(\"./resolveProfileData\");\nconst isAssumeRoleProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.external_id) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.mfa_serial) > -1 &&\n    (isAssumeRoleWithSourceProfile(arg) || isAssumeRoleWithProviderProfile(arg));\nexports.isAssumeRoleProfile = isAssumeRoleProfile;\nconst isAssumeRoleWithSourceProfile = (arg) => typeof arg.source_profile === \"string\" && typeof arg.credential_source === \"undefined\";\nconst isAssumeRoleWithProviderProfile = (arg) => typeof arg.credential_source === \"string\" && typeof arg.source_profile === \"undefined\";\nconst resolveAssumeRoleCredentials = async (profileName, profiles, options, visitedProfiles = {}) => {\n    const data = profiles[profileName];\n    if (!options.roleAssumer) {\n        throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} requires a role to be assumed, but no role assumption callback was provided.`, false);\n    }\n    const { source_profile } = data;\n    if (source_profile && source_profile in visitedProfiles) {\n        throw new property_provider_1.CredentialsProviderError(`Detected a cycle attempting to resolve credentials for profile` +\n            ` ${(0, shared_ini_file_loader_1.getProfileName)(options)}. Profiles visited: ` +\n            Object.keys(visitedProfiles).join(\", \"), false);\n    }\n    const sourceCredsProvider = source_profile\n        ? (0, resolveProfileData_1.resolveProfileData)(source_profile, profiles, options, {\n            ...visitedProfiles,\n            [source_profile]: true,\n        })\n        : (0, resolveCredentialSource_1.resolveCredentialSource)(data.credential_source, profileName)();\n    const params = {\n        RoleArn: data.role_arn,\n        RoleSessionName: data.role_session_name || `aws-sdk-js-${Date.now()}`,\n        ExternalId: data.external_id,\n    };\n    const { mfa_serial } = data;\n    if (mfa_serial) {\n        if (!options.mfaCodeProvider) {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} requires multi-factor authentication, but no MFA code callback was provided.`, false);\n        }\n        params.SerialNumber = mfa_serial;\n        params.TokenCode = await options.mfaCodeProvider(mfa_serial);\n    }\n    const sourceCreds = await sourceCredsProvider;\n    return options.roleAssumer(sourceCreds, params);\n};\nexports.resolveAssumeRoleCredentials = resolveAssumeRoleCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveCredentialSource = void 0;\nconst credential_provider_env_1 = require(\"@aws-sdk/credential-provider-env\");\nconst credential_provider_imds_1 = require(\"@aws-sdk/credential-provider-imds\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst resolveCredentialSource = (credentialSource, profileName) => {\n    const sourceProvidersMap = {\n        EcsContainer: credential_provider_imds_1.fromContainerMetadata,\n        Ec2InstanceMetadata: credential_provider_imds_1.fromInstanceMetadata,\n        Environment: credential_provider_env_1.fromEnv,\n    };\n    if (credentialSource in sourceProvidersMap) {\n        return sourceProvidersMap[credentialSource]();\n    }\n    else {\n        throw new property_provider_1.CredentialsProviderError(`Unsupported credential source in profile ${profileName}. Got ${credentialSource}, ` +\n            `expected EcsContainer or Ec2InstanceMetadata or Environment.`);\n    }\n};\nexports.resolveCredentialSource = resolveCredentialSource;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveProfileData = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst resolveAssumeRoleCredentials_1 = require(\"./resolveAssumeRoleCredentials\");\nconst resolveSsoCredentials_1 = require(\"./resolveSsoCredentials\");\nconst resolveStaticCredentials_1 = require(\"./resolveStaticCredentials\");\nconst resolveWebIdentityCredentials_1 = require(\"./resolveWebIdentityCredentials\");\nconst resolveProfileData = async (profileName, profiles, options, visitedProfiles = {}) => {\n    const data = profiles[profileName];\n    if (Object.keys(visitedProfiles).length > 0 && (0, resolveStaticCredentials_1.isStaticCredsProfile)(data)) {\n        return (0, resolveStaticCredentials_1.resolveStaticCredentials)(data);\n    }\n    if ((0, resolveAssumeRoleCredentials_1.isAssumeRoleProfile)(data)) {\n        return (0, resolveAssumeRoleCredentials_1.resolveAssumeRoleCredentials)(profileName, profiles, options, visitedProfiles);\n    }\n    if ((0, resolveStaticCredentials_1.isStaticCredsProfile)(data)) {\n        return (0, resolveStaticCredentials_1.resolveStaticCredentials)(data);\n    }\n    if ((0, resolveWebIdentityCredentials_1.isWebIdentityProfile)(data)) {\n        return (0, resolveWebIdentityCredentials_1.resolveWebIdentityCredentials)(data, options);\n    }\n    if ((0, resolveSsoCredentials_1.isSsoProfile)(data)) {\n        return (0, resolveSsoCredentials_1.resolveSsoCredentials)(data);\n    }\n    throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} could not be found or parsed in shared credentials file.`);\n};\nexports.resolveProfileData = resolveProfileData;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSsoCredentials = exports.isSsoProfile = void 0;\nconst credential_provider_sso_1 = require(\"@aws-sdk/credential-provider-sso\");\nvar credential_provider_sso_2 = require(\"@aws-sdk/credential-provider-sso\");\nObject.defineProperty(exports, \"isSsoProfile\", { enumerable: true, get: function () { return credential_provider_sso_2.isSsoProfile; } });\nconst resolveSsoCredentials = (data) => {\n    const { sso_start_url, sso_account_id, sso_region, sso_role_name } = (0, credential_provider_sso_1.validateSsoProfile)(data);\n    return (0, credential_provider_sso_1.fromSSO)({\n        ssoStartUrl: sso_start_url,\n        ssoAccountId: sso_account_id,\n        ssoRegion: sso_region,\n        ssoRoleName: sso_role_name,\n    })();\n};\nexports.resolveSsoCredentials = resolveSsoCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveStaticCredentials = exports.isStaticCredsProfile = void 0;\nconst isStaticCredsProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.aws_access_key_id === \"string\" &&\n    typeof arg.aws_secret_access_key === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.aws_session_token) > -1;\nexports.isStaticCredsProfile = isStaticCredsProfile;\nconst resolveStaticCredentials = (profile) => Promise.resolve({\n    accessKeyId: profile.aws_access_key_id,\n    secretAccessKey: profile.aws_secret_access_key,\n    sessionToken: profile.aws_session_token,\n});\nexports.resolveStaticCredentials = resolveStaticCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveWebIdentityCredentials = exports.isWebIdentityProfile = void 0;\nconst credential_provider_web_identity_1 = require(\"@aws-sdk/credential-provider-web-identity\");\nconst isWebIdentityProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.web_identity_token_file === \"string\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1;\nexports.isWebIdentityProfile = isWebIdentityProfile;\nconst resolveWebIdentityCredentials = async (profile, options) => (0, credential_provider_web_identity_1.fromTokenFile)({\n    webIdentityTokenFile: profile.web_identity_token_file,\n    roleArn: profile.role_arn,\n    roleSessionName: profile.role_session_name,\n    roleAssumerWithWebIdentity: options.roleAssumerWithWebIdentity,\n})();\nexports.resolveWebIdentityCredentials = resolveWebIdentityCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultProvider = void 0;\nconst credential_provider_env_1 = require(\"@aws-sdk/credential-provider-env\");\nconst credential_provider_ini_1 = require(\"@aws-sdk/credential-provider-ini\");\nconst credential_provider_process_1 = require(\"@aws-sdk/credential-provider-process\");\nconst credential_provider_sso_1 = require(\"@aws-sdk/credential-provider-sso\");\nconst credential_provider_web_identity_1 = require(\"@aws-sdk/credential-provider-web-identity\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst remoteProvider_1 = require(\"./remoteProvider\");\nconst defaultProvider = (init = {}) => (0, property_provider_1.memoize)((0, property_provider_1.chain)(...(init.profile || process.env[shared_ini_file_loader_1.ENV_PROFILE] ? [] : [(0, credential_provider_env_1.fromEnv)()]), (0, credential_provider_sso_1.fromSSO)(init), (0, credential_provider_ini_1.fromIni)(init), (0, credential_provider_process_1.fromProcess)(init), (0, credential_provider_web_identity_1.fromTokenFile)(init), (0, remoteProvider_1.remoteProvider)(init), async () => {\n    throw new property_provider_1.CredentialsProviderError(\"Could not load credentials from any providers\", false);\n}), (credentials) => credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000, (credentials) => credentials.expiration !== undefined);\nexports.defaultProvider = defaultProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./defaultProvider\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remoteProvider = exports.ENV_IMDS_DISABLED = void 0;\nconst credential_provider_imds_1 = require(\"@aws-sdk/credential-provider-imds\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nexports.ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nconst remoteProvider = (init) => {\n    if (process.env[credential_provider_imds_1.ENV_CMDS_RELATIVE_URI] || process.env[credential_provider_imds_1.ENV_CMDS_FULL_URI]) {\n        return (0, credential_provider_imds_1.fromContainerMetadata)(init);\n    }\n    if (process.env[exports.ENV_IMDS_DISABLED]) {\n        return async () => {\n            throw new property_provider_1.CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\");\n        };\n    }\n    return (0, credential_provider_imds_1.fromInstanceMetadata)(init);\n};\nexports.remoteProvider = remoteProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromProcess = void 0;\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst resolveProcessCredentials_1 = require(\"./resolveProcessCredentials\");\nconst fromProcess = (init = {}) => async () => {\n    const profiles = await (0, shared_ini_file_loader_1.parseKnownFiles)(init);\n    return (0, resolveProcessCredentials_1.resolveProcessCredentials)((0, shared_ini_file_loader_1.getProfileName)(init), profiles);\n};\nexports.fromProcess = fromProcess;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValidatedProcessCredentials = void 0;\nconst getValidatedProcessCredentials = (profileName, data) => {\n    if (data.Version !== 1) {\n        throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n    }\n    if (data.AccessKeyId === undefined || data.SecretAccessKey === undefined) {\n        throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n    }\n    if (data.Expiration) {\n        const currentTime = new Date();\n        const expireTime = new Date(data.Expiration);\n        if (expireTime < currentTime) {\n            throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n        }\n    }\n    return {\n        accessKeyId: data.AccessKeyId,\n        secretAccessKey: data.SecretAccessKey,\n        ...(data.SessionToken && { sessionToken: data.SessionToken }),\n        ...(data.Expiration && { expiration: new Date(data.Expiration) }),\n    };\n};\nexports.getValidatedProcessCredentials = getValidatedProcessCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromProcess\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveProcessCredentials = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst child_process_1 = require(\"child_process\");\nconst util_1 = require(\"util\");\nconst getValidatedProcessCredentials_1 = require(\"./getValidatedProcessCredentials\");\nconst resolveProcessCredentials = async (profileName, profiles) => {\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile[\"credential_process\"];\n        if (credentialProcess !== undefined) {\n            const execPromise = (0, util_1.promisify)(child_process_1.exec);\n            try {\n                const { stdout } = await execPromise(credentialProcess);\n                let data;\n                try {\n                    data = JSON.parse(stdout.trim());\n                }\n                catch (_a) {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                return (0, getValidatedProcessCredentials_1.getValidatedProcessCredentials)(profileName, data);\n            }\n            catch (error) {\n                throw new property_provider_1.CredentialsProviderError(error.message);\n            }\n        }\n        else {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`);\n        }\n    }\n    else {\n        throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`);\n    }\n};\nexports.resolveProcessCredentials = resolveProcessCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromSSO = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst isSsoProfile_1 = require(\"./isSsoProfile\");\nconst resolveSSOCredentials_1 = require(\"./resolveSSOCredentials\");\nconst validateSsoProfile_1 = require(\"./validateSsoProfile\");\nconst fromSSO = (init = {}) => async () => {\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient } = init;\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName) {\n        const profiles = await (0, shared_ini_file_loader_1.parseKnownFiles)(init);\n        const profileName = (0, shared_ini_file_loader_1.getProfileName)(init);\n        const profile = profiles[profileName];\n        if (!(0, isSsoProfile_1.isSsoProfile)(profile)) {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} is not configured with SSO credentials.`);\n        }\n        const { sso_start_url, sso_account_id, sso_region, sso_role_name } = (0, validateSsoProfile_1.validateSsoProfile)(profile);\n        return (0, resolveSSOCredentials_1.resolveSSOCredentials)({\n            ssoStartUrl: sso_start_url,\n            ssoAccountId: sso_account_id,\n            ssoRegion: sso_region,\n            ssoRoleName: sso_role_name,\n            ssoClient: ssoClient,\n        });\n    }\n    else if (!ssoStartUrl || !ssoAccountId || !ssoRegion || !ssoRoleName) {\n        throw new property_provider_1.CredentialsProviderError('Incomplete configuration. The fromSSO() argument hash must include \"ssoStartUrl\",' +\n            ' \"ssoAccountId\", \"ssoRegion\", \"ssoRoleName\"');\n    }\n    else {\n        return (0, resolveSSOCredentials_1.resolveSSOCredentials)({ ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient });\n    }\n};\nexports.fromSSO = fromSSO;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromSSO\"), exports);\ntslib_1.__exportStar(require(\"./isSsoProfile\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\ntslib_1.__exportStar(require(\"./validateSsoProfile\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSsoProfile = void 0;\nconst isSsoProfile = (arg) => arg &&\n    (typeof arg.sso_start_url === \"string\" ||\n        typeof arg.sso_account_id === \"string\" ||\n        typeof arg.sso_region === \"string\" ||\n        typeof arg.sso_role_name === \"string\");\nexports.isSsoProfile = isSsoProfile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSSOCredentials = void 0;\nconst client_sso_1 = require(\"@aws-sdk/client-sso\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst EXPIRE_WINDOW_MS = 15 * 60 * 1000;\nconst SHOULD_FAIL_CREDENTIAL_CHAIN = false;\nconst resolveSSOCredentials = async ({ ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, }) => {\n    let token;\n    const refreshMessage = `To refresh this SSO session run aws sso login with the corresponding profile.`;\n    try {\n        token = await (0, shared_ini_file_loader_1.getSSOTokenFromFile)(ssoStartUrl);\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(`The SSO session associated with this profile is invalid. ${refreshMessage}`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    if (new Date(token.expiresAt).getTime() - Date.now() <= EXPIRE_WINDOW_MS) {\n        throw new property_provider_1.CredentialsProviderError(`The SSO session associated with this profile has expired. ${refreshMessage}`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { accessToken } = token;\n    const sso = ssoClient || new client_sso_1.SSOClient({ region: ssoRegion });\n    let ssoResp;\n    try {\n        ssoResp = await sso.send(new client_sso_1.GetRoleCredentialsCommand({\n            accountId: ssoAccountId,\n            roleName: ssoRoleName,\n            accessToken,\n        }));\n    }\n    catch (e) {\n        throw property_provider_1.CredentialsProviderError.from(e, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { roleCredentials: { accessKeyId, secretAccessKey, sessionToken, expiration } = {} } = ssoResp;\n    if (!accessKeyId || !secretAccessKey || !sessionToken || !expiration) {\n        throw new property_provider_1.CredentialsProviderError(\"SSO returns an invalid temporary credential.\", SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    return { accessKeyId, secretAccessKey, sessionToken, expiration: new Date(expiration) };\n};\nexports.resolveSSOCredentials = resolveSSOCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSsoProfile = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst validateSsoProfile = (profile) => {\n    const { sso_start_url, sso_account_id, sso_region, sso_role_name } = profile;\n    if (!sso_start_url || !sso_account_id || !sso_region || !sso_role_name) {\n        throw new property_provider_1.CredentialsProviderError(`Profile is configured with invalid SSO credentials. Required parameters \"sso_account_id\", \"sso_region\", ` +\n            `\"sso_role_name\", \"sso_start_url\". Got ${Object.keys(profile).join(\", \")}\\nReference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html`, false);\n    }\n    return profile;\n};\nexports.validateSsoProfile = validateSsoProfile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromTokenFile = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fs_1 = require(\"fs\");\nconst fromWebToken_1 = require(\"./fromWebToken\");\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\nconst fromTokenFile = (init = {}) => async () => {\n    return resolveTokenFile(init);\n};\nexports.fromTokenFile = fromTokenFile;\nconst resolveTokenFile = (init) => {\n    var _a, _b, _c;\n    const webIdentityTokenFile = (_a = init === null || init === void 0 ? void 0 : init.webIdentityTokenFile) !== null && _a !== void 0 ? _a : process.env[ENV_TOKEN_FILE];\n    const roleArn = (_b = init === null || init === void 0 ? void 0 : init.roleArn) !== null && _b !== void 0 ? _b : process.env[ENV_ROLE_ARN];\n    const roleSessionName = (_c = init === null || init === void 0 ? void 0 : init.roleSessionName) !== null && _c !== void 0 ? _c : process.env[ENV_ROLE_SESSION_NAME];\n    if (!webIdentityTokenFile || !roleArn) {\n        throw new property_provider_1.CredentialsProviderError(\"Web identity configuration not specified\");\n    }\n    return (0, fromWebToken_1.fromWebToken)({\n        ...init,\n        webIdentityToken: (0, fs_1.readFileSync)(webIdentityTokenFile, { encoding: \"ascii\" }),\n        roleArn,\n        roleSessionName,\n    })();\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromWebToken = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fromWebToken = (init) => () => {\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds, roleAssumerWithWebIdentity, } = init;\n    if (!roleAssumerWithWebIdentity) {\n        throw new property_provider_1.CredentialsProviderError(`Role Arn '${roleArn}' needs to be assumed with web identity,` +\n            ` but no role assumption callback was provided.`, false);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName !== null && roleSessionName !== void 0 ? roleSessionName : `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\nexports.fromWebToken = fromWebToken;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromTokenFile\"), exports);\ntslib_1.__exportStar(require(\"./fromWebToken\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Hash = void 0;\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\nconst buffer_1 = require(\"buffer\");\nconst crypto_1 = require(\"crypto\");\nclass Hash {\n    constructor(algorithmIdentifier, secret) {\n        this.hash = secret ? (0, crypto_1.createHmac)(algorithmIdentifier, castSourceData(secret)) : (0, crypto_1.createHash)(algorithmIdentifier);\n    }\n    update(toHash, encoding) {\n        this.hash.update(castSourceData(toHash, encoding));\n    }\n    digest() {\n        return Promise.resolve(this.hash.digest());\n    }\n}\nexports.Hash = Hash;\nfunction castSourceData(toCast, encoding) {\n    if (buffer_1.Buffer.isBuffer(toCast)) {\n        return toCast;\n    }\n    if (typeof toCast === \"string\") {\n        return (0, util_buffer_from_1.fromString)(toCast, encoding);\n    }\n    if (ArrayBuffer.isView(toCast)) {\n        return (0, util_buffer_from_1.fromArrayBuffer)(toCast.buffer, toCast.byteOffset, toCast.byteLength);\n    }\n    return (0, util_buffer_from_1.fromArrayBuffer)(toCast);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArrayBuffer = void 0;\nconst isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\nexports.isArrayBuffer = isArrayBuffer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getContentLengthPlugin = exports.contentLengthMiddlewareOptions = exports.contentLengthMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nfunction contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (protocol_http_1.HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexports.contentLengthMiddleware = contentLengthMiddleware;\nexports.contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nconst getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), exports.contentLengthMiddlewareOptions);\n    },\n});\nexports.getContentLengthPlugin = getContentLengthPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHostHeaderPlugin = exports.hostHeaderMiddlewareOptions = exports.hostHeaderMiddleware = exports.resolveHostHeaderConfig = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nfunction resolveHostHeaderConfig(input) {\n    return input;\n}\nexports.resolveHostHeaderConfig = resolveHostHeaderConfig;\nconst hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!protocol_http_1.HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = \"\";\n    }\n    else if (!request.headers[\"host\"]) {\n        request.headers[\"host\"] = request.hostname;\n    }\n    return next(args);\n};\nexports.hostHeaderMiddleware = hostHeaderMiddleware;\nexports.hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nconst getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add((0, exports.hostHeaderMiddleware)(options), exports.hostHeaderMiddlewareOptions);\n    },\n});\nexports.getHostHeaderPlugin = getHostHeaderPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./loggerMiddleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLoggerPlugin = exports.loggerMiddlewareOptions = exports.loggerMiddleware = void 0;\nconst loggerMiddleware = () => (next, context) => async (args) => {\n    const { clientName, commandName, inputFilterSensitiveLog, logger, outputFilterSensitiveLog } = context;\n    const response = await next(args);\n    if (!logger) {\n        return response;\n    }\n    if (typeof logger.info === \"function\") {\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger.info({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n    }\n    return response;\n};\nexports.loggerMiddleware = loggerMiddleware;\nexports.loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nconst getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add((0, exports.loggerMiddleware)(), exports.loggerMiddlewareOptions);\n    },\n});\nexports.getLoggerPlugin = getLoggerPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRecursionDetectionPlugin = exports.addRecursionDetectionMiddlewareOptions = exports.recursionDetectionMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nconst recursionDetectionMiddleware = (options) => (next) => async (args) => {\n    const { request } = args;\n    if (!protocol_http_1.HttpRequest.isInstance(request) ||\n        options.runtime !== \"node\" ||\n        request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceId = process.env[ENV_TRACE_ID];\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexports.recursionDetectionMiddleware = recursionDetectionMiddleware;\nexports.addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\nconst getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add((0, exports.recursionDetectionMiddleware)(options), exports.addRecursionDetectionMiddlewareOptions);\n    },\n});\nexports.getRecursionDetectionPlugin = getRecursionDetectionPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AdaptiveRetryStrategy = void 0;\nconst config_1 = require(\"./config\");\nconst DefaultRateLimiter_1 = require(\"./DefaultRateLimiter\");\nconst StandardRetryStrategy_1 = require(\"./StandardRetryStrategy\");\nclass AdaptiveRetryStrategy extends StandardRetryStrategy_1.StandardRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        const { rateLimiter, ...superOptions } = options !== null && options !== void 0 ? options : {};\n        super(maxAttemptsProvider, superOptions);\n        this.rateLimiter = rateLimiter !== null && rateLimiter !== void 0 ? rateLimiter : new DefaultRateLimiter_1.DefaultRateLimiter();\n        this.mode = config_1.RETRY_MODES.ADAPTIVE;\n    }\n    async retry(next, args) {\n        return super.retry(next, args, {\n            beforeRequest: async () => {\n                return this.rateLimiter.getSendToken();\n            },\n            afterRequest: (response) => {\n                this.rateLimiter.updateClientSendingRate(response);\n            },\n        });\n    }\n}\nexports.AdaptiveRetryStrategy = AdaptiveRetryStrategy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultRateLimiter = void 0;\nconst service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nclass DefaultRateLimiter {\n    constructor(options) {\n        var _a, _b, _c, _d, _e;\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = (_a = options === null || options === void 0 ? void 0 : options.beta) !== null && _a !== void 0 ? _a : 0.7;\n        this.minCapacity = (_b = options === null || options === void 0 ? void 0 : options.minCapacity) !== null && _b !== void 0 ? _b : 1;\n        this.minFillRate = (_c = options === null || options === void 0 ? void 0 : options.minFillRate) !== null && _c !== void 0 ? _c : 0.5;\n        this.scaleConstant = (_d = options === null || options === void 0 ? void 0 : options.scaleConstant) !== null && _d !== void 0 ? _d : 0.4;\n        this.smooth = (_e = options === null || options === void 0 ? void 0 : options.smooth) !== null && _e !== void 0 ? _e : 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if ((0, service_error_classification_1.isThrottlingError)(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\nexports.DefaultRateLimiter = DefaultRateLimiter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StandardRetryStrategy = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nconst uuid_1 = require(\"uuid\");\nconst config_1 = require(\"./config\");\nconst constants_1 = require(\"./constants\");\nconst defaultRetryQuota_1 = require(\"./defaultRetryQuota\");\nconst delayDecider_1 = require(\"./delayDecider\");\nconst retryDecider_1 = require(\"./retryDecider\");\nclass StandardRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        var _a, _b, _c;\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = config_1.RETRY_MODES.STANDARD;\n        this.retryDecider = (_a = options === null || options === void 0 ? void 0 : options.retryDecider) !== null && _a !== void 0 ? _a : retryDecider_1.defaultRetryDecider;\n        this.delayDecider = (_b = options === null || options === void 0 ? void 0 : options.delayDecider) !== null && _b !== void 0 ? _b : delayDecider_1.defaultDelayDecider;\n        this.retryQuota = (_c = options === null || options === void 0 ? void 0 : options.retryQuota) !== null && _c !== void 0 ? _c : (0, defaultRetryQuota_1.getDefaultRetryQuota)(constants_1.INITIAL_RETRY_TOKENS);\n    }\n    shouldRetry(error, attempts, maxAttempts) {\n        return attempts < maxAttempts && this.retryDecider(error) && this.retryQuota.hasRetryTokens(error);\n    }\n    async getMaxAttempts() {\n        let maxAttempts;\n        try {\n            maxAttempts = await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            maxAttempts = config_1.DEFAULT_MAX_ATTEMPTS;\n        }\n        return maxAttempts;\n    }\n    async retry(next, args, options) {\n        let retryTokenAmount;\n        let attempts = 0;\n        let totalDelay = 0;\n        const maxAttempts = await this.getMaxAttempts();\n        const { request } = args;\n        if (protocol_http_1.HttpRequest.isInstance(request)) {\n            request.headers[constants_1.INVOCATION_ID_HEADER] = (0, uuid_1.v4)();\n        }\n        while (true) {\n            try {\n                if (protocol_http_1.HttpRequest.isInstance(request)) {\n                    request.headers[constants_1.REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                if (options === null || options === void 0 ? void 0 : options.beforeRequest) {\n                    await options.beforeRequest();\n                }\n                const { response, output } = await next(args);\n                if (options === null || options === void 0 ? void 0 : options.afterRequest) {\n                    options.afterRequest(response);\n                }\n                this.retryQuota.releaseRetryTokens(retryTokenAmount);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const err = asSdkError(e);\n                attempts++;\n                if (this.shouldRetry(err, attempts, maxAttempts)) {\n                    retryTokenAmount = this.retryQuota.retrieveRetryTokens(err);\n                    const delay = this.delayDecider((0, service_error_classification_1.isThrottlingError)(err) ? constants_1.THROTTLING_RETRY_DELAY_BASE : constants_1.DEFAULT_RETRY_DELAY_BASE, attempts);\n                    totalDelay += delay;\n                    await new Promise((resolve) => setTimeout(resolve, delay));\n                    continue;\n                }\n                if (!err.$metadata) {\n                    err.$metadata = {};\n                }\n                err.$metadata.attempts = attempts;\n                err.$metadata.totalRetryDelay = totalDelay;\n                throw err;\n            }\n        }\n    }\n}\nexports.StandardRetryStrategy = StandardRetryStrategy;\nconst asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_RETRY_MODE = exports.DEFAULT_MAX_ATTEMPTS = exports.RETRY_MODES = void 0;\nvar RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES = exports.RETRY_MODES || (exports.RETRY_MODES = {}));\nexports.DEFAULT_MAX_ATTEMPTS = 3;\nexports.DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_RETRY_MODE_CONFIG_OPTIONS = exports.CONFIG_RETRY_MODE = exports.ENV_RETRY_MODE = exports.resolveRetryConfig = exports.NODE_MAX_ATTEMPT_CONFIG_OPTIONS = exports.CONFIG_MAX_ATTEMPTS = exports.ENV_MAX_ATTEMPTS = void 0;\nconst util_middleware_1 = require(\"@aws-sdk/util-middleware\");\nconst AdaptiveRetryStrategy_1 = require(\"./AdaptiveRetryStrategy\");\nconst config_1 = require(\"./config\");\nconst StandardRetryStrategy_1 = require(\"./StandardRetryStrategy\");\nexports.ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexports.CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexports.NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[exports.ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${exports.ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[exports.CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${exports.CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: config_1.DEFAULT_MAX_ATTEMPTS,\n};\nconst resolveRetryConfig = (input) => {\n    var _a;\n    const maxAttempts = (0, util_middleware_1.normalizeProvider)((_a = input.maxAttempts) !== null && _a !== void 0 ? _a : config_1.DEFAULT_MAX_ATTEMPTS);\n    return {\n        ...input,\n        maxAttempts,\n        retryStrategy: async () => {\n            if (input.retryStrategy) {\n                return input.retryStrategy;\n            }\n            const retryMode = await (0, util_middleware_1.normalizeProvider)(input.retryMode)();\n            if (retryMode === config_1.RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy_1.AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy_1.StandardRetryStrategy(maxAttempts);\n        },\n    };\n};\nexports.resolveRetryConfig = resolveRetryConfig;\nexports.ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexports.CONFIG_RETRY_MODE = \"retry_mode\";\nexports.NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[exports.CONFIG_RETRY_MODE],\n    default: config_1.DEFAULT_RETRY_MODE,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REQUEST_HEADER = exports.INVOCATION_ID_HEADER = exports.NO_RETRY_INCREMENT = exports.TIMEOUT_RETRY_COST = exports.RETRY_COST = exports.INITIAL_RETRY_TOKENS = exports.THROTTLING_RETRY_DELAY_BASE = exports.MAXIMUM_RETRY_DELAY = exports.DEFAULT_RETRY_DELAY_BASE = void 0;\nexports.DEFAULT_RETRY_DELAY_BASE = 100;\nexports.MAXIMUM_RETRY_DELAY = 20 * 1000;\nexports.THROTTLING_RETRY_DELAY_BASE = 500;\nexports.INITIAL_RETRY_TOKENS = 500;\nexports.RETRY_COST = 5;\nexports.TIMEOUT_RETRY_COST = 10;\nexports.NO_RETRY_INCREMENT = 1;\nexports.INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nexports.REQUEST_HEADER = \"amz-sdk-request\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultRetryQuota = void 0;\nconst constants_1 = require(\"./constants\");\nconst getDefaultRetryQuota = (initialRetryTokens, options) => {\n    var _a, _b, _c;\n    const MAX_CAPACITY = initialRetryTokens;\n    const noRetryIncrement = (_a = options === null || options === void 0 ? void 0 : options.noRetryIncrement) !== null && _a !== void 0 ? _a : constants_1.NO_RETRY_INCREMENT;\n    const retryCost = (_b = options === null || options === void 0 ? void 0 : options.retryCost) !== null && _b !== void 0 ? _b : constants_1.RETRY_COST;\n    const timeoutRetryCost = (_c = options === null || options === void 0 ? void 0 : options.timeoutRetryCost) !== null && _c !== void 0 ? _c : constants_1.TIMEOUT_RETRY_COST;\n    let availableCapacity = initialRetryTokens;\n    const getCapacityAmount = (error) => (error.name === \"TimeoutError\" ? timeoutRetryCost : retryCost);\n    const hasRetryTokens = (error) => getCapacityAmount(error) <= availableCapacity;\n    const retrieveRetryTokens = (error) => {\n        if (!hasRetryTokens(error)) {\n            throw new Error(\"No retry token available\");\n        }\n        const capacityAmount = getCapacityAmount(error);\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    const releaseRetryTokens = (capacityReleaseAmount) => {\n        availableCapacity += capacityReleaseAmount !== null && capacityReleaseAmount !== void 0 ? capacityReleaseAmount : noRetryIncrement;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return Object.freeze({\n        hasRetryTokens,\n        retrieveRetryTokens,\n        releaseRetryTokens,\n    });\n};\nexports.getDefaultRetryQuota = getDefaultRetryQuota;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultDelayDecider = void 0;\nconst constants_1 = require(\"./constants\");\nconst defaultDelayDecider = (delayBase, attempts) => Math.floor(Math.min(constants_1.MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\nexports.defaultDelayDecider = defaultDelayDecider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./AdaptiveRetryStrategy\"), exports);\ntslib_1.__exportStar(require(\"./DefaultRateLimiter\"), exports);\ntslib_1.__exportStar(require(\"./StandardRetryStrategy\"), exports);\ntslib_1.__exportStar(require(\"./config\"), exports);\ntslib_1.__exportStar(require(\"./configurations\"), exports);\ntslib_1.__exportStar(require(\"./delayDecider\"), exports);\ntslib_1.__exportStar(require(\"./omitRetryHeadersMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./retryDecider\"), exports);\ntslib_1.__exportStar(require(\"./retryMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOmitRetryHeadersPlugin = exports.omitRetryHeadersMiddlewareOptions = exports.omitRetryHeadersMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst constants_1 = require(\"./constants\");\nconst omitRetryHeadersMiddleware = () => (next) => async (args) => {\n    const { request } = args;\n    if (protocol_http_1.HttpRequest.isInstance(request)) {\n        delete request.headers[constants_1.INVOCATION_ID_HEADER];\n        delete request.headers[constants_1.REQUEST_HEADER];\n    }\n    return next(args);\n};\nexports.omitRetryHeadersMiddleware = omitRetryHeadersMiddleware;\nexports.omitRetryHeadersMiddlewareOptions = {\n    name: \"omitRetryHeadersMiddleware\",\n    tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n    relation: \"before\",\n    toMiddleware: \"awsAuthMiddleware\",\n    override: true,\n};\nconst getOmitRetryHeadersPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo((0, exports.omitRetryHeadersMiddleware)(), exports.omitRetryHeadersMiddlewareOptions);\n    },\n});\nexports.getOmitRetryHeadersPlugin = getOmitRetryHeadersPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRetryDecider = void 0;\nconst service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nconst defaultRetryDecider = (error) => {\n    if (!error) {\n        return false;\n    }\n    return (0, service_error_classification_1.isRetryableByTrait)(error) || (0, service_error_classification_1.isClockSkewError)(error) || (0, service_error_classification_1.isThrottlingError)(error) || (0, service_error_classification_1.isTransientError)(error);\n};\nexports.defaultRetryDecider = defaultRetryDecider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRetryPlugin = exports.retryMiddlewareOptions = exports.retryMiddleware = void 0;\nconst retryMiddleware = (options) => (next, context) => async (args) => {\n    const retryStrategy = await options.retryStrategy();\n    if (retryStrategy === null || retryStrategy === void 0 ? void 0 : retryStrategy.mode)\n        context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n    return retryStrategy.retry(next, args);\n};\nexports.retryMiddleware = retryMiddleware;\nexports.retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nconst getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add((0, exports.retryMiddleware)(options), exports.retryMiddlewareOptions);\n    },\n});\nexports.getRetryPlugin = getRetryPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveStsAuthConfig = void 0;\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst resolveStsAuthConfig = (input, { stsClientCtor }) => (0, middleware_signing_1.resolveAwsAuthConfig)({\n    ...input,\n    stsClientCtor,\n});\nexports.resolveStsAuthConfig = resolveStsAuthConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializerMiddleware = void 0;\nconst deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        throw error;\n    }\n};\nexports.deserializerMiddleware = deserializerMiddleware;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./deserializerMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./serdePlugin\"), exports);\ntslib_1.__exportStar(require(\"./serializerMiddleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSerdePlugin = exports.serializerMiddlewareOption = exports.deserializerMiddlewareOption = void 0;\nconst deserializerMiddleware_1 = require(\"./deserializerMiddleware\");\nconst serializerMiddleware_1 = require(\"./serializerMiddleware\");\nexports.deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexports.serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nfunction getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add((0, deserializerMiddleware_1.deserializerMiddleware)(config, deserializer), exports.deserializerMiddlewareOption);\n            commandStack.add((0, serializerMiddleware_1.serializerMiddleware)(config, serializer), exports.serializerMiddlewareOption);\n        },\n    };\n}\nexports.getSerdePlugin = getSerdePlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializerMiddleware = void 0;\nconst serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const request = await serializer(args.input, options);\n    return next({\n        ...args,\n        request,\n    });\n};\nexports.serializerMiddleware = serializerMiddleware;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSigV4AuthConfig = exports.resolveAwsAuthConfig = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst signature_v4_1 = require(\"@aws-sdk/signature-v4\");\nconst CREDENTIAL_EXPIRE_WINDOW = 300000;\nconst resolveAwsAuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        signer = () => normalizeProvider(input.region)()\n            .then(async (region) => [\n            (await input.regionInfoProvider(region, {\n                useFipsEndpoint: await input.useFipsEndpoint(),\n                useDualstackEndpoint: await input.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            input.signingRegion = input.signingRegion || signingRegion || region;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const signerConstructor = input.signerConstructor || signature_v4_1.SignatureV4;\n            return new signerConstructor(params);\n        });\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexports.resolveAwsAuthConfig = resolveAwsAuthConfig;\nconst resolveSigV4AuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        signer = normalizeProvider(new signature_v4_1.SignatureV4({\n            credentials: normalizedCreds,\n            region: input.region,\n            service: input.signingName,\n            sha256,\n            uriEscapePath: signingEscapePath,\n        }));\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexports.resolveSigV4AuthConfig = resolveSigV4AuthConfig;\nconst normalizeProvider = (input) => {\n    if (typeof input === \"object\") {\n        const promisified = Promise.resolve(input);\n        return () => promisified;\n    }\n    return input;\n};\nconst normalizeCredentialProvider = (credentials) => {\n    if (typeof credentials === \"function\") {\n        return (0, property_provider_1.memoize)(credentials, (credentials) => credentials.expiration !== undefined &&\n            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, (credentials) => credentials.expiration !== undefined);\n    }\n    return normalizeProvider(credentials);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configurations\"), exports);\ntslib_1.__exportStar(require(\"./middleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin = exports.awsAuthMiddlewareOptions = exports.awsAuthMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst getSkewCorrectedDate_1 = require(\"./utils/getSkewCorrectedDate\");\nconst getUpdatedSystemClockOffset_1 = require(\"./utils/getUpdatedSystemClockOffset\");\nconst awsAuthMiddleware = (options) => (next, context) => async function (args) {\n    if (!protocol_http_1.HttpRequest.isInstance(args.request))\n        return next(args);\n    const signer = await options.signer();\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, {\n            signingDate: (0, getSkewCorrectedDate_1.getSkewCorrectedDate)(options.systemClockOffset),\n            signingRegion: context[\"signing_region\"],\n            signingService: context[\"signing_service\"],\n        }),\n    }).catch((error) => {\n        var _a;\n        const serverTime = (_a = error.ServerTime) !== null && _a !== void 0 ? _a : getDateHeader(error.$response);\n        if (serverTime) {\n            options.systemClockOffset = (0, getUpdatedSystemClockOffset_1.getUpdatedSystemClockOffset)(serverTime, options.systemClockOffset);\n        }\n        throw error;\n    });\n    const dateHeader = getDateHeader(output.response);\n    if (dateHeader) {\n        options.systemClockOffset = (0, getUpdatedSystemClockOffset_1.getUpdatedSystemClockOffset)(dateHeader, options.systemClockOffset);\n    }\n    return output;\n};\nexports.awsAuthMiddleware = awsAuthMiddleware;\nconst getDateHeader = (response) => { var _a, _b, _c; return protocol_http_1.HttpResponse.isInstance(response) ? (_b = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.date) !== null && _b !== void 0 ? _b : (_c = response.headers) === null || _c === void 0 ? void 0 : _c.Date : undefined; };\nexports.awsAuthMiddlewareOptions = {\n    name: \"awsAuthMiddleware\",\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n    override: true,\n};\nconst getAwsAuthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo((0, exports.awsAuthMiddleware)(options), exports.awsAuthMiddlewareOptions);\n    },\n});\nexports.getAwsAuthPlugin = getAwsAuthPlugin;\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSkewCorrectedDate = void 0;\nconst getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\nexports.getSkewCorrectedDate = getSkewCorrectedDate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUpdatedSystemClockOffset = void 0;\nconst isClockSkewed_1 = require(\"./isClockSkewed\");\nconst getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if ((0, isClockSkewed_1.isClockSkewed)(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\nexports.getUpdatedSystemClockOffset = getUpdatedSystemClockOffset;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isClockSkewed = void 0;\nconst getSkewCorrectedDate_1 = require(\"./getSkewCorrectedDate\");\nconst isClockSkewed = (clockTime, systemClockOffset) => Math.abs((0, getSkewCorrectedDate_1.getSkewCorrectedDate)(systemClockOffset).getTime() - clockTime) >= 300000;\nexports.isClockSkewed = isClockSkewed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.constructStack = void 0;\nconst constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.name && entry.name === toRemove) {\n                isRemoved = true;\n                entriesNameSet.delete(toRemove);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                if (entry.name)\n                    entriesNameSet.delete(entry.name);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = () => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    throw new Error(`${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expendedMiddlewareList) => {\n            wholeList.push(...expendedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain.map((entry) => entry.middleware);\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = absoluteEntries[toOverrideIndex];\n                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n                        throw new Error(`\"${name}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +\n                            `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`);\n                    }\n                    absoluteEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = relativeEntries[toOverrideIndex];\n                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                        throw new Error(`\"${name}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                            `by same-name middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`);\n                    }\n                    relativeEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo((0, exports.constructStack)()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    if (name)\n                        entriesNameSet.delete(name);\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo((0, exports.constructStack)());\n            cloned.use(from);\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList().reverse()) {\n                handler = middleware(handler, context);\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nexports.constructStack = constructStack;\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./MiddlewareStack\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveUserAgentConfig = void 0;\nfunction resolveUserAgentConfig(input) {\n    return {\n        ...input,\n        customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n    };\n}\nexports.resolveUserAgentConfig = resolveUserAgentConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UA_ESCAPE_REGEX = exports.SPACE = exports.X_AMZ_USER_AGENT = exports.USER_AGENT = void 0;\nexports.USER_AGENT = \"user-agent\";\nexports.X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexports.SPACE = \" \";\nexports.UA_ESCAPE_REGEX = /[^\\!\\#\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configurations\"), exports);\ntslib_1.__exportStar(require(\"./user-agent-middleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUserAgentPlugin = exports.getUserAgentMiddlewareOptions = exports.userAgentMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst constants_1 = require(\"./constants\");\nconst userAgentMiddleware = (options) => (next, context) => async (args) => {\n    var _a, _b;\n    const { request } = args;\n    if (!protocol_http_1.HttpRequest.isInstance(request))\n        return next(args);\n    const { headers } = request;\n    const userAgent = ((_a = context === null || context === void 0 ? void 0 : context.userAgent) === null || _a === void 0 ? void 0 : _a.map(escapeUserAgent)) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    const customUserAgent = ((_b = options === null || options === void 0 ? void 0 : options.customUserAgent) === null || _b === void 0 ? void 0 : _b.map(escapeUserAgent)) || [];\n    const sdkUserAgentValue = [...defaultUserAgent, ...userAgent, ...customUserAgent].join(constants_1.SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(constants_1.SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[constants_1.X_AMZ_USER_AGENT] = headers[constants_1.X_AMZ_USER_AGENT]\n                ? `${headers[constants_1.USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[constants_1.USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[constants_1.X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexports.userAgentMiddleware = userAgentMiddleware;\nconst escapeUserAgent = ([name, version]) => {\n    const prefixSeparatorIndex = name.indexOf(\"/\");\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .map((item) => item === null || item === void 0 ? void 0 : item.replace(constants_1.UA_ESCAPE_REGEX, \"_\"))\n        .join(\"/\");\n};\nexports.getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nconst getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add((0, exports.userAgentMiddleware)(config), exports.getUserAgentMiddlewareOptions);\n    },\n});\nexports.getUserAgentPlugin = getUserAgentPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadConfig = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fromEnv_1 = require(\"./fromEnv\");\nconst fromSharedConfigFiles_1 = require(\"./fromSharedConfigFiles\");\nconst fromStatic_1 = require(\"./fromStatic\");\nconst loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => (0, property_provider_1.memoize)((0, property_provider_1.chain)((0, fromEnv_1.fromEnv)(environmentVariableSelector), (0, fromSharedConfigFiles_1.fromSharedConfigFiles)(configFileSelector, configuration), (0, fromStatic_1.fromStatic)(defaultValue)));\nexports.loadConfig = loadConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromEnv = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fromEnv = (envVarSelector) => async () => {\n    try {\n        const config = envVarSelector(process.env);\n        if (config === undefined) {\n            throw new Error();\n        }\n        return config;\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(e.message || `Cannot load config from environment variables with getter: ${envVarSelector}`);\n    }\n};\nexports.fromEnv = fromEnv;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromSharedConfigFiles = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n    const profile = (0, shared_ini_file_loader_1.getProfileName)(init);\n    const { configFile, credentialsFile } = await (0, shared_ini_file_loader_1.loadSharedConfigFiles)(init);\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\"\n        ? { ...profileFromCredentials, ...profileFromConfig }\n        : { ...profileFromConfig, ...profileFromCredentials };\n    try {\n        const configValue = configSelector(mergedProfile);\n        if (configValue === undefined) {\n            throw new Error();\n        }\n        return configValue;\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(e.message ||\n            `Cannot load config for profile ${profile} in SDK configuration files with getter: ${configSelector}`);\n    }\n};\nexports.fromSharedConfigFiles = fromSharedConfigFiles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromStatic = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst isFunction = (func) => typeof func === \"function\";\nconst fromStatic = (defaultValue) => isFunction(defaultValue) ? async () => await defaultValue() : (0, property_provider_1.fromStatic)(defaultValue);\nexports.fromStatic = fromStatic;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configLoader\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODEJS_TIMEOUT_ERROR_CODES = void 0;\nexports.NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTransformedHeaders = void 0;\nconst getTransformedHeaders = (headers) => {\n    const transformedHeaders = {};\n    for (const name of Object.keys(headers)) {\n        const headerValues = headers[name];\n        transformedHeaders[name] = Array.isArray(headerValues) ? headerValues.join(\",\") : headerValues;\n    }\n    return transformedHeaders;\n};\nexports.getTransformedHeaders = getTransformedHeaders;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./node-http-handler\"), exports);\ntslib_1.__exportStar(require(\"./node-http2-handler\"), exports);\ntslib_1.__exportStar(require(\"./stream-collector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttpHandler = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst querystring_builder_1 = require(\"@aws-sdk/querystring-builder\");\nconst http_1 = require(\"http\");\nconst https_1 = require(\"https\");\nconst constants_1 = require(\"./constants\");\nconst get_transformed_headers_1 = require(\"./get-transformed-headers\");\nconst set_connection_timeout_1 = require(\"./set-connection-timeout\");\nconst set_socket_timeout_1 = require(\"./set-socket-timeout\");\nconst write_request_body_1 = require(\"./write-request-body\");\nclass NodeHttpHandler {\n    constructor(options) {\n        this.metadata = { handlerProtocol: \"http/1.1\" };\n        this.configProvider = new Promise((resolve, reject) => {\n            if (typeof options === \"function\") {\n                options()\n                    .then((_options) => {\n                    resolve(this.resolveDefaultConfig(_options));\n                })\n                    .catch(reject);\n            }\n            else {\n                resolve(this.resolveDefaultConfig(options));\n            }\n        });\n    }\n    resolveDefaultConfig(options) {\n        const { connectionTimeout, socketTimeout, httpAgent, httpsAgent } = options || {};\n        const keepAlive = true;\n        const maxSockets = 50;\n        return {\n            connectionTimeout,\n            socketTimeout,\n            httpAgent: httpAgent || new http_1.Agent({ keepAlive, maxSockets }),\n            httpsAgent: httpsAgent || new https_1.Agent({ keepAlive, maxSockets }),\n        };\n    }\n    destroy() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.httpAgent) === null || _b === void 0 ? void 0 : _b.destroy();\n        (_d = (_c = this.config) === null || _c === void 0 ? void 0 : _c.httpsAgent) === null || _d === void 0 ? void 0 : _d.destroy();\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        return new Promise((resolve, reject) => {\n            if (!this.config) {\n                throw new Error(\"Node HTTP request handler config is not resolved\");\n            }\n            if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            const isSSL = request.protocol === \"https:\";\n            const queryString = (0, querystring_builder_1.buildQueryString)(request.query || {});\n            const nodeHttpsOptions = {\n                headers: request.headers,\n                host: request.hostname,\n                method: request.method,\n                path: queryString ? `${request.path}?${queryString}` : request.path,\n                port: request.port,\n                agent: isSSL ? this.config.httpsAgent : this.config.httpAgent,\n            };\n            const requestFunc = isSSL ? https_1.request : http_1.request;\n            const req = requestFunc(nodeHttpsOptions, (res) => {\n                const httpResponse = new protocol_http_1.HttpResponse({\n                    statusCode: res.statusCode || -1,\n                    headers: (0, get_transformed_headers_1.getTransformedHeaders)(res.headers),\n                    body: res,\n                });\n                resolve({ response: httpResponse });\n            });\n            req.on(\"error\", (err) => {\n                if (constants_1.NODEJS_TIMEOUT_ERROR_CODES.includes(err.code)) {\n                    reject(Object.assign(err, { name: \"TimeoutError\" }));\n                }\n                else {\n                    reject(err);\n                }\n            });\n            (0, set_connection_timeout_1.setConnectionTimeout)(req, reject, this.config.connectionTimeout);\n            (0, set_socket_timeout_1.setSocketTimeout)(req, reject, this.config.socketTimeout);\n            if (abortSignal) {\n                abortSignal.onabort = () => {\n                    req.abort();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            (0, write_request_body_1.writeRequestBody)(req, request);\n        });\n    }\n}\nexports.NodeHttpHandler = NodeHttpHandler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttp2Handler = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst querystring_builder_1 = require(\"@aws-sdk/querystring-builder\");\nconst http2_1 = require(\"http2\");\nconst get_transformed_headers_1 = require(\"./get-transformed-headers\");\nconst write_request_body_1 = require(\"./write-request-body\");\nclass NodeHttp2Handler {\n    constructor(options) {\n        this.metadata = { handlerProtocol: \"h2\" };\n        this.configProvider = new Promise((resolve, reject) => {\n            if (typeof options === \"function\") {\n                options()\n                    .then((opts) => {\n                    resolve(opts || {});\n                })\n                    .catch(reject);\n            }\n            else {\n                resolve(options || {});\n            }\n        });\n        this.sessionCache = new Map();\n    }\n    destroy() {\n        for (const sessions of this.sessionCache.values()) {\n            sessions.forEach((session) => this.destroySession(session));\n        }\n        this.sessionCache.clear();\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        const { requestTimeout, disableConcurrentStreams } = this.config;\n        return new Promise((resolve, rejectOriginal) => {\n            let fulfilled = false;\n            if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n                fulfilled = true;\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                rejectOriginal(abortError);\n                return;\n            }\n            const { hostname, method, port, protocol, path, query } = request;\n            const authority = `${protocol}//${hostname}${port ? `:${port}` : \"\"}`;\n            const session = this.getSession(authority, disableConcurrentStreams || false);\n            const reject = (err) => {\n                if (disableConcurrentStreams) {\n                    this.destroySession(session);\n                }\n                fulfilled = true;\n                rejectOriginal(err);\n            };\n            const queryString = (0, querystring_builder_1.buildQueryString)(query || {});\n            const req = session.request({\n                ...request.headers,\n                [http2_1.constants.HTTP2_HEADER_PATH]: queryString ? `${path}?${queryString}` : path,\n                [http2_1.constants.HTTP2_HEADER_METHOD]: method,\n            });\n            session.ref();\n            req.on(\"response\", (headers) => {\n                const httpResponse = new protocol_http_1.HttpResponse({\n                    statusCode: headers[\":status\"] || -1,\n                    headers: (0, get_transformed_headers_1.getTransformedHeaders)(headers),\n                    body: req,\n                });\n                fulfilled = true;\n                resolve({ response: httpResponse });\n                if (disableConcurrentStreams) {\n                    session.close();\n                    this.deleteSessionFromCache(authority, session);\n                }\n            });\n            if (requestTimeout) {\n                req.setTimeout(requestTimeout, () => {\n                    req.close();\n                    const timeoutError = new Error(`Stream timed out because of no activity for ${requestTimeout} ms`);\n                    timeoutError.name = \"TimeoutError\";\n                    reject(timeoutError);\n                });\n            }\n            if (abortSignal) {\n                abortSignal.onabort = () => {\n                    req.close();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            req.on(\"frameError\", (type, code, id) => {\n                reject(new Error(`Frame type id ${type} in stream id ${id} has failed with code ${code}.`));\n            });\n            req.on(\"error\", reject);\n            req.on(\"aborted\", () => {\n                reject(new Error(`HTTP/2 stream is abnormally aborted in mid-communication with result code ${req.rstCode}.`));\n            });\n            req.on(\"close\", () => {\n                session.unref();\n                if (disableConcurrentStreams) {\n                    session.destroy();\n                }\n                if (!fulfilled) {\n                    reject(new Error(\"Unexpected error: http2 request did not get a response\"));\n                }\n            });\n            (0, write_request_body_1.writeRequestBody)(req, request);\n        });\n    }\n    getSession(authority, disableConcurrentStreams) {\n        var _a;\n        const sessionCache = this.sessionCache;\n        const existingSessions = sessionCache.get(authority) || [];\n        if (existingSessions.length > 0 && !disableConcurrentStreams)\n            return existingSessions[0];\n        const newSession = (0, http2_1.connect)(authority);\n        newSession.unref();\n        const destroySessionCb = () => {\n            this.destroySession(newSession);\n            this.deleteSessionFromCache(authority, newSession);\n        };\n        newSession.on(\"goaway\", destroySessionCb);\n        newSession.on(\"error\", destroySessionCb);\n        newSession.on(\"frameError\", destroySessionCb);\n        newSession.on(\"close\", () => this.deleteSessionFromCache(authority, newSession));\n        if ((_a = this.config) === null || _a === void 0 ? void 0 : _a.sessionTimeout) {\n            newSession.setTimeout(this.config.sessionTimeout, destroySessionCb);\n        }\n        existingSessions.push(newSession);\n        sessionCache.set(authority, existingSessions);\n        return newSession;\n    }\n    destroySession(session) {\n        if (!session.destroyed) {\n            session.destroy();\n        }\n    }\n    deleteSessionFromCache(authority, session) {\n        const existingSessions = this.sessionCache.get(authority) || [];\n        if (!existingSessions.includes(session)) {\n            return;\n        }\n        this.sessionCache.set(authority, existingSessions.filter((s) => s !== session));\n    }\n}\nexports.NodeHttp2Handler = NodeHttp2Handler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setConnectionTimeout = void 0;\nconst setConnectionTimeout = (request, reject, timeoutInMs = 0) => {\n    if (!timeoutInMs) {\n        return;\n    }\n    request.on(\"socket\", (socket) => {\n        if (socket.connecting) {\n            const timeoutId = setTimeout(() => {\n                request.destroy();\n                reject(Object.assign(new Error(`Socket timed out without establishing a connection within ${timeoutInMs} ms`), {\n                    name: \"TimeoutError\",\n                }));\n            }, timeoutInMs);\n            socket.on(\"connect\", () => {\n                clearTimeout(timeoutId);\n            });\n        }\n    });\n};\nexports.setConnectionTimeout = setConnectionTimeout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setSocketTimeout = void 0;\nconst setSocketTimeout = (request, reject, timeoutInMs = 0) => {\n    request.setTimeout(timeoutInMs, () => {\n        request.destroy();\n        reject(Object.assign(new Error(`Connection timed out after ${timeoutInMs} ms`), { name: \"TimeoutError\" }));\n    });\n};\nexports.setSocketTimeout = setSocketTimeout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collector = void 0;\nconst stream_1 = require(\"stream\");\nclass Collector extends stream_1.Writable {\n    constructor() {\n        super(...arguments);\n        this.bufferedBytes = [];\n    }\n    _write(chunk, encoding, callback) {\n        this.bufferedBytes.push(chunk);\n        callback();\n    }\n}\nexports.Collector = Collector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.streamCollector = void 0;\nconst collector_1 = require(\"./collector\");\nconst streamCollector = (stream) => new Promise((resolve, reject) => {\n    const collector = new collector_1.Collector();\n    stream.pipe(collector);\n    stream.on(\"error\", (err) => {\n        collector.end();\n        reject(err);\n    });\n    collector.on(\"error\", reject);\n    collector.on(\"finish\", function () {\n        const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\n        resolve(bytes);\n    });\n});\nexports.streamCollector = streamCollector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeRequestBody = void 0;\nconst stream_1 = require(\"stream\");\nfunction writeRequestBody(httpRequest, request) {\n    const expect = request.headers[\"Expect\"] || request.headers[\"expect\"];\n    if (expect === \"100-continue\") {\n        httpRequest.on(\"continue\", () => {\n            writeBody(httpRequest, request.body);\n        });\n    }\n    else {\n        writeBody(httpRequest, request.body);\n    }\n}\nexports.writeRequestBody = writeRequestBody;\nfunction writeBody(httpRequest, body) {\n    if (body instanceof stream_1.Readable) {\n        body.pipe(httpRequest);\n    }\n    else if (body) {\n        httpRequest.end(Buffer.from(body));\n    }\n    else {\n        httpRequest.end();\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CredentialsProviderError = void 0;\nconst ProviderError_1 = require(\"./ProviderError\");\nclass CredentialsProviderError extends ProviderError_1.ProviderError {\n    constructor(message, tryNextLink = true) {\n        super(message, tryNextLink);\n        this.tryNextLink = tryNextLink;\n        this.name = \"CredentialsProviderError\";\n        Object.setPrototypeOf(this, CredentialsProviderError.prototype);\n    }\n}\nexports.CredentialsProviderError = CredentialsProviderError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProviderError = void 0;\nclass ProviderError extends Error {\n    constructor(message, tryNextLink = true) {\n        super(message);\n        this.tryNextLink = tryNextLink;\n        this.name = \"ProviderError\";\n        Object.setPrototypeOf(this, ProviderError.prototype);\n    }\n    static from(error, tryNextLink = true) {\n        return Object.assign(new this(error.message, tryNextLink), error);\n    }\n}\nexports.ProviderError = ProviderError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chain = void 0;\nconst ProviderError_1 = require(\"./ProviderError\");\nfunction chain(...providers) {\n    return () => {\n        let promise = Promise.reject(new ProviderError_1.ProviderError(\"No providers in chain\"));\n        for (const provider of providers) {\n            promise = promise.catch((err) => {\n                if (err === null || err === void 0 ? void 0 : err.tryNextLink) {\n                    return provider();\n                }\n                throw err;\n            });\n        }\n        return promise;\n    };\n}\nexports.chain = chain;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromStatic = void 0;\nconst fromStatic = (staticValue) => () => Promise.resolve(staticValue);\nexports.fromStatic = fromStatic;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./CredentialsProviderError\"), exports);\ntslib_1.__exportStar(require(\"./ProviderError\"), exports);\ntslib_1.__exportStar(require(\"./chain\"), exports);\ntslib_1.__exportStar(require(\"./fromStatic\"), exports);\ntslib_1.__exportStar(require(\"./memoize\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.memoize = void 0;\nconst memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || (options === null || options === void 0 ? void 0 : options.forceRefresh)) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || (options === null || options === void 0 ? void 0 : options.forceRefresh)) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\nexports.memoize = memoize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpRequest = void 0;\nclass HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n    }\n    static isInstance(request) {\n        if (!request)\n            return false;\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        const cloned = new HttpRequest({\n            ...this,\n            headers: { ...this.headers },\n        });\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    }\n}\nexports.HttpRequest = HttpRequest;\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpResponse = void 0;\nclass HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\nexports.HttpResponse = HttpResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./httpHandler\"), exports);\ntslib_1.__exportStar(require(\"./httpRequest\"), exports);\ntslib_1.__exportStar(require(\"./httpResponse\"), exports);\ntslib_1.__exportStar(require(\"./isValidHostname\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidHostname = void 0;\nfunction isValidHostname(hostname) {\n    const hostPattern = /^[a-z0-9][a-z0-9\\.\\-]*[a-z0-9]$/;\n    return hostPattern.test(hostname);\n}\nexports.isValidHostname = isValidHostname;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildQueryString = void 0;\nconst util_uri_escape_1 = require(\"@aws-sdk/util-uri-escape\");\nfunction buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = (0, util_uri_escape_1.escapeUri)(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${(0, util_uri_escape_1.escapeUri)(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${(0, util_uri_escape_1.escapeUri)(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\nexports.buildQueryString = buildQueryString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseQueryString = void 0;\nfunction parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\nexports.parseQueryString = parseQueryString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TRANSIENT_ERROR_STATUS_CODES = exports.TRANSIENT_ERROR_CODES = exports.THROTTLING_ERROR_CODES = exports.CLOCK_SKEW_ERROR_CODES = void 0;\nexports.CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\nexports.THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nexports.TRANSIENT_ERROR_CODES = [\"AbortError\", \"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nexports.TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTransientError = exports.isThrottlingError = exports.isClockSkewError = exports.isRetryableByTrait = void 0;\nconst constants_1 = require(\"./constants\");\nconst isRetryableByTrait = (error) => error.$retryable !== undefined;\nexports.isRetryableByTrait = isRetryableByTrait;\nconst isClockSkewError = (error) => constants_1.CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexports.isClockSkewError = isClockSkewError;\nconst isThrottlingError = (error) => {\n    var _a, _b;\n    return ((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 429 ||\n        constants_1.THROTTLING_ERROR_CODES.includes(error.name) ||\n        ((_b = error.$retryable) === null || _b === void 0 ? void 0 : _b.throttling) == true;\n};\nexports.isThrottlingError = isThrottlingError;\nconst isTransientError = (error) => {\n    var _a;\n    return constants_1.TRANSIENT_ERROR_CODES.includes(error.name) ||\n        constants_1.TRANSIENT_ERROR_STATUS_CODES.includes(((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) || 0);\n};\nexports.isTransientError = isTransientError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getConfigFilepath = exports.ENV_CONFIG_PATH = void 0;\nconst path_1 = require(\"path\");\nconst getHomeDir_1 = require(\"./getHomeDir\");\nexports.ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nconst getConfigFilepath = () => process.env[exports.ENV_CONFIG_PATH] || (0, path_1.join)((0, getHomeDir_1.getHomeDir)(), \".aws\", \"config\");\nexports.getConfigFilepath = getConfigFilepath;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCredentialsFilepath = exports.ENV_CREDENTIALS_PATH = void 0;\nconst path_1 = require(\"path\");\nconst getHomeDir_1 = require(\"./getHomeDir\");\nexports.ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nconst getCredentialsFilepath = () => process.env[exports.ENV_CREDENTIALS_PATH] || (0, path_1.join)((0, getHomeDir_1.getHomeDir)(), \".aws\", \"credentials\");\nexports.getCredentialsFilepath = getCredentialsFilepath;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHomeDir = void 0;\nconst os_1 = require(\"os\");\nconst path_1 = require(\"path\");\nconst getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${path_1.sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    return (0, os_1.homedir)();\n};\nexports.getHomeDir = getHomeDir;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProfileData = void 0;\nconst profileKeyRegex = /^profile\\s([\"'])?([^\\1]+)\\1$/;\nconst getProfileData = (data) => Object.entries(data)\n    .filter(([key]) => profileKeyRegex.test(key))\n    .reduce((acc, [key, value]) => ({ ...acc, [profileKeyRegex.exec(key)[2]]: value }), {\n    ...(data.default && { default: data.default }),\n});\nexports.getProfileData = getProfileData;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProfileName = exports.DEFAULT_PROFILE = exports.ENV_PROFILE = void 0;\nexports.ENV_PROFILE = \"AWS_PROFILE\";\nexports.DEFAULT_PROFILE = \"default\";\nconst getProfileName = (init) => init.profile || process.env[exports.ENV_PROFILE] || exports.DEFAULT_PROFILE;\nexports.getProfileName = getProfileName;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSSOTokenFilepath = void 0;\nconst crypto_1 = require(\"crypto\");\nconst path_1 = require(\"path\");\nconst getHomeDir_1 = require(\"./getHomeDir\");\nconst getSSOTokenFilepath = (ssoStartUrl) => {\n    const hasher = (0, crypto_1.createHash)(\"sha1\");\n    const cacheName = hasher.update(ssoStartUrl).digest(\"hex\");\n    return (0, path_1.join)((0, getHomeDir_1.getHomeDir)(), \".aws\", \"sso\", \"cache\", `${cacheName}.json`);\n};\nexports.getSSOTokenFilepath = getSSOTokenFilepath;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSSOTokenFromFile = void 0;\nconst fs_1 = require(\"fs\");\nconst getSSOTokenFilepath_1 = require(\"./getSSOTokenFilepath\");\nconst { readFile } = fs_1.promises;\nconst getSSOTokenFromFile = async (ssoStartUrl) => {\n    const ssoTokenFilepath = (0, getSSOTokenFilepath_1.getSSOTokenFilepath)(ssoStartUrl);\n    const ssoTokenText = await readFile(ssoTokenFilepath, \"utf8\");\n    return JSON.parse(ssoTokenText);\n};\nexports.getSSOTokenFromFile = getSSOTokenFromFile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./getHomeDir\"), exports);\ntslib_1.__exportStar(require(\"./getProfileName\"), exports);\ntslib_1.__exportStar(require(\"./getSSOTokenFilepath\"), exports);\ntslib_1.__exportStar(require(\"./getSSOTokenFromFile\"), exports);\ntslib_1.__exportStar(require(\"./loadSharedConfigFiles\"), exports);\ntslib_1.__exportStar(require(\"./parseKnownFiles\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadSharedConfigFiles = void 0;\nconst getConfigFilepath_1 = require(\"./getConfigFilepath\");\nconst getCredentialsFilepath_1 = require(\"./getCredentialsFilepath\");\nconst getProfileData_1 = require(\"./getProfileData\");\nconst parseIni_1 = require(\"./parseIni\");\nconst slurpFile_1 = require(\"./slurpFile\");\nconst swallowError = () => ({});\nconst loadSharedConfigFiles = async (init = {}) => {\n    const { filepath = (0, getCredentialsFilepath_1.getCredentialsFilepath)(), configFilepath = (0, getConfigFilepath_1.getConfigFilepath)() } = init;\n    const parsedFiles = await Promise.all([\n        (0, slurpFile_1.slurpFile)(configFilepath).then(parseIni_1.parseIni).then(getProfileData_1.getProfileData).catch(swallowError),\n        (0, slurpFile_1.slurpFile)(filepath).then(parseIni_1.parseIni).catch(swallowError),\n    ]);\n    return {\n        configFile: parsedFiles[0],\n        credentialsFile: parsedFiles[1],\n    };\n};\nexports.loadSharedConfigFiles = loadSharedConfigFiles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseIni = void 0;\nconst profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nconst parseIni = (iniData) => {\n    const map = {};\n    let currentSection;\n    for (let line of iniData.split(/\\r?\\n/)) {\n        line = line.split(/(^|\\s)[;#]/)[0].trim();\n        const isSection = line[0] === \"[\" && line[line.length - 1] === \"]\";\n        if (isSection) {\n            currentSection = line.substring(1, line.length - 1);\n            if (profileNameBlockList.includes(currentSection)) {\n                throw new Error(`Found invalid profile name \"${currentSection}\"`);\n            }\n        }\n        else if (currentSection) {\n            const indexOfEqualsSign = line.indexOf(\"=\");\n            const start = 0;\n            const end = line.length - 1;\n            const isAssignment = indexOfEqualsSign !== -1 && indexOfEqualsSign !== start && indexOfEqualsSign !== end;\n            if (isAssignment) {\n                const [name, value] = [\n                    line.substring(0, indexOfEqualsSign).trim(),\n                    line.substring(indexOfEqualsSign + 1).trim(),\n                ];\n                map[currentSection] = map[currentSection] || {};\n                map[currentSection][name] = value;\n            }\n        }\n    }\n    return map;\n};\nexports.parseIni = parseIni;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseKnownFiles = void 0;\nconst loadSharedConfigFiles_1 = require(\"./loadSharedConfigFiles\");\nconst parseKnownFiles = async (init) => {\n    const parsedFiles = await (0, loadSharedConfigFiles_1.loadSharedConfigFiles)(init);\n    return {\n        ...parsedFiles.configFile,\n        ...parsedFiles.credentialsFile,\n    };\n};\nexports.parseKnownFiles = parseKnownFiles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.slurpFile = void 0;\nconst fs_1 = require(\"fs\");\nconst { readFile } = fs_1.promises;\nconst filePromisesHash = {};\nconst slurpFile = (path) => {\n    if (!filePromisesHash[path]) {\n        filePromisesHash[path] = readFile(path, \"utf8\");\n    }\n    return filePromisesHash[path];\n};\nexports.slurpFile = slurpFile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignatureV4 = void 0;\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst util_middleware_1 = require(\"@aws-sdk/util-middleware\");\nconst constants_1 = require(\"./constants\");\nconst credentialDerivation_1 = require(\"./credentialDerivation\");\nconst getCanonicalHeaders_1 = require(\"./getCanonicalHeaders\");\nconst getCanonicalQuery_1 = require(\"./getCanonicalQuery\");\nconst getPayloadHash_1 = require(\"./getPayloadHash\");\nconst headerUtil_1 = require(\"./headerUtil\");\nconst moveHeadersToQuery_1 = require(\"./moveHeadersToQuery\");\nconst prepareRequest_1 = require(\"./prepareRequest\");\nconst utilDate_1 = require(\"./utilDate\");\nclass SignatureV4 {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = (0, util_middleware_1.normalizeProvider)(region);\n        this.credentialProvider = (0, util_middleware_1.normalizeProvider)(credentials);\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { longDate, shortDate } = formatDate(signingDate);\n        if (expiresIn > constants_1.MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = (0, credentialDerivation_1.createScope)(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        const request = (0, moveHeadersToQuery_1.moveHeadersToQuery)((0, prepareRequest_1.prepareRequest)(originalRequest), { unhoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[constants_1.TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[constants_1.ALGORITHM_QUERY_PARAM] = constants_1.ALGORITHM_IDENTIFIER;\n        request.query[constants_1.CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[constants_1.AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[constants_1.EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = (0, getCanonicalHeaders_1.getCanonicalHeaders)(request, unsignableHeaders, signableHeaders);\n        request.query[constants_1.SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n        request.query[constants_1.SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await (0, getPayloadHash_1.getPayloadHash)(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { shortDate, longDate } = formatDate(signingDate);\n        const scope = (0, credentialDerivation_1.createScope)(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        const hashedPayload = await (0, getPayloadHash_1.getPayloadHash)({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = (0, util_hex_encoding_1.toHex)(await hash.digest());\n        const stringToSign = [\n            constants_1.EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { shortDate } = formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(stringToSign);\n        return (0, util_hex_encoding_1.toHex)(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const request = (0, prepareRequest_1.prepareRequest)(requestToSign);\n        const { longDate, shortDate } = formatDate(signingDate);\n        const scope = (0, credentialDerivation_1.createScope)(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        request.headers[constants_1.AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[constants_1.TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await (0, getPayloadHash_1.getPayloadHash)(request, this.sha256);\n        if (!(0, headerUtil_1.hasHeader)(constants_1.SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[constants_1.SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = (0, getCanonicalHeaders_1.getCanonicalHeaders)(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[constants_1.AUTH_HEADER] =\n            `${constants_1.ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${(0, getCanonicalQuery_1.getCanonicalQuery)(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest) {\n        const hash = new this.sha256();\n        hash.update(canonicalRequest);\n        const hashedRequest = await hash.digest();\n        return `${constants_1.ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${(0, util_hex_encoding_1.toHex)(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if ((pathSegment === null || pathSegment === void 0 ? void 0 : pathSegment.length) === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${(path === null || path === void 0 ? void 0 : path.startsWith(\"/\")) ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && (path === null || path === void 0 ? void 0 : path.endsWith(\"/\")) ? \"/\" : \"\"}`;\n            const doubleEncoded = encodeURIComponent(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(stringToSign);\n        return (0, util_hex_encoding_1.toHex)(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return (0, credentialDerivation_1.getSigningKey)(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n}\nexports.SignatureV4 = SignatureV4;\nconst formatDate = (now) => {\n    const longDate = (0, utilDate_1.iso8601)(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\nconst getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(\";\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cloneQuery = exports.cloneRequest = void 0;\nconst cloneRequest = ({ headers, query, ...rest }) => ({\n    ...rest,\n    headers: { ...headers },\n    query: query ? (0, exports.cloneQuery)(query) : undefined,\n});\nexports.cloneRequest = cloneRequest;\nconst cloneQuery = (query) => Object.keys(query).reduce((carry, paramName) => {\n    const param = query[paramName];\n    return {\n        ...carry,\n        [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n}, {});\nexports.cloneQuery = cloneQuery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_PRESIGNED_TTL = exports.KEY_TYPE_IDENTIFIER = exports.MAX_CACHE_SIZE = exports.UNSIGNED_PAYLOAD = exports.EVENT_ALGORITHM_IDENTIFIER = exports.ALGORITHM_IDENTIFIER_V4A = exports.ALGORITHM_IDENTIFIER = exports.UNSIGNABLE_PATTERNS = exports.SEC_HEADER_PATTERN = exports.PROXY_HEADER_PATTERN = exports.ALWAYS_UNSIGNABLE_HEADERS = exports.HOST_HEADER = exports.TOKEN_HEADER = exports.SHA256_HEADER = exports.SIGNATURE_HEADER = exports.GENERATED_HEADERS = exports.DATE_HEADER = exports.AMZ_DATE_HEADER = exports.AUTH_HEADER = exports.REGION_SET_PARAM = exports.TOKEN_QUERY_PARAM = exports.SIGNATURE_QUERY_PARAM = exports.EXPIRES_QUERY_PARAM = exports.SIGNED_HEADERS_QUERY_PARAM = exports.AMZ_DATE_QUERY_PARAM = exports.CREDENTIAL_QUERY_PARAM = exports.ALGORITHM_QUERY_PARAM = void 0;\nexports.ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexports.CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexports.AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexports.SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexports.EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexports.SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexports.TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexports.REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexports.AUTH_HEADER = \"authorization\";\nexports.AMZ_DATE_HEADER = exports.AMZ_DATE_QUERY_PARAM.toLowerCase();\nexports.DATE_HEADER = \"date\";\nexports.GENERATED_HEADERS = [exports.AUTH_HEADER, exports.AMZ_DATE_HEADER, exports.DATE_HEADER];\nexports.SIGNATURE_HEADER = exports.SIGNATURE_QUERY_PARAM.toLowerCase();\nexports.SHA256_HEADER = \"x-amz-content-sha256\";\nexports.TOKEN_HEADER = exports.TOKEN_QUERY_PARAM.toLowerCase();\nexports.HOST_HEADER = \"host\";\nexports.ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexports.PROXY_HEADER_PATTERN = /^proxy-/;\nexports.SEC_HEADER_PATTERN = /^sec-/;\nexports.UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexports.ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexports.ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexports.EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexports.UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexports.MAX_CACHE_SIZE = 50;\nexports.KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexports.MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clearCredentialCache = exports.getSigningKey = exports.createScope = void 0;\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst constants_1 = require(\"./constants\");\nconst signingKeyCache = {};\nconst cacheQueue = [];\nconst createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${constants_1.KEY_TYPE_IDENTIFIER}`;\nexports.createScope = createScope;\nconst getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${(0, util_hex_encoding_1.toHex)(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > constants_1.MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, constants_1.KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexports.getSigningKey = getSigningKey;\nconst clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nexports.clearCredentialCache = clearCredentialCache;\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(data);\n    return hash.digest();\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCanonicalHeaders = void 0;\nconst constants_1 = require(\"./constants\");\nconst getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in constants_1.ALWAYS_UNSIGNABLE_HEADERS ||\n            (unsignableHeaders === null || unsignableHeaders === void 0 ? void 0 : unsignableHeaders.has(canonicalHeaderName)) ||\n            constants_1.PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            constants_1.SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\nexports.getCanonicalHeaders = getCanonicalHeaders;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCanonicalQuery = void 0;\nconst util_uri_escape_1 = require(\"@aws-sdk/util-uri-escape\");\nconst constants_1 = require(\"./constants\");\nconst getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query).sort()) {\n        if (key.toLowerCase() === constants_1.SIGNATURE_HEADER) {\n            continue;\n        }\n        keys.push(key);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = `${(0, util_uri_escape_1.escapeUri)(key)}=${(0, util_uri_escape_1.escapeUri)(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce((encoded, value) => encoded.concat([`${(0, util_uri_escape_1.escapeUri)(key)}=${(0, util_uri_escape_1.escapeUri)(value)}`]), [])\n                .join(\"&\");\n        }\n    }\n    return keys\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\nexports.getCanonicalQuery = getCanonicalQuery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPayloadHash = void 0;\nconst is_array_buffer_1 = require(\"@aws-sdk/is-array-buffer\");\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst constants_1 = require(\"./constants\");\nconst getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === constants_1.SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || (0, is_array_buffer_1.isArrayBuffer)(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(body);\n        return (0, util_hex_encoding_1.toHex)(await hashCtor.digest());\n    }\n    return constants_1.UNSIGNED_PAYLOAD;\n};\nexports.getPayloadHash = getPayloadHash;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deleteHeader = exports.getHeaderValue = exports.hasHeader = void 0;\nconst hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexports.hasHeader = hasHeader;\nconst getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexports.getHeaderValue = getHeaderValue;\nconst deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\nexports.deleteHeader = deleteHeader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepareRequest = exports.moveHeadersToQuery = exports.getPayloadHash = exports.getCanonicalQuery = exports.getCanonicalHeaders = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./SignatureV4\"), exports);\nvar getCanonicalHeaders_1 = require(\"./getCanonicalHeaders\");\nObject.defineProperty(exports, \"getCanonicalHeaders\", { enumerable: true, get: function () { return getCanonicalHeaders_1.getCanonicalHeaders; } });\nvar getCanonicalQuery_1 = require(\"./getCanonicalQuery\");\nObject.defineProperty(exports, \"getCanonicalQuery\", { enumerable: true, get: function () { return getCanonicalQuery_1.getCanonicalQuery; } });\nvar getPayloadHash_1 = require(\"./getPayloadHash\");\nObject.defineProperty(exports, \"getPayloadHash\", { enumerable: true, get: function () { return getPayloadHash_1.getPayloadHash; } });\nvar moveHeadersToQuery_1 = require(\"./moveHeadersToQuery\");\nObject.defineProperty(exports, \"moveHeadersToQuery\", { enumerable: true, get: function () { return moveHeadersToQuery_1.moveHeadersToQuery; } });\nvar prepareRequest_1 = require(\"./prepareRequest\");\nObject.defineProperty(exports, \"prepareRequest\", { enumerable: true, get: function () { return prepareRequest_1.prepareRequest; } });\ntslib_1.__exportStar(require(\"./credentialDerivation\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.moveHeadersToQuery = void 0;\nconst cloneRequest_1 = require(\"./cloneRequest\");\nconst moveHeadersToQuery = (request, options = {}) => {\n    var _a;\n    const { headers, query = {} } = typeof request.clone === \"function\" ? request.clone() : (0, cloneRequest_1.cloneRequest)(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if (lname.slice(0, 6) === \"x-amz-\" && !((_a = options.unhoistableHeaders) === null || _a === void 0 ? void 0 : _a.has(lname))) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\nexports.moveHeadersToQuery = moveHeadersToQuery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepareRequest = void 0;\nconst cloneRequest_1 = require(\"./cloneRequest\");\nconst constants_1 = require(\"./constants\");\nconst prepareRequest = (request) => {\n    request = typeof request.clone === \"function\" ? request.clone() : (0, cloneRequest_1.cloneRequest)(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (constants_1.GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\nexports.prepareRequest = prepareRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDate = exports.iso8601 = void 0;\nconst iso8601 = (time) => (0, exports.toDate)(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexports.iso8601 = iso8601;\nconst toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\nexports.toDate = toDate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = void 0;\nconst middleware_stack_1 = require(\"@aws-sdk/middleware-stack\");\nclass Client {\n    constructor(config) {\n        this.middlewareStack = (0, middleware_stack_1.constructStack)();\n        this.config = config;\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        if (this.config.requestHandler.destroy)\n            this.config.requestHandler.destroy();\n    }\n}\nexports.Client = Client;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Command = void 0;\nconst middleware_stack_1 = require(\"@aws-sdk/middleware-stack\");\nclass Command {\n    constructor() {\n        this.middlewareStack = (0, middleware_stack_1.constructStack)();\n    }\n}\nexports.Command = Command;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SENSITIVE_STRING = void 0;\nexports.SENSITIVE_STRING = \"***SensitiveInformation***\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseEpochTimestamp = exports.parseRfc7231DateTime = exports.parseRfc3339DateTime = exports.dateToUtcString = void 0;\nconst parse_utils_1 = require(\"./parse-utils\");\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nfunction dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nexports.dateToUtcString = dateToUtcString;\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nconst parseRfc3339DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    const year = (0, parse_utils_1.strictParseShort)(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n};\nexports.parseRfc3339DateTime = parseRfc3339DateTime;\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\nconst parseRfc7231DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n    }\n    let match = IMF_FIXDATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return buildDate((0, parse_utils_1.strictParseShort)(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    match = RFC_850_DATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n            hours,\n            minutes,\n            seconds,\n            fractionalMilliseconds,\n        }));\n    }\n    match = ASC_TIME.exec(value);\n    if (match) {\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n        return buildDate((0, parse_utils_1.strictParseShort)(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\n};\nexports.parseRfc7231DateTime = parseRfc7231DateTime;\nconst parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = (0, parse_utils_1.strictParseDouble)(value);\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\nexports.parseEpochTimestamp = parseEpochTimestamp;\nconst buildDate = (year, month, day, time) => {\n    const adjustedMonth = month - 1;\n    validateDayOfMonth(year, adjustedMonth, day);\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\n};\nconst parseTwoDigitYear = (value) => {\n    const thisYear = new Date().getUTCFullYear();\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + (0, parse_utils_1.strictParseShort)(stripLeadingZeroes(value));\n    if (valueInThisCentury < thisYear) {\n        return valueInThisCentury + 100;\n    }\n    return valueInThisCentury;\n};\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\nconst adjustRfc850Year = (input) => {\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\n    }\n    return input;\n};\nconst parseMonthByShortName = (value) => {\n    const monthIdx = MONTHS.indexOf(value);\n    if (monthIdx < 0) {\n        throw new TypeError(`Invalid month: ${value}`);\n    }\n    return monthIdx + 1;\n};\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst validateDayOfMonth = (year, month, day) => {\n    let maxDays = DAYS_IN_MONTH[month];\n    if (month === 1 && isLeapYear(year)) {\n        maxDays = 29;\n    }\n    if (day > maxDays) {\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n    }\n};\nconst isLeapYear = (year) => {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n};\nconst parseDateValue = (value, type, lower, upper) => {\n    const dateVal = (0, parse_utils_1.strictParseByte)(stripLeadingZeroes(value));\n    if (dateVal < lower || dateVal > upper) {\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n    }\n    return dateVal;\n};\nconst parseMilliseconds = (value) => {\n    if (value === null || value === undefined) {\n        return 0;\n    }\n    return (0, parse_utils_1.strictParseFloat32)(\"0.\" + value) * 1000;\n};\nconst stripLeadingZeroes = (value) => {\n    let idx = 0;\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n        idx++;\n    }\n    if (idx === 0) {\n        return value;\n    }\n    return value.slice(idx);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.throwDefaultError = void 0;\nconst exceptions_1 = require(\"./exceptions\");\nconst throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody.code || parsedBody.Code || errorCode || statusCode || \"UnknowError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw (0, exceptions_1.decorateServiceException)(response, parsedBody);\n};\nexports.throwDefaultError = throwDefaultError;\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadConfigsForDefaultMode = void 0;\nconst loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\nexports.loadConfigsForDefaultMode = loadConfigsForDefaultMode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.emitWarningIfUnsupportedVersion = void 0;\nlet warningEmitted = false;\nconst emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 14) {\n        warningEmitted = true;\n        process.emitWarning(`The AWS SDK for JavaScript (v3) will\\n` +\n            `no longer support Node.js ${version} on November 1, 2022.\\n\\n` +\n            `To continue receiving updates to AWS services, bug fixes, and security\\n` +\n            `updates please upgrade to Node.js 14.x or later.\\n\\n` +\n            `For details, please refer our blog post: https://a.co/48dbdYz`, `NodeDeprecationWarning`);\n    }\n};\nexports.emitWarningIfUnsupportedVersion = emitWarningIfUnsupportedVersion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decorateServiceException = exports.ServiceException = void 0;\nclass ServiceException extends Error {\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, ServiceException.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n}\nexports.ServiceException = ServiceException;\nconst decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\nexports.decorateServiceException = decorateServiceException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendedEncodeURIComponent = void 0;\nfunction extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\nexports.extendedEncodeURIComponent = extendedEncodeURIComponent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getArrayIfSingleItem = void 0;\nconst getArrayIfSingleItem = (mayBeArray) => Array.isArray(mayBeArray) ? mayBeArray : [mayBeArray];\nexports.getArrayIfSingleItem = getArrayIfSingleItem;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValueFromTextNode = void 0;\nconst getValueFromTextNode = (obj) => {\n    const textNodeName = \"#text\";\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n            obj[key] = obj[key][textNodeName];\n        }\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            obj[key] = (0, exports.getValueFromTextNode)(obj[key]);\n        }\n    }\n    return obj;\n};\nexports.getValueFromTextNode = getValueFromTextNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./client\"), exports);\ntslib_1.__exportStar(require(\"./command\"), exports);\ntslib_1.__exportStar(require(\"./constants\"), exports);\ntslib_1.__exportStar(require(\"./date-utils\"), exports);\ntslib_1.__exportStar(require(\"./default-error-handler\"), exports);\ntslib_1.__exportStar(require(\"./defaults-mode\"), exports);\ntslib_1.__exportStar(require(\"./emitWarningIfUnsupportedVersion\"), exports);\ntslib_1.__exportStar(require(\"./exceptions\"), exports);\ntslib_1.__exportStar(require(\"./extended-encode-uri-component\"), exports);\ntslib_1.__exportStar(require(\"./get-array-if-single-item\"), exports);\ntslib_1.__exportStar(require(\"./get-value-from-text-node\"), exports);\ntslib_1.__exportStar(require(\"./lazy-json\"), exports);\ntslib_1.__exportStar(require(\"./object-mapping\"), exports);\ntslib_1.__exportStar(require(\"./parse-utils\"), exports);\ntslib_1.__exportStar(require(\"./resolve-path\"), exports);\ntslib_1.__exportStar(require(\"./ser-utils\"), exports);\ntslib_1.__exportStar(require(\"./split-every\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LazyJsonString = exports.StringWrapper = void 0;\nconst StringWrapper = function () {\n    const Class = Object.getPrototypeOf(this).constructor;\n    const Constructor = Function.bind.apply(String, [null, ...arguments]);\n    const instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nexports.StringWrapper = StringWrapper;\nexports.StringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: exports.StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(exports.StringWrapper, String);\nclass LazyJsonString extends exports.StringWrapper {\n    deserializeJSON() {\n        return JSON.parse(super.toString());\n    }\n    toJSON() {\n        return super.toString();\n    }\n    static fromObject(object) {\n        if (object instanceof LazyJsonString) {\n            return object;\n        }\n        else if (object instanceof String || typeof object === \"string\") {\n            return new LazyJsonString(object);\n        }\n        return new LazyJsonString(JSON.stringify(object));\n    }\n}\nexports.LazyJsonString = LazyJsonString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertMap = exports.map = void 0;\nfunction map(arg0, arg1, arg2) {\n    let target;\n    let filter;\n    let instructions;\n    if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\n        target = {};\n        instructions = arg0;\n    }\n    else {\n        target = arg0;\n        if (typeof arg1 === \"function\") {\n            filter = arg1;\n            instructions = arg2;\n            return mapWithFilter(target, filter, instructions);\n        }\n        else {\n            instructions = arg1;\n        }\n    }\n    for (const key of Object.keys(instructions)) {\n        if (!Array.isArray(instructions[key])) {\n            target[key] = instructions[key];\n            continue;\n        }\n        let [filter, value] = instructions[key];\n        if (typeof value === \"function\") {\n            let _value;\n            const defaultFilterPassed = filter === undefined && (_value = value()) != null;\n            const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\n            if (defaultFilterPassed) {\n                target[key] = _value;\n            }\n            else if (customFilterPassed) {\n                target[key] = value();\n            }\n        }\n        else {\n            const defaultFilterPassed = filter === undefined && value != null;\n            const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\n            if (defaultFilterPassed || customFilterPassed) {\n                target[key] = value;\n            }\n        }\n    }\n    return target;\n}\nexports.map = map;\nconst convertMap = (target) => {\n    const output = {};\n    for (const [k, v] of Object.entries(target || {})) {\n        output[k] = [, v];\n    }\n    return output;\n};\nexports.convertMap = convertMap;\nconst mapWithFilter = (target, filter, instructions) => {\n    return map(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {\n        if (Array.isArray(value)) {\n            _instructions[key] = value;\n        }\n        else {\n            if (typeof value === \"function\") {\n                _instructions[key] = [filter, value()];\n            }\n            else {\n                _instructions[key] = [filter, value];\n            }\n        }\n        return _instructions;\n    }, {}));\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.strictParseByte = exports.strictParseShort = exports.strictParseInt32 = exports.strictParseInt = exports.strictParseLong = exports.limitedParseFloat32 = exports.limitedParseFloat = exports.handleFloat = exports.limitedParseDouble = exports.strictParseFloat32 = exports.strictParseFloat = exports.strictParseDouble = exports.expectUnion = exports.expectString = exports.expectObject = exports.expectNonNull = exports.expectByte = exports.expectShort = exports.expectInt32 = exports.expectInt = exports.expectLong = exports.expectFloat32 = exports.expectNumber = exports.expectBoolean = exports.parseBoolean = void 0;\nconst parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexports.parseBoolean = parseBoolean;\nconst expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}`);\n};\nexports.expectBoolean = expectBoolean;\nconst expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}`);\n};\nexports.expectNumber = expectNumber;\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nconst expectFloat32 = (value) => {\n    const expected = (0, exports.expectNumber)(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexports.expectFloat32 = expectFloat32;\nconst expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}`);\n};\nexports.expectLong = expectLong;\nexports.expectInt = exports.expectLong;\nconst expectInt32 = (value) => expectSizedInt(value, 32);\nexports.expectInt32 = expectInt32;\nconst expectShort = (value) => expectSizedInt(value, 16);\nexports.expectShort = expectShort;\nconst expectByte = (value) => expectSizedInt(value, 8);\nexports.expectByte = expectByte;\nconst expectSizedInt = (value, size) => {\n    const expected = (0, exports.expectLong)(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nconst expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexports.expectNonNull = expectNonNull;\nconst expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected object, got ${typeof value}`);\n};\nexports.expectObject = expectObject;\nconst expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    throw new TypeError(`Expected string, got ${typeof value}`);\n};\nexports.expectString = expectString;\nconst expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = (0, exports.expectObject)(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([_, v]) => v !== null && v !== undefined)\n        .map(([k, _]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexports.expectUnion = expectUnion;\nconst strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return (0, exports.expectNumber)(parseNumber(value));\n    }\n    return (0, exports.expectNumber)(value);\n};\nexports.strictParseDouble = strictParseDouble;\nexports.strictParseFloat = exports.strictParseDouble;\nconst strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return (0, exports.expectFloat32)(parseNumber(value));\n    }\n    return (0, exports.expectFloat32)(value);\n};\nexports.strictParseFloat32 = strictParseFloat32;\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nconst limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return (0, exports.expectNumber)(value);\n};\nexports.limitedParseDouble = limitedParseDouble;\nexports.handleFloat = exports.limitedParseDouble;\nexports.limitedParseFloat = exports.limitedParseDouble;\nconst limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return (0, exports.expectFloat32)(value);\n};\nexports.limitedParseFloat32 = limitedParseFloat32;\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nconst strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return (0, exports.expectLong)(parseNumber(value));\n    }\n    return (0, exports.expectLong)(value);\n};\nexports.strictParseLong = strictParseLong;\nexports.strictParseInt = exports.strictParseLong;\nconst strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return (0, exports.expectInt32)(parseNumber(value));\n    }\n    return (0, exports.expectInt32)(value);\n};\nexports.strictParseInt32 = strictParseInt32;\nconst strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return (0, exports.expectShort)(parseNumber(value));\n    }\n    return (0, exports.expectShort)(value);\n};\nexports.strictParseShort = strictParseShort;\nconst strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return (0, exports.expectByte)(parseNumber(value));\n    }\n    return (0, exports.expectByte)(value);\n};\nexports.strictParseByte = strictParseByte;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolvedPath = void 0;\nconst extended_encode_uri_component_1 = require(\"./extended-encode-uri-component\");\nconst resolvedPath = (resolvedPath, input, memberName, labelValueProvider, uriLabel, isGreedyLabel) => {\n    if (input != null && input[memberName] !== undefined) {\n        const labelValue = labelValueProvider();\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: \" + memberName + \".\");\n        }\n        resolvedPath = resolvedPath.replace(uriLabel, isGreedyLabel\n            ? labelValue\n                .split(\"/\")\n                .map((segment) => (0, extended_encode_uri_component_1.extendedEncodeURIComponent)(segment))\n                .join(\"/\")\n            : (0, extended_encode_uri_component_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: \" + memberName + \".\");\n    }\n    return resolvedPath;\n};\nexports.resolvedPath = resolvedPath;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeFloat = void 0;\nconst serializeFloat = (value) => {\n    if (value !== value) {\n        return \"NaN\";\n    }\n    switch (value) {\n        case Infinity:\n            return \"Infinity\";\n        case -Infinity:\n            return \"-Infinity\";\n        default:\n            return value;\n    }\n};\nexports.serializeFloat = serializeFloat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitEvery = void 0;\nfunction splitEvery(value, delimiter, numDelimiters) {\n    if (numDelimiters <= 0 || !Number.isInteger(numDelimiters)) {\n        throw new Error(\"Invalid number of delimiters (\" + numDelimiters + \") for splitEvery.\");\n    }\n    const segments = value.split(delimiter);\n    if (numDelimiters === 1) {\n        return segments;\n    }\n    const compoundSegments = [];\n    let currentSegment = \"\";\n    for (let i = 0; i < segments.length; i++) {\n        if (currentSegment === \"\") {\n            currentSegment = segments[i];\n        }\n        else {\n            currentSegment += delimiter + segments[i];\n        }\n        if ((i + 1) % numDelimiters === 0) {\n            compoundSegments.push(currentSegment);\n            currentSegment = \"\";\n        }\n    }\n    if (currentSegment !== \"\") {\n        compoundSegments.push(currentSegment);\n    }\n    return compoundSegments;\n}\nexports.splitEvery = splitEvery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUrl = void 0;\nconst querystring_parser_1 = require(\"@aws-sdk/querystring-parser\");\nconst parseUrl = (url) => {\n    const { hostname, pathname, port, protocol, search } = new URL(url);\n    let query;\n    if (search) {\n        query = (0, querystring_parser_1.parseQueryString)(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\nexports.parseUrl = parseUrl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = exports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nfunction fromBase64(input) {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = (0, util_buffer_from_1.fromString)(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n}\nexports.fromBase64 = fromBase64;\nfunction toBase64(input) {\n    return (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n}\nexports.toBase64 = toBase64;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateBodyLength = void 0;\nconst fs_1 = require(\"fs\");\nconst calculateBodyLength = (body) => {\n    if (!body) {\n        return 0;\n    }\n    if (typeof body === \"string\") {\n        return Buffer.from(body).length;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    else if (typeof body.path === \"string\" || Buffer.isBuffer(body.path)) {\n        return (0, fs_1.lstatSync)(body.path).size;\n    }\n    else if (typeof body.fd === \"number\") {\n        return (0, fs_1.fstatSync)(body.fd).size;\n    }\n    throw new Error(`Body Length computation failed for ${body}`);\n};\nexports.calculateBodyLength = calculateBodyLength;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./calculateBodyLength\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromString = exports.fromArrayBuffer = void 0;\nconst is_array_buffer_1 = require(\"@aws-sdk/is-array-buffer\");\nconst buffer_1 = require(\"buffer\");\nconst fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!(0, is_array_buffer_1.isArrayBuffer)(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return buffer_1.Buffer.from(input, offset, length);\n};\nexports.fromArrayBuffer = fromArrayBuffer;\nconst fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? buffer_1.Buffer.from(input, encoding) : buffer_1.Buffer.from(input);\n};\nexports.fromString = fromString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.booleanSelector = exports.SelectorType = void 0;\nvar SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType = exports.SelectorType || (exports.SelectorType = {}));\nconst booleanSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    if (obj[key] === \"true\")\n        return true;\n    if (obj[key] === \"false\")\n        return false;\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};\nexports.booleanSelector = booleanSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./booleanSelector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IMDS_REGION_PATH = exports.DEFAULTS_MODE_OPTIONS = exports.ENV_IMDS_DISABLED = exports.AWS_DEFAULT_REGION_ENV = exports.AWS_REGION_ENV = exports.AWS_EXECUTION_ENV = void 0;\nexports.AWS_EXECUTION_ENV = \"AWS_EXECUTION_ENV\";\nexports.AWS_REGION_ENV = \"AWS_REGION\";\nexports.AWS_DEFAULT_REGION_ENV = \"AWS_DEFAULT_REGION\";\nexports.ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexports.DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\nexports.IMDS_REGION_PATH = \"/latest/meta-data/placement/region\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_DEFAULTS_MODE_CONFIG_OPTIONS = void 0;\nconst AWS_DEFAULTS_MODE_ENV = \"AWS_DEFAULTS_MODE\";\nconst AWS_DEFAULTS_MODE_CONFIG = \"defaults_mode\";\nexports.NODE_DEFAULTS_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        return env[AWS_DEFAULTS_MODE_ENV];\n    },\n    configFileSelector: (profile) => {\n        return profile[AWS_DEFAULTS_MODE_CONFIG];\n    },\n    default: \"legacy\",\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./resolveDefaultsModeConfig\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveDefaultsModeConfig = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst credential_provider_imds_1 = require(\"@aws-sdk/credential-provider-imds\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst constants_1 = require(\"./constants\");\nconst defaultsModeConfig_1 = require(\"./defaultsModeConfig\");\nconst resolveDefaultsModeConfig = ({ region = (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS), defaultsMode = (0, node_config_provider_1.loadConfig)(defaultsModeConfig_1.NODE_DEFAULTS_MODE_CONFIG_OPTIONS), } = {}) => (0, property_provider_1.memoize)(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode === null || mode === void 0 ? void 0 : mode.toLowerCase()) {\n        case \"auto\":\n            return resolveNodeDefaultsModeAuto(region);\n        case \"in-region\":\n        case \"cross-region\":\n        case \"mobile\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode === null || mode === void 0 ? void 0 : mode.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${constants_1.DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nexports.resolveDefaultsModeConfig = resolveDefaultsModeConfig;\nconst resolveNodeDefaultsModeAuto = async (clientRegion) => {\n    if (clientRegion) {\n        const resolvedRegion = typeof clientRegion === \"function\" ? await clientRegion() : clientRegion;\n        const inferredRegion = await inferPhysicalRegion();\n        if (!inferredRegion) {\n            return \"standard\";\n        }\n        if (resolvedRegion === inferredRegion) {\n            return \"in-region\";\n        }\n        else {\n            return \"cross-region\";\n        }\n    }\n    return \"standard\";\n};\nconst inferPhysicalRegion = async () => {\n    var _a;\n    if (process.env[constants_1.AWS_EXECUTION_ENV] && (process.env[constants_1.AWS_REGION_ENV] || process.env[constants_1.AWS_DEFAULT_REGION_ENV])) {\n        return (_a = process.env[constants_1.AWS_REGION_ENV]) !== null && _a !== void 0 ? _a : process.env[constants_1.AWS_DEFAULT_REGION_ENV];\n    }\n    if (!process.env[constants_1.ENV_IMDS_DISABLED]) {\n        try {\n            const endpoint = await (0, credential_provider_imds_1.getInstanceMetadataEndpoint)();\n            return (await (0, credential_provider_imds_1.httpRequest)({ ...endpoint, path: constants_1.IMDS_REGION_PATH })).toString();\n        }\n        catch (e) {\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toHex = exports.fromHex = void 0;\nconst SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nfunction fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexports.fromHex = fromHex;\nfunction toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\nexports.toHex = toHex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./normalizeProvider\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeProvider = void 0;\nconst normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\nexports.normalizeProvider = normalizeProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUriPath = void 0;\nconst escape_uri_1 = require(\"./escape-uri\");\nconst escapeUriPath = (uri) => uri.split(\"/\").map(escape_uri_1.escapeUri).join(\"/\");\nexports.escapeUriPath = escapeUriPath;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUri = void 0;\nconst escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nexports.escapeUri = escapeUri;\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./escape-uri\"), exports);\ntslib_1.__exportStar(require(\"./escape-uri-path\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultUserAgent = exports.UA_APP_ID_INI_NAME = exports.UA_APP_ID_ENV_NAME = void 0;\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst os_1 = require(\"os\");\nconst process_1 = require(\"process\");\nconst is_crt_available_1 = require(\"./is-crt-available\");\nexports.UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nexports.UA_APP_ID_INI_NAME = \"sdk-ua-app-id\";\nconst defaultUserAgent = ({ serviceId, clientVersion }) => {\n    const sections = [\n        [\"aws-sdk-js\", clientVersion],\n        [`os/${(0, os_1.platform)()}`, (0, os_1.release)()],\n        [\"lang/js\"],\n        [\"md/nodejs\", `${process_1.versions.node}`],\n    ];\n    const crtAvailable = (0, is_crt_available_1.isCrtAvailable)();\n    if (crtAvailable) {\n        sections.push(crtAvailable);\n    }\n    if (serviceId) {\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    if (process_1.env.AWS_EXECUTION_ENV) {\n        sections.push([`exec-env/${process_1.env.AWS_EXECUTION_ENV}`]);\n    }\n    const appIdPromise = (0, node_config_provider_1.loadConfig)({\n        environmentVariableSelector: (env) => env[exports.UA_APP_ID_ENV_NAME],\n        configFileSelector: (profile) => profile[exports.UA_APP_ID_INI_NAME],\n        default: undefined,\n    })();\n    let resolvedUserAgent = undefined;\n    return async () => {\n        if (!resolvedUserAgent) {\n            const appId = await appIdPromise;\n            resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\n        }\n        return resolvedUserAgent;\n    };\n};\nexports.defaultUserAgent = defaultUserAgent;\n",null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUtf8 = exports.fromUtf8 = void 0;\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\nconst fromUtf8 = (input) => {\n    const buf = (0, util_buffer_from_1.fromString)(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\nexports.fromUtf8 = fromUtf8;\nconst toUtf8 = (input) => (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\nexports.toUtf8 = toUtf8;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWaiter = void 0;\nconst poller_1 = require(\"./poller\");\nconst utils_1 = require(\"./utils\");\nconst waiter_1 = require(\"./waiter\");\nconst abortTimeout = async (abortSignal) => {\n    return new Promise((resolve) => {\n        abortSignal.onabort = () => resolve({ state: waiter_1.WaiterState.ABORTED });\n    });\n};\nconst createWaiter = async (options, input, acceptorChecks) => {\n    const params = {\n        ...waiter_1.waiterServiceDefaults,\n        ...options,\n    };\n    (0, utils_1.validateWaiterOptions)(params);\n    const exitConditions = [(0, poller_1.runPolling)(params, input, acceptorChecks)];\n    if (options.abortController) {\n        exitConditions.push(abortTimeout(options.abortController.signal));\n    }\n    if (options.abortSignal) {\n        exitConditions.push(abortTimeout(options.abortSignal));\n    }\n    return Promise.race(exitConditions);\n};\nexports.createWaiter = createWaiter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./createWaiter\"), exports);\ntslib_1.__exportStar(require(\"./waiter\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runPolling = void 0;\nconst sleep_1 = require(\"./utils/sleep\");\nconst waiter_1 = require(\"./waiter\");\nconst exponentialBackoffWithJitter = (minDelay, maxDelay, attemptCeiling, attempt) => {\n    if (attempt > attemptCeiling)\n        return maxDelay;\n    const delay = minDelay * 2 ** (attempt - 1);\n    return randomInRange(minDelay, delay);\n};\nconst randomInRange = (min, max) => min + Math.random() * (max - min);\nconst runPolling = async ({ minDelay, maxDelay, maxWaitTime, abortController, client, abortSignal }, input, acceptorChecks) => {\n    var _a;\n    const { state } = await acceptorChecks(client, input);\n    if (state !== waiter_1.WaiterState.RETRY) {\n        return { state };\n    }\n    let currentAttempt = 1;\n    const waitUntil = Date.now() + maxWaitTime * 1000;\n    const attemptCeiling = Math.log(maxDelay / minDelay) / Math.log(2) + 1;\n    while (true) {\n        if (((_a = abortController === null || abortController === void 0 ? void 0 : abortController.signal) === null || _a === void 0 ? void 0 : _a.aborted) || (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted)) {\n            return { state: waiter_1.WaiterState.ABORTED };\n        }\n        const delay = exponentialBackoffWithJitter(minDelay, maxDelay, attemptCeiling, currentAttempt);\n        if (Date.now() + delay * 1000 > waitUntil) {\n            return { state: waiter_1.WaiterState.TIMEOUT };\n        }\n        await (0, sleep_1.sleep)(delay);\n        const { state } = await acceptorChecks(client, input);\n        if (state !== waiter_1.WaiterState.RETRY) {\n            return { state };\n        }\n        currentAttempt += 1;\n    }\n};\nexports.runPolling = runPolling;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./sleep\"), exports);\ntslib_1.__exportStar(require(\"./validate\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sleep = void 0;\nconst sleep = (seconds) => {\n    return new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n};\nexports.sleep = sleep;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateWaiterOptions = void 0;\nconst validateWaiterOptions = (options) => {\n    if (options.maxWaitTime < 1) {\n        throw new Error(`WaiterConfiguration.maxWaitTime must be greater than 0`);\n    }\n    else if (options.minDelay < 1) {\n        throw new Error(`WaiterConfiguration.minDelay must be greater than 0`);\n    }\n    else if (options.maxDelay < 1) {\n        throw new Error(`WaiterConfiguration.maxDelay must be greater than 0`);\n    }\n    else if (options.maxWaitTime <= options.minDelay) {\n        throw new Error(`WaiterConfiguration.maxWaitTime [${options.maxWaitTime}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`);\n    }\n    else if (options.maxDelay < options.minDelay) {\n        throw new Error(`WaiterConfiguration.maxDelay [${options.maxDelay}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`);\n    }\n};\nexports.validateWaiterOptions = validateWaiterOptions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkExceptions = exports.WaiterState = exports.waiterServiceDefaults = void 0;\nexports.waiterServiceDefaults = {\n    minDelay: 2,\n    maxDelay: 120,\n};\nvar WaiterState;\n(function (WaiterState) {\n    WaiterState[\"ABORTED\"] = \"ABORTED\";\n    WaiterState[\"FAILURE\"] = \"FAILURE\";\n    WaiterState[\"SUCCESS\"] = \"SUCCESS\";\n    WaiterState[\"RETRY\"] = \"RETRY\";\n    WaiterState[\"TIMEOUT\"] = \"TIMEOUT\";\n})(WaiterState = exports.WaiterState || (exports.WaiterState = {}));\nconst checkExceptions = (result) => {\n    if (result.state === WaiterState.ABORTED) {\n        const abortError = new Error(`${JSON.stringify({\n            ...result,\n            reason: \"Request was aborted\",\n        })}`);\n        abortError.name = \"AbortError\";\n        throw abortError;\n    }\n    else if (result.state === WaiterState.TIMEOUT) {\n        const timeoutError = new Error(`${JSON.stringify({\n            ...result,\n            reason: \"Waiter has timed out\",\n        })}`);\n        timeoutError.name = \"TimeoutError\";\n        throw timeoutError;\n    }\n    else if (result.state !== WaiterState.SUCCESS) {\n        throw new Error(`${JSON.stringify({ result })}`);\n    }\n    return result;\n};\nexports.checkExceptions = checkExceptions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.XmlNode = void 0;\nconst escape_attribute_1 = require(\"./escape-attribute\");\nconst XmlText_1 = require(\"./XmlText\");\nclass XmlNode {\n    constructor(name, children = []) {\n        this.name = name;\n        this.children = children;\n        this.attributes = {};\n    }\n    static of(name, childText, withName) {\n        const node = new XmlNode(name);\n        if (childText !== undefined) {\n            node.addChildNode(new XmlText_1.XmlText(childText));\n        }\n        if (withName !== undefined) {\n            node.withName(withName);\n        }\n        return node;\n    }\n    withName(name) {\n        this.name = name;\n        return this;\n    }\n    addAttribute(name, value) {\n        this.attributes[name] = value;\n        return this;\n    }\n    addChildNode(child) {\n        this.children.push(child);\n        return this;\n    }\n    removeAttribute(name) {\n        delete this.attributes[name];\n        return this;\n    }\n    toString() {\n        const hasChildren = Boolean(this.children.length);\n        let xmlText = `<${this.name}`;\n        const attributes = this.attributes;\n        for (const attributeName of Object.keys(attributes)) {\n            const attribute = attributes[attributeName];\n            if (typeof attribute !== \"undefined\" && attribute !== null) {\n                xmlText += ` ${attributeName}=\"${(0, escape_attribute_1.escapeAttribute)(\"\" + attribute)}\"`;\n            }\n        }\n        return (xmlText += !hasChildren ? \"/>\" : `>${this.children.map((c) => c.toString()).join(\"\")}</${this.name}>`);\n    }\n}\nexports.XmlNode = XmlNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.XmlText = void 0;\nconst escape_element_1 = require(\"./escape-element\");\nclass XmlText {\n    constructor(value) {\n        this.value = value;\n    }\n    toString() {\n        return (0, escape_element_1.escapeElement)(\"\" + this.value);\n    }\n}\nexports.XmlText = XmlText;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeAttribute = void 0;\nfunction escapeAttribute(value) {\n    return value.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\");\n}\nexports.escapeAttribute = escapeAttribute;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeElement = void 0;\nfunction escapeElement(value) {\n    return value\n        .replace(/&/g, \"&amp;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&apos;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\\r/g, \"&#x0D;\")\n        .replace(/\\n/g, \"&#x0A;\")\n        .replace(/\\u0085/g, \"&#x85;\")\n        .replace(/\\u2028/, \"&#x2028;\");\n}\nexports.escapeElement = escapeElement;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./XmlNode\"), exports);\ntslib_1.__exportStar(require(\"./XmlText\"), exports);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = void 0;\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar legacy_json_1 = __importDefault(require(\"./maps/legacy.json\"));\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar decode_codepoint_1 = __importDefault(require(\"./decode_codepoint\"));\nvar strictEntityRe = /&(?:[a-zA-Z0-9]+|#[xX][\\da-fA-F]+|#\\d+);/g;\nexports.decodeXML = getStrictDecoder(xml_json_1.default);\nexports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);\nfunction getStrictDecoder(map) {\n    var replace = getReplacer(map);\n    return function (str) { return String(str).replace(strictEntityRe, replace); };\n}\nvar sorter = function (a, b) { return (a < b ? 1 : -1); };\nexports.decodeHTML = (function () {\n    var legacy = Object.keys(legacy_json_1.default).sort(sorter);\n    var keys = Object.keys(entities_json_1.default).sort(sorter);\n    for (var i = 0, j = 0; i < keys.length; i++) {\n        if (legacy[j] === keys[i]) {\n            keys[i] += \";?\";\n            j++;\n        }\n        else {\n            keys[i] += \";\";\n        }\n    }\n    var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n    var replace = getReplacer(entities_json_1.default);\n    function replacer(str) {\n        if (str.substr(-1) !== \";\")\n            str += \";\";\n        return replace(str);\n    }\n    // TODO consider creating a merged map\n    return function (str) { return String(str).replace(re, replacer); };\n})();\nfunction getReplacer(map) {\n    return function replace(str) {\n        if (str.charAt(1) === \"#\") {\n            var secondChar = str.charAt(2);\n            if (secondChar === \"X\" || secondChar === \"x\") {\n                return decode_codepoint_1.default(parseInt(str.substr(3), 16));\n            }\n            return decode_codepoint_1.default(parseInt(str.substr(2), 10));\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        return map[str.slice(1, -1)] || str;\n    };\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar decode_json_1 = __importDefault(require(\"./maps/decode.json\"));\n// Adapted from https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nvar fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.fromCodePoint ||\n    function (codePoint) {\n        var output = \"\";\n        if (codePoint > 0xffff) {\n            codePoint -= 0x10000;\n            output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n            codePoint = 0xdc00 | (codePoint & 0x3ff);\n        }\n        output += String.fromCharCode(codePoint);\n        return output;\n    };\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return \"\\uFFFD\";\n    }\n    if (codePoint in decode_json_1.default) {\n        codePoint = decode_json_1.default[codePoint];\n    }\n    return fromCodePoint(codePoint);\n}\nexports.default = decodeCodePoint;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeXML = getASCIIEncoder(inverseXML);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\n/**\n * Encodes all entities and non-ASCII characters in the input.\n *\n * This includes characters that are valid ASCII characters in HTML documents.\n * For example `#` will be encoded as `&num;`. To get a more compact output,\n * consider using the `encodeNonAsciiHTML` function.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in HTML\n * documents using HTML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeNonAsciiHTML = getASCIIEncoder(inverseHTML);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\n// /[^\\0-\\x7F]/gu\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nvar getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        function (str) { return str.codePointAt(0); }\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        function (c) {\n            return (c.charCodeAt(0) - 0xd800) * 0x400 +\n                c.charCodeAt(1) -\n                0xdc00 +\n                0x10000;\n        };\nfunction singleCharReplacer(c) {\n    return \"&#x\" + (c.length > 1 ? getCodePoint(c) : c.charCodeAt(0))\n        .toString(16)\n        .toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reEscapeChars = new RegExp(xmlReplacer.source + \"|\" + reNonASCII.source, \"g\");\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nfunction escape(data) {\n    return data.replace(reEscapeChars, singleCharReplacer);\n}\nexports.escape = escape;\n/**\n * Encodes all characters not valid in XML documents using numeric hexadecimal\n * reference (eg. `&#xfc;`).\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nfunction escapeUTF8(data) {\n    return data.replace(xmlReplacer, singleCharReplacer);\n}\nexports.escapeUTF8 = escapeUTF8;\nfunction getASCIIEncoder(obj) {\n    return function (data) {\n        return data.replace(reEscapeChars, function (c) { return obj[c] || singleCharReplacer(c); });\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeXMLStrict = exports.decodeHTML5Strict = exports.decodeHTML4Strict = exports.decodeHTML5 = exports.decodeHTML4 = exports.decodeHTMLStrict = exports.decodeHTML = exports.decodeXML = exports.encodeHTML5 = exports.encodeHTML4 = exports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = exports.encode = exports.decodeStrict = exports.decode = void 0;\nvar decode_1 = require(\"./decode\");\nvar encode_1 = require(\"./encode\");\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeXML` or `decodeHTML` directly.\n */\nfunction decode(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);\n}\nexports.decode = decode;\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeHTMLStrict` or `decodeXML` directly.\n */\nfunction decodeStrict(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);\n}\nexports.decodeStrict = decodeStrict;\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `encodeHTML`, `encodeXML` or `encodeNonAsciiHTML` directly.\n */\nfunction encode(data, level) {\n    return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);\n}\nexports.encode = encode;\nvar encode_2 = require(\"./encode\");\nObject.defineProperty(exports, \"encodeXML\", { enumerable: true, get: function () { return encode_2.encodeXML; } });\nObject.defineProperty(exports, \"encodeHTML\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeNonAsciiHTML\", { enumerable: true, get: function () { return encode_2.encodeNonAsciiHTML; } });\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return encode_2.escape; } });\nObject.defineProperty(exports, \"escapeUTF8\", { enumerable: true, get: function () { return encode_2.escapeUTF8; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"encodeHTML4\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeHTML5\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nvar decode_2 = require(\"./decode\");\nObject.defineProperty(exports, \"decodeXML\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\nObject.defineProperty(exports, \"decodeHTML\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTMLStrict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"decodeHTML4\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML5\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML4Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeHTML5Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeXMLStrict\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\n","'use strict';\n//parse Empty Node as self closing node\nconst buildOptions = require('./util').buildOptions;\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  format: false,\n  indentBy: '  ',\n  supressEmptyNode: false,\n  tagValueProcessor: function(a) {\n    return a;\n  },\n  attrValueProcessor: function(a) {\n    return a;\n  },\n};\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'cdataTagName',\n  'cdataPositionChar',\n  'format',\n  'indentBy',\n  'supressEmptyNode',\n  'tagValueProcessor',\n  'attrValueProcessor',\n];\n\nfunction Parser(options) {\n  this.options = buildOptions(options, defaultOptions, props);\n  if (this.options.ignoreAttributes || this.options.attrNodeName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n  if (this.options.cdataTagName) {\n    this.isCDATA = isCDATA;\n  } else {\n    this.isCDATA = function(/*a*/) {\n      return false;\n    };\n  }\n  this.replaceCDATAstr = replaceCDATAstr;\n  this.replaceCDATAarr = replaceCDATAarr;\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.supressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n}\n\nParser.prototype.parse = function(jObj) {\n  return this.j2x(jObj, 0).val;\n};\n\nParser.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  const keys = Object.keys(jObj);\n  const len = keys.length;\n  for (let i = 0; i < len; i++) {\n    const key = keys[i];\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += ' ' + attr + '=\"' + this.options.attrValueProcessor('' + jObj[key]) + '\"';\n      } else if (this.isCDATA(key)) {\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAstr('', jObj[key]);\n        }\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          if (jObj[this.options.cdataTagName]) {\n            //value will added while processing cdata\n          } else {\n            val += this.options.tagValueProcessor('' + jObj[key]);\n          }\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      if (this.isCDATA(key)) {\n        val += this.indentate(level);\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAarr('', jObj[key]);\n        }\n      } else {\n        //nested nodes\n        const arrLen = jObj[key].length;\n        for (let j = 0; j < arrLen; j++) {\n          const item = jObj[key][j];\n          if (typeof item === 'undefined') {\n            // supress undefined node\n          } else if (item === null) {\n            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          } else if (typeof item === 'object') {\n            const result = this.j2x(item, level + 1);\n            val += this.buildObjNode(result.val, key, result.attrStr, level);\n          } else {\n            val += this.buildTextNode(item, key, '', level);\n          }\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attrNodeName && key === this.options.attrNodeName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += ' ' + Ks[j] + '=\"' + this.options.attrValueProcessor('' + jObj[key][Ks[j]]) + '\"';\n        }\n      } else {\n        const result = this.j2x(jObj[key], level + 1);\n        val += this.buildObjNode(result.val, key, result.attrStr, level);\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction replaceCDATAstr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;\n  } else {\n    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);\n  }\n}\n\nfunction replaceCDATAarr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;\n  } else {\n    for (let v in cdata) {\n      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');\n    }\n    return str + this.newLine;\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && !val.includes('<')) {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      '>' +\n      val +\n      //+ this.newLine\n      // + this.indentate(level)\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  } else {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      this.tagEndChar +\n      val +\n      //+ this.newLine\n      this.indentate(level) +\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  return (\n    this.indentate(level) +\n    '<' +\n    key +\n    attrStr +\n    '>' +\n    this.options.tagValueProcessor(val) +\n    '</' +\n    key +\n    this.tagEndChar\n  );\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nfunction isCDATA(name) {\n  return name === this.options.cdataTagName;\n}\n\n//formatting\n//indentation\n//\\n after each closing or self closing tag\n\nmodule.exports = Parser;\n","'use strict';\nconst char = function(a) {\n  return String.fromCharCode(a);\n};\n\nconst chars = {\n  nilChar: char(176),\n  missingChar: char(201),\n  nilPremitive: char(175),\n  missingPremitive: char(200),\n\n  emptyChar: char(178),\n  emptyValue: char(177), //empty Premitive\n\n  boundryChar: char(179),\n\n  objStart: char(198),\n  arrStart: char(204),\n  arrayEnd: char(185),\n};\n\nconst charsArr = [\n  chars.nilChar,\n  chars.nilPremitive,\n  chars.missingChar,\n  chars.missingPremitive,\n  chars.boundryChar,\n  chars.emptyChar,\n  chars.emptyValue,\n  chars.arrayEnd,\n  chars.objStart,\n  chars.arrStart,\n];\n\nconst _e = function(node, e_schema, options) {\n  if (typeof e_schema === 'string') {\n    //premitive\n    if (node && node[0] && node[0].val !== undefined) {\n      return getValue(node[0].val, e_schema);\n    } else {\n      return getValue(node, e_schema);\n    }\n  } else {\n    const hasValidData = hasData(node);\n    if (hasValidData === true) {\n      let str = '';\n      if (Array.isArray(e_schema)) {\n        //attributes can't be repeated. hence check in children tags only\n        str += chars.arrStart;\n        const itemSchema = e_schema[0];\n        //var itemSchemaType = itemSchema;\n        const arr_len = node.length;\n\n        if (typeof itemSchema === 'string') {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = getValue(node[arr_i].val, itemSchema);\n            str = processValue(str, r);\n          }\n        } else {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = _e(node[arr_i], itemSchema, options);\n            str = processValue(str, r);\n          }\n        }\n        str += chars.arrayEnd; //indicates that next item is not array item\n      } else {\n        //object\n        str += chars.objStart;\n        const keys = Object.keys(e_schema);\n        if (Array.isArray(node)) {\n          node = node[0];\n        }\n        for (let i in keys) {\n          const key = keys[i];\n          //a property defined in schema can be present either in attrsMap or children tags\n          //options.textNodeName will not present in both maps, take it's value from val\n          //options.attrNodeName will be present in attrsMap\n          let r;\n          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {\n            r = _e(node.attrsMap[key], e_schema[key], options);\n          } else if (key === options.textNodeName) {\n            r = _e(node.val, e_schema[key], options);\n          } else {\n            r = _e(node.child[key], e_schema[key], options);\n          }\n          str = processValue(str, r);\n        }\n      }\n      return str;\n    } else {\n      return hasValidData;\n    }\n  }\n};\n\nconst getValue = function(a /*, type*/) {\n  switch (a) {\n    case undefined:\n      return chars.missingPremitive;\n    case null:\n      return chars.nilPremitive;\n    case '':\n      return chars.emptyValue;\n    default:\n      return a;\n  }\n};\n\nconst processValue = function(str, r) {\n  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {\n    str += chars.boundryChar;\n  }\n  return str + r;\n};\n\nconst isAppChar = function(ch) {\n  return charsArr.indexOf(ch) !== -1;\n};\n\nfunction hasData(jObj) {\n  if (jObj === undefined) {\n    return chars.missingChar;\n  } else if (jObj === null) {\n    return chars.nilChar;\n  } else if (\n    jObj.child &&\n    Object.keys(jObj.child).length === 0 &&\n    (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)\n  ) {\n    return chars.emptyChar;\n  } else {\n    return true;\n  }\n}\n\nconst x2j = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\n\nconst convert2nimn = function(node, e_schema, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  return _e(node, e_schema, options);\n};\n\nexports.convert2nimn = convert2nimn;\n","'use strict';\n\nconst util = require('./util');\n\nconst convertToJson = function(node, options, parentTagName) {\n  const jObj = {};\n\n  // when no child node or attr is present\n  if ((!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {\n    return util.isExist(node.val) ? node.val : '';\n  }\n\n  // otherwise create a textnode if node has some text\n  if (util.isExist(node.val) && !(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n    const asArray = util.isTagNameInArrayMode(node.tagname, options.arrayMode, parentTagName)\n    jObj[options.textNodeName] = asArray ? [node.val] : node.val;\n  }\n\n  util.merge(jObj, node.attrsMap, options.arrayMode);\n\n  const keys = Object.keys(node.child);\n  for (let index = 0; index < keys.length; index++) {\n    const tagName = keys[index];\n    if (node.child[tagName] && node.child[tagName].length > 1) {\n      jObj[tagName] = [];\n      for (let tag in node.child[tagName]) {\n        if (node.child[tagName].hasOwnProperty(tag)) {\n          jObj[tagName].push(convertToJson(node.child[tagName][tag], options, tagName));\n        }\n      }\n    } else {\n      const result = convertToJson(node.child[tagName][0], options, tagName);\n      const asArray = (options.arrayMode === true && typeof result === 'object') || util.isTagNameInArrayMode(tagName, options.arrayMode, parentTagName);\n      jObj[tagName] = asArray ? [result] : result;\n    }\n  }\n\n  //add value\n  return jObj;\n};\n\nexports.convertToJson = convertToJson;\n","'use strict';\n\nconst util = require('./util');\nconst buildOptions = require('./util').buildOptions;\nconst x2j = require('./xmlstr2xmlnode');\n\n//TODO: do it later\nconst convertToJsonString = function(node, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n\n  options.indentBy = options.indentBy || '';\n  return _cToJsonStr(node, options, 0);\n};\n\nconst _cToJsonStr = function(node, options, level) {\n  let jObj = '{';\n\n  //traver through all the children\n  const keys = Object.keys(node.child);\n\n  for (let index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj += '\"' + tagname + '\" : [ ';\n      for (var tag in node.child[tagname]) {\n        jObj += _cToJsonStr(node.child[tagname][tag], options) + ' , ';\n      }\n      jObj = jObj.substr(0, jObj.length - 1) + ' ] '; //remove extra comma in last\n    } else {\n      jObj += '\"' + tagname + '\" : ' + _cToJsonStr(node.child[tagname][0], options) + ' ,';\n    }\n  }\n  util.merge(jObj, node.attrsMap);\n  //add attrsMap as new children\n  if (util.isEmptyObject(jObj)) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        jObj += '\"' + options.textNodeName + '\" : ' + stringval(node.val);\n      }\n    }\n  }\n  //add value\n  if (jObj[jObj.length - 1] === ',') {\n    jObj = jObj.substr(0, jObj.length - 2);\n  }\n  return jObj + '}';\n};\n\nfunction stringval(v) {\n  if (v === true || v === false || !isNaN(v)) {\n    return v;\n  } else {\n    return '\"' + v + '\"';\n  }\n}\n\nfunction indentate(options, level) {\n  return options.indentBy.repeat(level);\n}\n\nexports.convertToJsonString = convertToJsonString;\n","'use strict';\n\nconst nodeToJson = require('./node2json');\nconst xmlToNodeobj = require('./xmlstr2xmlnode');\nconst x2xmlnode = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\nconst validator = require('./validator');\n\nexports.parse = function(xmlData, options, validationOption) {\n  if( validationOption){\n    if(validationOption === true) validationOption = {}\n    \n    const result = validator.validate(xmlData, validationOption);\n    if (result !== true) {\n      throw Error( result.err.msg)\n    }\n  }\n  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);\n  const traversableObj = xmlToNodeobj.getTraversalObj(xmlData, options)\n  //print(traversableObj, \"  \");\n  return nodeToJson.convertToJson(traversableObj, options);\n};\nexports.convertTonimn = require('./nimndata').convert2nimn;\nexports.getTraversalObj = xmlToNodeobj.getTraversalObj;\nexports.convertToJson = nodeToJson.convertToJson;\nexports.convertToJsonString = require('./node2json_str').convertToJsonString;\nexports.validate = validator.validate;\nexports.j2xParser = require('./json2xml');\nexports.parseToNimn = function(xmlData, schema, options) {\n  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);\n};\n\n\nfunction print(xmlNode, indentation){\n  if(xmlNode){\n    console.log(indentation + \"{\")\n    console.log(indentation + \"  \\\"tagName\\\": \\\"\" + xmlNode.tagname + \"\\\", \");\n    if(xmlNode.parent){\n      console.log(indentation + \"  \\\"parent\\\": \\\"\" + xmlNode.parent.tagname  + \"\\\", \");\n    }\n    console.log(indentation + \"  \\\"val\\\": \\\"\" + xmlNode.val  + \"\\\", \");\n    console.log(indentation + \"  \\\"attrs\\\": \" + JSON.stringify(xmlNode.attrsMap,null,4)  + \", \");\n\n    if(xmlNode.child){\n      console.log(indentation + \"\\\"child\\\": {\")\n      const indentation2 = indentation + indentation;\n      Object.keys(xmlNode.child).forEach( function(key) {\n        const node = xmlNode.child[key];\n\n        if(Array.isArray(node)){\n          console.log(indentation +  \"\\\"\"+key+\"\\\" :[\")\n          node.forEach( function(item,index) {\n            //console.log(indentation + \" \\\"\"+index+\"\\\" : [\")\n            print(item, indentation2);\n          })\n          console.log(indentation + \"],\")  \n        }else{\n          console.log(indentation + \" \\\"\"+key+\"\\\" : {\")\n          print(node, indentation2);\n          console.log(indentation + \"},\")  \n        }\n      });\n      console.log(indentation + \"},\")\n    }\n    console.log(indentation + \"},\")\n  }\n}\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.buildOptions = function(options, defaultOptions, props) {\n  var newOptions = {};\n  if (!options) {\n    return defaultOptions; //if there are not options\n  }\n\n  for (let i = 0; i < props.length; i++) {\n    if (options[props[i]] !== undefined) {\n      newOptions[props[i]] = options[props[i]];\n    } else {\n      newOptions[props[i]] = defaultOptions[props[i]];\n    }\n  }\n  return newOptions;\n};\n\n/**\n * Check if a tag name should be treated as array\n *\n * @param tagName the node tagname\n * @param arrayMode the array mode option\n * @param parentTagName the parent tag name\n * @returns {boolean} true if node should be parsed as array\n */\nexports.isTagNameInArrayMode = function (tagName, arrayMode, parentTagName) {\n  if (arrayMode === false) {\n    return false;\n  } else if (arrayMode instanceof RegExp) {\n    return arrayMode.test(tagName);\n  } else if (typeof arrayMode === 'function') {\n    return !!arrayMode(tagName, parentTagName);\n  }\n\n  return arrayMode === \"strict\";\n}\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n};\n\nconst props = ['allowBooleanAttributes'];\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = util.buildOptions(options, defaultOptions, props);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n\n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"There is an unnecessary space between tag name and backward slash '</ ..'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, i));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg) {\n              return getErrorObject('InvalidTag', \"Closing tag '\"+otg+\"' is expected inplace of '\"+tagName+\"'.\", getLineNumberForPosition(xmlData, i));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else {\n            tags.push(tagName);\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if (xmlData[i] === ' ' || xmlData[i] === '\\t' || xmlData[i] === '\\n' || xmlData[i] === '\\r') {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  } else if (tags.length > 0) {\n    return getErrorObject('InvalidXml', \"Invalid '\"+JSON.stringify(tags, null, 4).replace(/\\r?\\n/g, '')+\"' found.\", 1);\n  }\n\n  return true;\n};\n\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  var start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      var tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nvar doubleQuote = '\"';\nvar singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n        continue;\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(attrStr, matches[i][0]))\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  var lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return lines.length;\n}\n\n//this function returns the position of the last character of match within attrStr\nfunction getPositionFromMatch(attrStr, match) {\n  return attrStr.indexOf(match) + match.length;\n}\n","'use strict';\n\nmodule.exports = function(tagname, parent, val) {\n  this.tagname = tagname;\n  this.parent = parent;\n  this.child = {}; //child tags\n  this.attrsMap = {}; //attributes map\n  this.val = val; //text only\n  this.addChild = function(child) {\n    if (Array.isArray(this.child[child.tagname])) {\n      //already presents\n      this.child[child.tagname].push(child);\n    } else {\n      this.child[child.tagname] = [child];\n    }\n  };\n};\n","'use strict';\n\nconst util = require('./util');\nconst buildOptions = require('./util').buildOptions;\nconst xmlNode = require('./xmlNode');\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n  Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n  Number.parseFloat = window.parseFloat;\n}\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  ignoreNameSpace: false,\n  allowBooleanAttributes: false, //a tag can have attributes without any value\n  //ignoreRootElement : false,\n  parseNodeValue: true,\n  parseAttributeValue: false,\n  arrayMode: false,\n  trimValues: true, //Trim string values of tag and attributes\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  tagValueProcessor: function(a, tagName) {\n    return a;\n  },\n  attrValueProcessor: function(a, attrName) {\n    return a;\n  },\n  stopNodes: []\n  //decodeStrict: false,\n};\n\nexports.defaultOptions = defaultOptions;\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'ignoreNameSpace',\n  'allowBooleanAttributes',\n  'parseNodeValue',\n  'parseAttributeValue',\n  'arrayMode',\n  'trimValues',\n  'cdataTagName',\n  'cdataPositionChar',\n  'tagValueProcessor',\n  'attrValueProcessor',\n  'parseTrueNumberOnly',\n  'stopNodes'\n];\nexports.props = props;\n\n/**\n * Trim -> valueProcessor -> parse value\n * @param {string} tagName\n * @param {string} val\n * @param {object} options\n */\nfunction processTagValue(tagName, val, options) {\n  if (val) {\n    if (options.trimValues) {\n      val = val.trim();\n    }\n    val = options.tagValueProcessor(val, tagName);\n    val = parseValue(val, options.parseNodeValue, options.parseTrueNumberOnly);\n  }\n\n  return val;\n}\n\nfunction resolveNameSpace(tagname, options) {\n  if (options.ignoreNameSpace) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\nfunction parseValue(val, shouldParse, parseTrueNumberOnly) {\n  if (shouldParse && typeof val === 'string') {\n    let parsed;\n    if (val.trim() === '' || isNaN(val)) {\n      parsed = val === 'true' ? true : val === 'false' ? false : val;\n    } else {\n      if (val.indexOf('0x') !== -1) {\n        //support hexa decimal\n        parsed = Number.parseInt(val, 16);\n      } else if (val.indexOf('.') !== -1) {\n        parsed = Number.parseFloat(val);\n        val = val.replace(/\\.?0+$/, \"\");\n      } else {\n        parsed = Number.parseInt(val, 10);\n      }\n      if (parseTrueNumberOnly) {\n        parsed = String(parsed) === val ? parsed : val;\n      }\n    }\n    return parsed;\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])(.*?)\\\\3)?', 'g');\n\nfunction buildAttributesMap(attrStr, options) {\n  if (!options.ignoreAttributes && typeof attrStr === 'string') {\n    attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = resolveNameSpace(matches[i][1], options);\n      if (attrName.length) {\n        if (matches[i][4] !== undefined) {\n          if (options.trimValues) {\n            matches[i][4] = matches[i][4].trim();\n          }\n          matches[i][4] = options.attrValueProcessor(matches[i][4], attrName);\n          attrs[options.attributeNamePrefix + attrName] = parseValue(\n            matches[i][4],\n            options.parseAttributeValue,\n            options.parseTrueNumberOnly\n          );\n        } else if (options.allowBooleanAttributes) {\n          attrs[options.attributeNamePrefix + attrName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (options.attrNodeName) {\n      const attrCollection = {};\n      attrCollection[options.attrNodeName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst getTraversalObj = function(xmlData, options) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\");\n  options = buildOptions(options, defaultOptions, props);\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n\n//function match(xmlData){\n  for(let i=0; i< xmlData.length; i++){\n    const ch = xmlData[i];\n    if(ch === '<'){\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(options.ignoreNameSpace){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        /* if (currentNode.parent) {\n          currentNode.parent.val = util.getValue(currentNode.parent.val) + '' + processTagValue2(tagName, textData , options);\n        } */\n        if(currentNode){\n          if(currentNode.val){\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(tagName, textData , options);\n          }else{\n            currentNode.val = processTagValue(tagName, textData , options);\n          }\n        }\n\n        if (options.stopNodes.length && options.stopNodes.includes(currentNode.tagname)) {\n          currentNode.child = []\n          if (currentNode.attrsMap == undefined) { currentNode.attrsMap = {}}\n          currentNode.val = xmlData.substr(currentNode.startIndex + 1, i - currentNode.startIndex - 1)\n        }\n        currentNode = currentNode.parent;\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n        i = findClosingIndex(xmlData, \"?>\", i, \"Pi Tag is not closed.\")\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        i = findClosingIndex(xmlData, \"-->\", i, \"Comment is not closed.\")\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"DOCTYPE is not closed.\")\n        const tagExp = xmlData.substring(i, closeIndex);\n        if(tagExp.indexOf(\"[\") >= 0){\n          i = xmlData.indexOf(\"]>\", i) + 1;\n        }else{\n          i = closeIndex;\n        }\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        //considerations\n        //1. CDATA will always have parent node\n        //2. A tag with CDATA is not a leaf node so it's value would be string type.\n        if(textData){\n          currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(currentNode.tagname, textData , options);\n          textData = \"\";\n        }\n\n        if (options.cdataTagName) {\n          //add cdata node\n          const childNode = new xmlNode(options.cdataTagName, currentNode, tagExp);\n          currentNode.addChild(childNode);\n          //for backtracking\n          currentNode.val = util.getValue(currentNode.val) + options.cdataPositionChar;\n          //add rest value to parent node\n          if (tagExp) {\n            childNode.val = tagExp;\n          }\n        } else {\n          currentNode.val = (currentNode.val || '') + (tagExp || '');\n        }\n\n        i = closeIndex + 2;\n      }else {//Opening tag\n        const result = closingIndexForOpeningTag(xmlData, i+1)\n        let tagExp = result.data;\n        const closeIndex = result.index;\n        const separatorIndex = tagExp.indexOf(\" \");\n        let tagName = tagExp;\n        let shouldBuildAttributesMap = true;\n        if(separatorIndex !== -1){\n          tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n          tagExp = tagExp.substr(separatorIndex + 1);\n        }\n\n        if(options.ignoreNameSpace){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n            shouldBuildAttributesMap = tagName !== result.data.substr(colonIndex + 1);\n          }\n        }\n\n        //save text to parent node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue( currentNode.tagname, textData, options);\n          }\n        }\n\n        if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){//selfClosing tag\n\n          if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n            tagName = tagName.substr(0, tagName.length - 1);\n            tagExp = tagName;\n          }else{\n            tagExp = tagExp.substr(0, tagExp.length - 1);\n          }\n\n          const childNode = new xmlNode(tagName, currentNode, '');\n          if(tagName !== tagExp){\n            childNode.attrsMap = buildAttributesMap(tagExp, options);\n          }\n          currentNode.addChild(childNode);\n        }else{//opening tag\n\n          const childNode = new xmlNode( tagName, currentNode );\n          if (options.stopNodes.length && options.stopNodes.includes(childNode.tagname)) {\n            childNode.startIndex=closeIndex;\n          }\n          if(tagName !== tagExp && shouldBuildAttributesMap){\n            childNode.attrsMap = buildAttributesMap(tagExp, options);\n          }\n          currentNode.addChild(childNode);\n          currentNode = childNode;\n        }\n        textData = \"\";\n        i = closeIndex;\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj;\n}\n\nfunction closingIndexForOpeningTag(data, i){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < data.length; index++) {\n    let ch = data[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === '>') {\n        return {\n          data: tagExp,\n          index: index\n        }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nexports.getTraversalObj = getTraversalObj;\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __spreadArray;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __classPrivateFieldIn;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        var desc = Object.getOwnPropertyDescriptor(m, k);\r\n        if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n            desc = { enumerable: true, get: function() { return m[k]; } };\r\n        }\r\n        Object.defineProperty(o, k2, desc);\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __spreadArray = function (to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, state, kind, f) {\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, state, value, kind, f) {\r\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n    };\r\n\r\n    __classPrivateFieldIn = function (state, receiver) {\r\n        if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n        return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__spreadArray\", __spreadArray);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n    exporter(\"__classPrivateFieldIn\", __classPrivateFieldIn);\r\n});\r\n","module.exports = require('./lib/tunnel');\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('md5').update(bytes).digest();\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\n\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    _crypto.default.randomFillSync(rnds8Pool);\n\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('sha1').update(bytes).digest();\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nvar _default = version;\nexports.default = _default;",null,"module.exports = require(\"assert\");","module.exports = require(\"buffer\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"http2\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"process\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","import fs from 'fs';\nimport { getInput, setFailed, saveState, debug, info } from '@actions/core';\nimport { CloudFrontClient, CreateInvalidationCommand, GetDistributionConfigCommand, UpdateDistributionCommand } from '@aws-sdk/client-cloudfront';\nconst mainFn = async () => {\n    let originPath = getInput('ORIGIN_PATH', { required: true });\n    const distributionId = getInput('AWS_DISTRIBUTION_ID', { required: true });\n    const originPathIndex = parseInt(getInput('ORIGIN_PATH_INDEX') || '0');\n    const awsRegion = getInput('AWS_REGION') || 'us-east-1';\n    const awsS3Uri = process.env.AWS_S3_PATH;\n    const folderPath = process.env.FOLDER_PATH;\n    debug(`folderPath: ${folderPath}`);\n    info(`AWS_ACCESS_KEY_ID: is defined? ${process.env.AWS_ACCESS_KEY_ID ? true : false}`);\n    const errorList = [];\n    if (!distributionId) {\n        errorList.push('AWS_DISTRIBUTION_ID is required');\n    }\n    if (!originPath || !folderPath) {\n        errorList.push('ORIGIN_PATH is required');\n    }\n    if (errorList.length > 0) {\n        throw new Error(errorList.join('\\n'));\n    }\n    if (awsS3Uri) {\n        info(`main:awsS3Uri: ${awsS3Uri}`);\n    }\n    try {\n        debug(`**** File List ****`);\n        //joining path of directory \n        const directoryPath = './';\n        //passsing directoryPath and callback function\n        fs.readdir(directoryPath, (err, files) => {\n            //handling error\n            if (err) {\n                debug('Unable to scan directory: ' + err);\n            }\n            else {\n                debug(`dir: ${process.cwd()}`);\n                debug(files.join('\\n'));\n            }\n            debug(`**** EOF File List ****`);\n        });\n    }\n    catch (error) {\n        debug(error);\n    }\n    const client = new CloudFrontClient({ region: awsRegion });\n    const getDistributionConfigCmd = new GetDistributionConfigCommand({ Id: distributionId });\n    const { DistributionConfig, ETag } = await client.send(getDistributionConfigCmd);\n    const currentOriginPath = DistributionConfig.Origins.Items[originPathIndex].OriginPath;\n    debug(`Current OriginPath: ${currentOriginPath}`);\n    DistributionConfig.Origins.Items[originPathIndex].OriginPath = folderPath || originPath;\n    debug(`New OriginPath: ${folderPath || originPath}`);\n    info(`Updating Distribution OriginPath of index ${originPathIndex}...`);\n    const updateDistributionCmd = new UpdateDistributionCommand({\n        DistributionConfig,\n        Id: distributionId,\n        IfMatch: ETag\n    });\n    const updateRes = await client.send(updateDistributionCmd);\n    debug(`Update Distribution response statusCode: ${updateRes.$metadata.httpStatusCode}`);\n    info(`Requesting distribution invalidation...`);\n    const createInvalidationCmd = new CreateInvalidationCommand({\n        DistributionId: distributionId,\n        InvalidationBatch: {\n            CallerReference: new Date().toISOString(),\n            Paths: {\n                Items: ['/*'],\n                Quantity: 1\n            }\n        }\n    });\n    const invalidationRes = await client.send(createInvalidationCmd);\n    debug(`Invalidation response statusCode: ${invalidationRes.$metadata.httpStatusCode}`);\n    info(\"End of the job..\");\n};\nmainFn()\n    .then(() => {\n    console.log('Done...');\n    saveState('done', 'done');\n})\n    .catch((err) => {\n    console.error(err);\n    setFailed(err);\n});\n"],"names":[],"sourceRoot":""}